

var PrizePoolFactory = (function () {
    function PrizePoolFactory() {
        if (window.ethereum != null) {
            this._web3 = new Web3(window.ethereum);
            //https://rpc.sx.technology/ 
        } else {
            this._web3 = new Web3('https://rpc.sx.technology');
        }

    }

    // This function creates a pool contract, and then https://github.com/Riiz0/AX_PrizePool/blob/main/Prizepool.sol#L16
    PrizePoolFactory.prototype.createLeague = async function (_axToken, _entryFeeAmount, _leagueStartTime, _leagueEndTime) {
        let prizePoolAddress;
        const accounts = await this._web3.eth.getAccounts();
        const response = [
            {
                "inputs": [
                    {
                        "internalType": "address",
                        "name": "_axToken",
                        "type": "address"
                    },
                    {
                        "internalType": "uint256",
                        "name": "_entryFeeAmount",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "_leagueStartTime",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "_leagueEndTime",
                        "type": "uint256"
                    }
                ],
                "stateMutability": "nonpayable",
                "type": "constructor"
            },
            {
                "inputs": [],
                "name": "admin",
                "outputs": [
                    {
                        "internalType": "address",
                        "name": "",
                        "type": "address"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "approveAmount",
                "outputs": [
                    {
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "axToken",
                "outputs": [
                    {
                        "internalType": "contract IERC20",
                        "name": "",
                        "type": "address"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "address",
                        "name": "winner",
                        "type": "address"
                    }
                ],
                "name": "distributePrize",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "entryFeeAmount",
                "outputs": [
                    {
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "joinLeague",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "leagueEndTime",
                "outputs": [
                    {
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "leagueStartTime",
                "outputs": [
                    {
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "myBalance",
                "outputs": [
                    {
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "address",
                        "name": "",
                        "type": "address"
                    }
                ],
                "name": "stakedAmounts",
                "outputs": [
                    {
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "withdrawBeforeLeagueStarts",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
            }
        ];
        const PrizePoolContract = new this._web3.eth.Contract(response);
        // These arguments can be found here: 
        await (PrizePoolContract.deploy({
            data: '60806040523480156200001157600080fd5b506040516200142a3803806200142a833981810160405281019062000037919062000191565b836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a764000083620000ce919062000232565b6002819055508160038190555080600481905550505050506200027d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200011e82620000f1565b9050919050565b620001308162000111565b81146200013c57600080fd5b50565b600081519050620001508162000125565b92915050565b6000819050919050565b6200016b8162000156565b81146200017757600080fd5b50565b6000815190506200018b8162000160565b92915050565b60008060008060808587031215620001ae57620001ad620000ec565b5b6000620001be878288016200013f565b9450506020620001d1878288016200017a565b9350506040620001e4878288016200017a565b9250506060620001f7878288016200017a565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200023f8262000156565b91506200024c8362000156565b92508282026200025c8162000156565b9150828204841483151762000276576200027562000203565b5b5092915050565b61119d806200028d6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063c4e5feb611610071578063c4e5feb614610140578063c9116b691461015e578063c99fea941461017c578063ce70108714610186578063f851a440146101a4578063fceb0f3b146101c2576100a9565b8063100500dc146100ae57806310c1c103146100cc5780631d518c5e146100fc578063223943aa1461011a5780639d43dc4614610136575b600080fd5b6100b66101e0565b6040516100c39190610a45565b60405180910390f35b6100e660048036038101906100e19190610ac3565b6101e6565b6040516100f39190610a45565b60405180910390f35b6101046101fe565b6040516101119190610a45565b60405180910390f35b610134600480360381019061012f9190610ac3565b610204565b005b61013e6104c4565b005b6101486106bb565b6040516101559190610a45565b60405180910390f35b6101666106c1565b6040516101739190610a45565b60405180910390f35b6101846106c7565b005b61018e6109dc565b60405161019b9190610b4f565b60405180910390f35b6101ac610a00565b6040516101b99190610b79565b60405180910390f35b6101ca610a26565b6040516101d79190610a45565b60405180910390f35b60045481565b60076020528060005260406000206000915090505481565b60035481565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610272576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026990610bf1565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102ce9190610b79565b602060405180830381865afa1580156102eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030f9190610c3d565b90506000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610398576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038f90610cb6565b60405180910390fd5b808210156103db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d290610d48565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040518363ffffffff1660e01b8152600401610439929190610d68565b6020604051808303816000875af1158015610458573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047c9190610dc9565b9050806104be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b590610e68565b60405180910390fd5b50505050565b6003544210610508576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ff90610ed4565b60405180910390fd5b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161058f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058690610f40565b60405180910390fd5b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610632929190610d68565b6020604051808303816000875af1158015610651573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106759190610dc9565b9050806106b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ae90610fac565b60405180910390fd5b5050565b60025481565b60065481565b60045442111561070c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070390611018565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161076a929190611038565b602060405180830381865afa158015610787573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ab9190610c3d565b90508060058190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161080d9190610b79565b602060405180830381865afa15801561082a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084e9190610c3d565b600681905550600254811015610899576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610890906110ad565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33306002546040518463ffffffff1660e01b81526004016108fb939291906110cd565b6020604051808303816000875af115801561091a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093e9190610dc9565b905080610980576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097790610fac565b60405180910390fd5b600254600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109d19190611133565b925050819055505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b6000819050919050565b610a3f81610a2c565b82525050565b6000602082019050610a5a6000830184610a36565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9082610a65565b9050919050565b610aa081610a85565b8114610aab57600080fd5b50565b600081359050610abd81610a97565b92915050565b600060208284031215610ad957610ad8610a60565b5b6000610ae784828501610aae565b91505092915050565b6000819050919050565b6000610b15610b10610b0b84610a65565b610af0565b610a65565b9050919050565b6000610b2782610afa565b9050919050565b6000610b3982610b1c565b9050919050565b610b4981610b2e565b82525050565b6000602082019050610b646000830184610b40565b92915050565b610b7381610a85565b82525050565b6000602082019050610b8e6000830184610b6a565b92915050565b600082825260208201905092915050565b7f4f6e6c792077696e6e65722063616e2064697374726962757465207072697a65600082015250565b6000610bdb602083610b94565b9150610be682610ba5565b602082019050919050565b60006020820190508181036000830152610c0a81610bce565b9050919050565b610c1a81610a2c565b8114610c2557600080fd5b50565b600081519050610c3781610c11565b92915050565b600060208284031215610c5357610c52610a60565b5b6000610c6184828501610c28565b91505092915050565b7f57696e6e657220686173206e6f207374616b656420616d6f756e740000000000600082015250565b6000610ca0601b83610b94565b9150610cab82610c6a565b602082019050919050565b60006020820190508181036000830152610ccf81610c93565b9050919050565b7f4e6f7420656e6f75676820415820746f6b656e7320746f20646973747269627560008201527f7465000000000000000000000000000000000000000000000000000000000000602082015250565b6000610d32602283610b94565b9150610d3d82610cd6565b604082019050919050565b60006020820190508181036000830152610d6181610d25565b9050919050565b6000604082019050610d7d6000830185610b6a565b610d8a6020830184610a36565b9392505050565b60008115159050919050565b610da681610d91565b8114610db157600080fd5b50565b600081519050610dc381610d9d565b92915050565b600060208284031215610ddf57610dde610a60565b5b6000610ded84828501610db4565b91505092915050565b7f4661696c656420746f207472616e7366657220415820746f6b656e7320746f2060008201527f77696e6e65720000000000000000000000000000000000000000000000000000602082015250565b6000610e52602683610b94565b9150610e5d82610df6565b604082019050919050565b60006020820190508181036000830152610e8181610e45565b9050919050565b7f477261636520706572696f642068617320656e64656400000000000000000000600082015250565b6000610ebe601683610b94565b9150610ec982610e88565b602082019050919050565b60006020820190508181036000830152610eed81610eb1565b9050919050565b7f4e6f207374616b656420616d6f756e7420746f20776974686472617700000000600082015250565b6000610f2a601c83610b94565b9150610f3582610ef4565b602082019050919050565b60006020820190508181036000830152610f5981610f1d565b9050919050565b7f4661696c656420746f207472616e7366657220415820746f6b656e7300000000600082015250565b6000610f96601c83610b94565b9150610fa182610f60565b602082019050919050565b60006020820190508181036000830152610fc581610f89565b9050919050565b7f4c65616775652068617320616c726561647920656e6465640000000000000000600082015250565b6000611002601883610b94565b915061100d82610fcc565b602082019050919050565b6000602082019050818103600083015261103181610ff5565b9050919050565b600060408201905061104d6000830185610b6a565b61105a6020830184610b6a565b9392505050565b7f496e73756666696369656e7420415820746f6b656e20616c6c6f77616e636500600082015250565b6000611097601f83610b94565b91506110a282611061565b602082019050919050565b600060208201905081810360008301526110c68161108a565b9050919050565b60006060820190506110e26000830186610b6a565b6110ef6020830185610b6a565b6110fc6040830184610a36565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061113e82610a2c565b915061114983610a2c565b925082820190508082111561116157611160611104565b5b9291505056fea2646970667358221220d8011b5c062f5ada802cabd39823754060014630aedf31a7a70afd408ddbd33764736f6c63430008120033',
            arguments: [_axToken, _entryFeeAmount, _leagueStartTime, _leagueEndTime]
        })
            .send({
                from: accounts[0],
                gas: 20000000
            })
            .on('receipt', function (receipt) {
                console.log(receipt.contractAddress)
            }).then(function (newContractInstance) {
                prizePoolAddress = newContractInstance.options.address
            }));

        console.log(prizePoolAddress);
        return prizePoolAddress;
    }
    return PrizePoolFactory;
})();