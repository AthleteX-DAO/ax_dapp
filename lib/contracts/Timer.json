{
  "contractName": "Timer",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "setCurrentTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getCurrentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setCurrentTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getCurrentTime()\":{\"returns\":{\"_0\":\"uint256 for the current Testable timestamp.\"}},\"setCurrentTime(uint256)\":{\"details\":\"Will revert if not running in test mode.\",\"params\":{\"time\":\"timestamp to set `currentTime` to.\"}}},\"title\":\"Universal store of current contract time for testing environments.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getCurrentTime()\":{\"notice\":\"Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp.\"},\"setCurrentTime(uint256)\":{\"notice\":\"Sets the current time.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/kamto/code/protocol/packages/core/contracts/common/implementation/Timer.sol\":\"Timer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":199},\"remappings\":[]},\"sources\":{\"/home/kamto/code/protocol/packages/core/contracts/common/implementation/Timer.sol\":{\"keccak256\":\"0x3ce8e6a8e741d7a6e2a18be49ab33a805f163336abbb0d05bee9c2f54a9fbfc5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://55b29f5c7f3aa27f329981471e563487c65ebcbd8e76c3e2fc50f73f0fd62a2f\",\"dweb:/ipfs/QmW7bCgfZYmDFbdVsbaoyiewyHemzoTkbofCLqg8YnZPgk\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b504260005560ab806100226000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806322f8e56614603757806329cb924d146049575b600080fd5b60476042366004605e565b600055565b005b60005460405190815260200160405180910390f35b600060208284031215606e578081fd5b503591905056fea26469706673582212203fb458dde4811ca3d37463d7344358003b3902345b2a069fdf049db0770518e564736f6c63430008040033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060325760003560e01c806322f8e56614603757806329cb924d146049575b600080fd5b60476042366004605e565b600055565b005b60005460405190815260200160405180910390f35b600060208284031215606e578081fd5b503591905056fea26469706673582212203fb458dde4811ca3d37463d7344358003b3902345b2a069fdf049db0770518e564736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:388:141",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:141",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:120:141",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:141",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:141"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:141"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:141"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:141"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:141"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:141"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:141"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:141",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:141"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:141"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "165:33:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "188:9:141"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "175:12:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "175:23:141"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "165:6:141"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:141",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:141",
                "type": ""
              }
            ],
            "src": "14:190:141"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "310:76:141",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "320:26:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "332:9:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "343:2:141",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "328:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "328:18:141"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "320:4:141"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "362:9:141"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "373:6:141"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "355:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "355:25:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "355:25:141"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "279:9:141",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "290:6:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "301:4:141",
                "type": ""
              }
            ],
            "src": "209:177:141"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
      "id": 141,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "152:746:24:-:0;;;207:101;;;;;;;;;-1:-1:-1;245:15:24;231:11;:29;152:746;;;;;;",
  "deployedSourceMap": "152:746:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;475:82;;;;;;:::i;:::-;532:11;:18;475:82;;;805:91;852:7;878:11;805:91;;355:25:141;;;343:2;328:18;805:91:24;;;;;;;14:190:141;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;-1:-1:-1;175:23:141;;84:120;-1:-1:-1;84:120:141:o",
  "source": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\n/**\n * @title Universal store of current contract time for testing environments.\n */\ncontract Timer {\n    uint256 private currentTime;\n\n    constructor() {\n        currentTime = block.timestamp; // solhint-disable-line not-rely-on-time\n    }\n\n    /**\n     * @notice Sets the current time.\n     * @dev Will revert if not running in test mode.\n     * @param time timestamp to set `currentTime` to.\n     */\n    function setCurrentTime(uint256 time) external {\n        currentTime = time;\n    }\n\n    /**\n     * @notice Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode.\n     * Otherwise, it will return the block timestamp.\n     * @return uint256 for the current Testable timestamp.\n     */\n    function getCurrentTime() public view returns (uint256) {\n        return currentTime;\n    }\n}\n",
  "sourcePath": "/home/kamto/code/protocol/packages/core/contracts/common/implementation/Timer.sol",
  "ast": {
    "absolutePath": "/home/kamto/code/protocol/packages/core/contracts/common/implementation/Timer.sol",
    "exportedSymbols": {
      "Timer": [
        6996
      ]
    },
    "id": 6997,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6963,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:24"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6964,
          "nodeType": "StructuredDocumentation",
          "src": "67:84:24",
          "text": " @title Universal store of current contract time for testing environments."
        },
        "fullyImplemented": true,
        "id": 6996,
        "linearizedBaseContracts": [
          6996
        ],
        "name": "Timer",
        "nameLocation": "161:5:24",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6966,
            "mutability": "mutable",
            "name": "currentTime",
            "nameLocation": "189:11:24",
            "nodeType": "VariableDeclaration",
            "scope": 6996,
            "src": "173:27:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6965,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "173:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 6974,
              "nodeType": "Block",
              "src": "221:87:24",
              "statements": [
                {
                  "expression": {
                    "id": 6972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6969,
                      "name": "currentTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6966,
                      "src": "231:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 6970,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "245:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 6971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "245:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "231:29:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6973,
                  "nodeType": "ExpressionStatement",
                  "src": "231:29:24"
                }
              ]
            },
            "id": 6975,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "218:2:24"
            },
            "returnParameters": {
              "id": 6968,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "221:0:24"
            },
            "scope": 6996,
            "src": "207:101:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6985,
              "nodeType": "Block",
              "src": "522:35:24",
              "statements": [
                {
                  "expression": {
                    "id": 6983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6981,
                      "name": "currentTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6966,
                      "src": "532:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6982,
                      "name": "time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6978,
                      "src": "546:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "532:18:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6984,
                  "nodeType": "ExpressionStatement",
                  "src": "532:18:24"
                }
              ]
            },
            "documentation": {
              "id": 6976,
              "nodeType": "StructuredDocumentation",
              "src": "314:156:24",
              "text": " @notice Sets the current time.\n @dev Will revert if not running in test mode.\n @param time timestamp to set `currentTime` to."
            },
            "functionSelector": "22f8e566",
            "id": 6986,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setCurrentTime",
            "nameLocation": "484:14:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6978,
                  "mutability": "mutable",
                  "name": "time",
                  "nameLocation": "507:4:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 6986,
                  "src": "499:12:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6977,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "499:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "498:14:24"
            },
            "returnParameters": {
              "id": 6980,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "522:0:24"
            },
            "scope": 6996,
            "src": "475:82:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6994,
              "nodeType": "Block",
              "src": "861:35:24",
              "statements": [
                {
                  "expression": {
                    "id": 6992,
                    "name": "currentTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6966,
                    "src": "878:11:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6991,
                  "id": 6993,
                  "nodeType": "Return",
                  "src": "871:18:24"
                }
              ]
            },
            "documentation": {
              "id": 6987,
              "nodeType": "StructuredDocumentation",
              "src": "563:237:24",
              "text": " @notice Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode.\n Otherwise, it will return the block timestamp.\n @return uint256 for the current Testable timestamp."
            },
            "functionSelector": "29cb924d",
            "id": 6995,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentTime",
            "nameLocation": "814:14:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "828:2:24"
            },
            "returnParameters": {
              "id": 6991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6990,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6995,
                  "src": "852:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6989,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "852:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "851:9:24"
            },
            "scope": 6996,
            "src": "805:91:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6997,
        "src": "152:746:24",
        "usedErrors": []
      }
    ],
    "src": "42:857:24"
  },
  "legacyAST": {
    "absolutePath": "/home/kamto/code/protocol/packages/core/contracts/common/implementation/Timer.sol",
    "exportedSymbols": {
      "Timer": [
        6996
      ]
    },
    "id": 6997,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6963,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:24"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6964,
          "nodeType": "StructuredDocumentation",
          "src": "67:84:24",
          "text": " @title Universal store of current contract time for testing environments."
        },
        "fullyImplemented": true,
        "id": 6996,
        "linearizedBaseContracts": [
          6996
        ],
        "name": "Timer",
        "nameLocation": "161:5:24",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6966,
            "mutability": "mutable",
            "name": "currentTime",
            "nameLocation": "189:11:24",
            "nodeType": "VariableDeclaration",
            "scope": 6996,
            "src": "173:27:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6965,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "173:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 6974,
              "nodeType": "Block",
              "src": "221:87:24",
              "statements": [
                {
                  "expression": {
                    "id": 6972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6969,
                      "name": "currentTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6966,
                      "src": "231:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 6970,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "245:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 6971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "245:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "231:29:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6973,
                  "nodeType": "ExpressionStatement",
                  "src": "231:29:24"
                }
              ]
            },
            "id": 6975,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "218:2:24"
            },
            "returnParameters": {
              "id": 6968,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "221:0:24"
            },
            "scope": 6996,
            "src": "207:101:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6985,
              "nodeType": "Block",
              "src": "522:35:24",
              "statements": [
                {
                  "expression": {
                    "id": 6983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6981,
                      "name": "currentTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6966,
                      "src": "532:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6982,
                      "name": "time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6978,
                      "src": "546:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "532:18:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6984,
                  "nodeType": "ExpressionStatement",
                  "src": "532:18:24"
                }
              ]
            },
            "documentation": {
              "id": 6976,
              "nodeType": "StructuredDocumentation",
              "src": "314:156:24",
              "text": " @notice Sets the current time.\n @dev Will revert if not running in test mode.\n @param time timestamp to set `currentTime` to."
            },
            "functionSelector": "22f8e566",
            "id": 6986,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setCurrentTime",
            "nameLocation": "484:14:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6978,
                  "mutability": "mutable",
                  "name": "time",
                  "nameLocation": "507:4:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 6986,
                  "src": "499:12:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6977,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "499:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "498:14:24"
            },
            "returnParameters": {
              "id": 6980,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "522:0:24"
            },
            "scope": 6996,
            "src": "475:82:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6994,
              "nodeType": "Block",
              "src": "861:35:24",
              "statements": [
                {
                  "expression": {
                    "id": 6992,
                    "name": "currentTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6966,
                    "src": "878:11:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6991,
                  "id": 6993,
                  "nodeType": "Return",
                  "src": "871:18:24"
                }
              ]
            },
            "documentation": {
              "id": 6987,
              "nodeType": "StructuredDocumentation",
              "src": "563:237:24",
              "text": " @notice Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode.\n Otherwise, it will return the block timestamp.\n @return uint256 for the current Testable timestamp."
            },
            "functionSelector": "29cb924d",
            "id": 6995,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentTime",
            "nameLocation": "814:14:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "828:2:24"
            },
            "returnParameters": {
              "id": 6991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6990,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6995,
                  "src": "852:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6989,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "852:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "851:9:24"
            },
            "scope": 6996,
            "src": "805:91:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6997,
        "src": "152:746:24",
        "usedErrors": []
      }
    ],
    "src": "42:857:24"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "97": {
      "events": {},
      "links": {},
      "address": "0x81b8926A1b92a7B3F1271294eA2B5B546DDE1799",
      "transactionHash": "0x6a238712b36ec577a8f288fa64d7cd7395f5c204b2aee1ee509bfe6353452480"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x35212069283FE0F0914F1b0DfABFf5102ceECb16",
      "transactionHash": "0xe3abee9ff57303fcf80cbd121cbf49e8761effdaf0c148f7e43dc253cd3dda6a"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-07T22:22:59.011Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getCurrentTime()": {
        "returns": {
          "_0": "uint256 for the current Testable timestamp."
        }
      },
      "setCurrentTime(uint256)": {
        "details": "Will revert if not running in test mode.",
        "params": {
          "time": "timestamp to set `currentTime` to."
        }
      }
    },
    "title": "Universal store of current contract time for testing environments.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getCurrentTime()": {
        "notice": "Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp."
      },
      "setCurrentTime(uint256)": {
        "notice": "Sets the current time."
      }
    },
    "version": 1
  }
}