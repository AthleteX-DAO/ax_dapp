{
  "contractName": "TestableTest",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_timerAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "getCurrentTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "setCurrentTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTestableTimeAndBlockTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "testableTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_timerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getCurrentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTestableTimeAndBlockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"testableTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setCurrentTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getCurrentTime()\":{\"returns\":{\"_0\":\"uint for the current Testable timestamp.\"}},\"setCurrentTime(uint256)\":{\"details\":\"Will revert if not running in test mode.\",\"params\":{\"time\":\"timestamp to set current Testable time to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getCurrentTime()\":{\"notice\":\"Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp.\"},\"setCurrentTime(uint256)\":{\"notice\":\"Sets the current time.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/kamto/code/protocol/packages/core/contracts/common/test/TestableTest.sol\":\"TestableTest\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":199},\"remappings\":[]},\"sources\":{\"/home/kamto/code/protocol/packages/core/contracts/common/implementation/Testable.sol\":{\"keccak256\":\"0x4d7a20dbed2393de98a3995830efe284e8a491363ade605c553e7f6db7acf11e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e38019ddf0b6d58e839a2e2dd8fb962c19718c830b793d3fe2221a365dbf7a95\",\"dweb:/ipfs/QmWq1aqF7FPfCNzDN8BPPnvv1fXHXE8ZYRD7YgRzqjrf1v\"]},\"/home/kamto/code/protocol/packages/core/contracts/common/implementation/Timer.sol\":{\"keccak256\":\"0x3ce8e6a8e741d7a6e2a18be49ab33a805f163336abbb0d05bee9c2f54a9fbfc5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://55b29f5c7f3aa27f329981471e563487c65ebcbd8e76c3e2fc50f73f0fd62a2f\",\"dweb:/ipfs/QmW7bCgfZYmDFbdVsbaoyiewyHemzoTkbofCLqg8YnZPgk\"]},\"/home/kamto/code/protocol/packages/core/contracts/common/test/TestableTest.sol\":{\"keccak256\":\"0x40bb9d1300d67e52e0a781fe24934481fcb6db14ba17ab264724d4a77d1e765c\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://95182f4e838ef0d6787c27618ae173817ccc5556fc45c2b3192e045b52e88c49\",\"dweb:/ipfs/QmYocLg4EJCsLHjGMKMk7Fs1FVRoXfsMPi2x9UsRCo2MzC\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516102e93803806102e983398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b610258806100916000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631c39c38d1461005157806322f8e5661461008157806329cb924d14610096578063dc6ff7bd146100ac575b600080fd5b600054610064906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61009461008f3660046101f2565b6100c9565b005b61009e61013f565b604051908152602001610078565b6100b46101df565b60408051928352602083019190915201610078565b6000546001600160a01b03166100de57600080fd5b60005460405163117c72b360e11b8152600481018390526001600160a01b03909116906322f8e56690602401600060405180830381600087803b15801561012457600080fd5b505af1158015610138573d6000803e3d6000fd5b5050505050565b600080546001600160a01b0316156101da5760008054906101000a90046001600160a01b03166001600160a01b03166329cb924d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561019d57600080fd5b505afa1580156101b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d5919061020a565b905090565b504290565b6000806101ea61013f565b924292509050565b600060208284031215610203578081fd5b5035919050565b60006020828403121561021b578081fd5b505191905056fea26469706673582212203ad00b342ca371c4887405b0ad823f12ece8def415c00054763dcc7fbf1da39564736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80631c39c38d1461005157806322f8e5661461008157806329cb924d14610096578063dc6ff7bd146100ac575b600080fd5b600054610064906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61009461008f3660046101f2565b6100c9565b005b61009e61013f565b604051908152602001610078565b6100b46101df565b60408051928352602083019190915201610078565b6000546001600160a01b03166100de57600080fd5b60005460405163117c72b360e11b8152600481018390526001600160a01b03909116906322f8e56690602401600060405180830381600087803b15801561012457600080fd5b505af1158015610138573d6000803e3d6000fd5b5050505050565b600080546001600160a01b0316156101da5760008054906101000a90046001600160a01b03166001600160a01b03166329cb924d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561019d57600080fd5b505afa1580156101b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d5919061020a565b905090565b504290565b6000806101ea61013f565b924292509050565b600060208284031215610203578081fd5b5035919050565b60006020828403121561021b578081fd5b505191905056fea26469706673582212203ad00b342ca371c4887405b0ad823f12ece8def415c00054763dcc7fbf1da39564736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:326:141",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:141",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:229:141",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:141",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:141"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:141"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:141"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:141"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:141"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:141"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:141"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:141",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:141"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:141"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:141"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:141"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:141",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:26:141",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "277:6:141"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:141"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "270:6:141"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "270:22:141"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "270:22:141"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:141"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "238:5:141"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "253:3:141",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "258:1:141",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "249:3:141"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "249:11:141"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "262:1:141",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:3:141"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:19:141"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:141"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:31:141"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "224:2:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:42:141"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "217:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:50:141"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:141"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "303:15:141",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "313:5:141"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:141"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:141",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:141",
                "type": ""
              }
            ],
            "src": "14:310:141"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
      "id": 141,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1048:141",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:141",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:120:141",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:141",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:141"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:141"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:141"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:141"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:141"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:141"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:141"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:141",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:141"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:141"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "165:33:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "188:9:141"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "175:12:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "175:23:141"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "165:6:141"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:141",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:141",
                "type": ""
              }
            ],
            "src": "14:190:141"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "290:113:141",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "336:26:141",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "345:6:141"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "353:6:141"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "338:6:141"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "338:22:141"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "338:22:141"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "311:7:141"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "320:9:141"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "307:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "307:23:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "332:2:141",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "303:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "303:32:141"
                  },
                  "nodeType": "YulIf",
                  "src": "300:2:141"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "371:26:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "387:9:141"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "381:5:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "381:16:141"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "371:6:141"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "256:9:141",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "267:7:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "279:6:141",
                "type": ""
              }
            ],
            "src": "209:194:141"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "509:102:141",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "519:26:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "531:9:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "542:2:141",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "527:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "527:18:141"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "519:4:141"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "561:9:141"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "576:6:141"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "592:3:141",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "597:1:141",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "588:3:141"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "588:11:141"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "601:1:141",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "584:3:141"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "584:19:141"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "572:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "572:32:141"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "554:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "554:51:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "554:51:141"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "478:9:141",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "489:6:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "500:4:141",
                "type": ""
              }
            ],
            "src": "408:203:141"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "717:76:141",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "727:26:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "739:9:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "750:2:141",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "735:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "735:18:141"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "727:4:141"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "769:9:141"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:141"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "762:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "762:25:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "762:25:141"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "686:9:141",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "697:6:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "708:4:141",
                "type": ""
              }
            ],
            "src": "616:177:141"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "927:119:141",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "937:26:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "949:9:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "960:2:141",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "945:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "945:18:141"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "937:4:141"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "979:9:141"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "990:6:141"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "972:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "972:25:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "972:25:141"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1017:9:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1028:2:141",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1013:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1013:18:141"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1033:6:141"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1006:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1006:34:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1006:34:141"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "888:9:141",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "899:6:141",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "907:6:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "918:4:141",
                "type": ""
              }
            ],
            "src": "798:248:141"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n}",
      "id": 141,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "194:374:43:-:0;;;283:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;734:12:22;:28;;-1:-1:-1;;;;;;734:28:22;-1:-1:-1;;;;;734:28:22;;;;;;;;;;194:374:43;;14:310:141;84:6;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:141;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:141:o;:::-;194:374:43;;;;;;",
  "deployedSourceMap": "194:374:43:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;397:27:22;;;;;-1:-1:-1;;;;;397:27:22;;;;;;-1:-1:-1;;;;;572:32:141;;;554:51;;542:2;527:18;397:27:22;;;;;;;;1103:115;;;;;;:::i;:::-;;:::i;:::-;;1463:268;;;:::i;:::-;;;762:25:141;;;750:2;735:18;1463:268:22;717:76:141;350:216:43;;;:::i;:::-;;;;972:25:141;;;1028:2;1013:18;;1006:34;;;;945:18;350:216:43;927:119:141;1103:115:22;905:3;881:12;-1:-1:-1;;;;;881:12:22;873:37;;;;;;1177:12:::1;::::0;1171:40:::1;::::0;-1:-1:-1;;;1171:40:22;;::::1;::::0;::::1;762:25:141::0;;;-1:-1:-1;;;;;1177:12:22;;::::1;::::0;1171:34:::1;::::0;735:18:141;;1171:40:22::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1103:115:::0;:::o;1463:268::-;1510:7;1533:12;;-1:-1:-1;;;;;1533:12:22;:28;1529:196;;1590:12;;;;;;;;-1:-1:-1;;;;;1590:12:22;-1:-1:-1;;;;;1584:34:22;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1577:43;;1463:268;:::o;1529:196::-;-1:-1:-1;1658:15:22;;1463:268::o;350:216:43:-;412:20;434:17;525:16;:14;:16::i;:::-;517:42;543:15;;-1:-1:-1;350:216:43;-1:-1:-1;350:216:43:o;14:190:141:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;-1:-1:-1;175:23:141;;84:120;-1:-1:-1;84:120:141:o;209:194::-;279:6;332:2;320:9;311:7;307:23;303:32;300:2;;;353:6;345;338:22;300:2;-1:-1:-1;381:16:141;;290:113;-1:-1:-1;290:113:141:o",
  "source": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"../implementation/Testable.sol\";\n\n// TestableTest is derived from the abstract contract Testable for testing purposes.\ncontract TestableTest is Testable {\n    // solhint-disable-next-line no-empty-blocks\n    constructor(address _timerAddress) Testable(_timerAddress) {}\n\n    function getTestableTimeAndBlockTime() external view returns (uint256 testableTime, uint256 blockTime) {\n        // solhint-disable-next-line not-rely-on-time\n        return (getCurrentTime(), block.timestamp);\n    }\n}\n",
  "sourcePath": "/home/kamto/code/protocol/packages/core/contracts/common/test/TestableTest.sol",
  "ast": {
    "absolutePath": "/home/kamto/code/protocol/packages/core/contracts/common/test/TestableTest.sol",
    "exportedSymbols": {
      "Testable": [
        6909
      ],
      "TestableTest": [
        8721
      ],
      "Timer": [
        6996
      ]
    },
    "id": 8722,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8694,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:43"
      },
      {
        "absolutePath": "/home/kamto/code/protocol/packages/core/contracts/common/implementation/Testable.sol",
        "file": "../implementation/Testable.sol",
        "id": 8695,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8722,
        "sourceUnit": 6910,
        "src": "67:40:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8696,
              "name": "Testable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6909,
              "src": "219:8:43"
            },
            "id": 8697,
            "nodeType": "InheritanceSpecifier",
            "src": "219:8:43"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8721,
        "linearizedBaseContracts": [
          8721,
          6909
        ],
        "name": "TestableTest",
        "nameLocation": "203:12:43",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8705,
              "nodeType": "Block",
              "src": "342:2:43",
              "statements": []
            },
            "id": 8706,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 8702,
                    "name": "_timerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8699,
                    "src": "327:13:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 8703,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 8701,
                  "name": "Testable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6909,
                  "src": "318:8:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "318:23:43"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8699,
                  "mutability": "mutable",
                  "name": "_timerAddress",
                  "nameLocation": "303:13:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8706,
                  "src": "295:21:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8698,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "295:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "294:23:43"
            },
            "returnParameters": {
              "id": 8704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "342:0:43"
            },
            "scope": 8721,
            "src": "283:61:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8719,
              "nodeType": "Block",
              "src": "453:113:43",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 8713,
                          "name": "getCurrentTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6908,
                          "src": "525:14:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 8714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "525:16:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 8715,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "543:5:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 8716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "543:15:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 8717,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "524:35:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 8712,
                  "id": 8718,
                  "nodeType": "Return",
                  "src": "517:42:43"
                }
              ]
            },
            "functionSelector": "dc6ff7bd",
            "id": 8720,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTestableTimeAndBlockTime",
            "nameLocation": "359:27:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "386:2:43"
            },
            "returnParameters": {
              "id": 8712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8709,
                  "mutability": "mutable",
                  "name": "testableTime",
                  "nameLocation": "420:12:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8720,
                  "src": "412:20:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8708,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8711,
                  "mutability": "mutable",
                  "name": "blockTime",
                  "nameLocation": "442:9:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8720,
                  "src": "434:17:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8710,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "434:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "411:41:43"
            },
            "scope": 8721,
            "src": "350:216:43",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8722,
        "src": "194:374:43",
        "usedErrors": []
      }
    ],
    "src": "42:527:43"
  },
  "legacyAST": {
    "absolutePath": "/home/kamto/code/protocol/packages/core/contracts/common/test/TestableTest.sol",
    "exportedSymbols": {
      "Testable": [
        6909
      ],
      "TestableTest": [
        8721
      ],
      "Timer": [
        6996
      ]
    },
    "id": 8722,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8694,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:43"
      },
      {
        "absolutePath": "/home/kamto/code/protocol/packages/core/contracts/common/implementation/Testable.sol",
        "file": "../implementation/Testable.sol",
        "id": 8695,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8722,
        "sourceUnit": 6910,
        "src": "67:40:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8696,
              "name": "Testable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6909,
              "src": "219:8:43"
            },
            "id": 8697,
            "nodeType": "InheritanceSpecifier",
            "src": "219:8:43"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8721,
        "linearizedBaseContracts": [
          8721,
          6909
        ],
        "name": "TestableTest",
        "nameLocation": "203:12:43",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8705,
              "nodeType": "Block",
              "src": "342:2:43",
              "statements": []
            },
            "id": 8706,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 8702,
                    "name": "_timerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8699,
                    "src": "327:13:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 8703,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 8701,
                  "name": "Testable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6909,
                  "src": "318:8:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "318:23:43"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8699,
                  "mutability": "mutable",
                  "name": "_timerAddress",
                  "nameLocation": "303:13:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8706,
                  "src": "295:21:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8698,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "295:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "294:23:43"
            },
            "returnParameters": {
              "id": 8704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "342:0:43"
            },
            "scope": 8721,
            "src": "283:61:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8719,
              "nodeType": "Block",
              "src": "453:113:43",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 8713,
                          "name": "getCurrentTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6908,
                          "src": "525:14:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 8714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "525:16:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 8715,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "543:5:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 8716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "543:15:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 8717,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "524:35:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 8712,
                  "id": 8718,
                  "nodeType": "Return",
                  "src": "517:42:43"
                }
              ]
            },
            "functionSelector": "dc6ff7bd",
            "id": 8720,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTestableTimeAndBlockTime",
            "nameLocation": "359:27:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "386:2:43"
            },
            "returnParameters": {
              "id": 8712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8709,
                  "mutability": "mutable",
                  "name": "testableTime",
                  "nameLocation": "420:12:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8720,
                  "src": "412:20:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8708,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8711,
                  "mutability": "mutable",
                  "name": "blockTime",
                  "nameLocation": "442:9:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8720,
                  "src": "434:17:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8710,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "434:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "411:41:43"
            },
            "scope": 8721,
            "src": "350:216:43",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8722,
        "src": "194:374:43",
        "usedErrors": []
      }
    ],
    "src": "42:527:43"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-07T15:46:50.159Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getCurrentTime()": {
        "returns": {
          "_0": "uint for the current Testable timestamp."
        }
      },
      "setCurrentTime(uint256)": {
        "details": "Will revert if not running in test mode.",
        "params": {
          "time": "timestamp to set current Testable time to."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getCurrentTime()": {
        "notice": "Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp."
      },
      "setCurrentTime(uint256)": {
        "notice": "Sets the current time."
      }
    },
    "version": 1
  }
}