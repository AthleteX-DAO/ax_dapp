{
  "contractName": "OracleAncillaryInterface",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ancillaryData",
          "type": "bytes"
        }
      ],
      "name": "requestPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ancillaryData",
          "type": "bytes"
        }
      ],
      "name": "hasPrice",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ancillaryData",
          "type": "bytes"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"hasPrice\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"requestPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface used by financial contracts to interact with the Oracle. Voters will use a different interface.\",\"kind\":\"dev\",\"methods\":{\"getPrice(bytes32,uint256,bytes)\":{\"details\":\"If the price is not available, the method reverts.\",\"params\":{\"ancillaryData\":\"arbitrary data appended to a price request to give the voters more info from the caller.\",\"identifier\":\"uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\",\"time\":\"unix timestamp for the price request.\"},\"returns\":{\"_0\":\"int256 representing the resolved price for the given identifier and timestamp.\"}},\"hasPrice(bytes32,uint256,bytes)\":{\"details\":\"Time must be in the past and the identifier must be supported.\",\"params\":{\"ancillaryData\":\"arbitrary data appended to a price request to give the voters more info from the caller.\",\"identifier\":\"uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\",\"time\":\"unix timestamp for the price request.\"},\"returns\":{\"_0\":\"bool if the DVM has resolved to a price for the given identifier and timestamp.\"}},\"requestPrice(bytes32,uint256,bytes)\":{\"details\":\"Time must be in the past and the identifier must be supported.\",\"params\":{\"ancillaryData\":\"arbitrary data appended to a price request to give the voters more info from the caller.\",\"identifier\":\"uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\",\"time\":\"unix timestamp for the price request.\"}}},\"title\":\"Financial contract facing Oracle interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getPrice(bytes32,uint256,bytes)\":{\"notice\":\"Gets the price for `identifier` and `time` if it has already been requested and resolved.\"},\"hasPrice(bytes32,uint256,bytes)\":{\"notice\":\"Whether the price for `identifier` and `time` is available.\"},\"requestPrice(bytes32,uint256,bytes)\":{\"notice\":\"Enqueues a request (if a request isn't already present) for the given `identifier`, `time` pair.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/kamto/code/protocol/packages/core/contracts/oracle/interfaces/OracleAncillaryInterface.sol\":\"OracleAncillaryInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":199},\"remappings\":[]},\"sources\":{\"/home/kamto/code/protocol/packages/core/contracts/oracle/interfaces/OracleAncillaryInterface.sol\":{\"keccak256\":\"0xd58b41fe1e389f7871db7c04f2c05c1aac1d0455bbc521534da81fd657016a1f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://cc532e9c550bb1bba0daa33fda748590cd06ce94a9566fe65dac04e7d40977bc\",\"dweb:/ipfs/QmZKvfRW2LJFt5MWZbKuU9ujkXnS2hkPUJVj8wwJWcuZGX\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\n/**\n * @title Financial contract facing Oracle interface.\n * @dev Interface used by financial contracts to interact with the Oracle. Voters will use a different interface.\n */\nabstract contract OracleAncillaryInterface {\n    /**\n     * @notice Enqueues a request (if a request isn't already present) for the given `identifier`, `time` pair.\n     * @dev Time must be in the past and the identifier must be supported.\n     * @param identifier uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\n     * @param ancillaryData arbitrary data appended to a price request to give the voters more info from the caller.\n     * @param time unix timestamp for the price request.\n     */\n\n    function requestPrice(\n        bytes32 identifier,\n        uint256 time,\n        bytes memory ancillaryData\n    ) public virtual;\n\n    /**\n     * @notice Whether the price for `identifier` and `time` is available.\n     * @dev Time must be in the past and the identifier must be supported.\n     * @param identifier uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\n     * @param time unix timestamp for the price request.\n     * @param ancillaryData arbitrary data appended to a price request to give the voters more info from the caller.\n     * @return bool if the DVM has resolved to a price for the given identifier and timestamp.\n     */\n    function hasPrice(\n        bytes32 identifier,\n        uint256 time,\n        bytes memory ancillaryData\n    ) public view virtual returns (bool);\n\n    /**\n     * @notice Gets the price for `identifier` and `time` if it has already been requested and resolved.\n     * @dev If the price is not available, the method reverts.\n     * @param identifier uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\n     * @param time unix timestamp for the price request.\n     * @param ancillaryData arbitrary data appended to a price request to give the voters more info from the caller.\n     * @return int256 representing the resolved price for the given identifier and timestamp.\n     */\n\n    function getPrice(\n        bytes32 identifier,\n        uint256 time,\n        bytes memory ancillaryData\n    ) public view virtual returns (int256);\n}\n",
  "sourcePath": "/home/kamto/code/protocol/packages/core/contracts/oracle/interfaces/OracleAncillaryInterface.sol",
  "ast": {
    "absolutePath": "/home/kamto/code/protocol/packages/core/contracts/oracle/interfaces/OracleAncillaryInterface.sol",
    "exportedSymbols": {
      "OracleAncillaryInterface": [
        29348
      ]
    },
    "id": 29349,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 29312,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:104"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 29313,
          "nodeType": "StructuredDocumentation",
          "src": "67:175:104",
          "text": " @title Financial contract facing Oracle interface.\n @dev Interface used by financial contracts to interact with the Oracle. Voters will use a different interface."
        },
        "fullyImplemented": false,
        "id": 29348,
        "linearizedBaseContracts": [
          29348
        ],
        "name": "OracleAncillaryInterface",
        "nameLocation": "261:24:104",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 29314,
              "nodeType": "StructuredDocumentation",
              "src": "292:490:104",
              "text": " @notice Enqueues a request (if a request isn't already present) for the given `identifier`, `time` pair.\n @dev Time must be in the past and the identifier must be supported.\n @param identifier uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\n @param ancillaryData arbitrary data appended to a price request to give the voters more info from the caller.\n @param time unix timestamp for the price request."
            },
            "functionSelector": "216666a4",
            "id": 29323,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "requestPrice",
            "nameLocation": "797:12:104",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 29321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29316,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "827:10:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 29323,
                  "src": "819:18:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 29315,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "819:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29318,
                  "mutability": "mutable",
                  "name": "time",
                  "nameLocation": "855:4:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 29323,
                  "src": "847:12:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29317,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "847:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29320,
                  "mutability": "mutable",
                  "name": "ancillaryData",
                  "nameLocation": "882:13:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 29323,
                  "src": "869:26:104",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 29319,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "869:5:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "809:92:104"
            },
            "returnParameters": {
              "id": 29322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "916:0:104"
            },
            "scope": 29348,
            "src": "788:129:104",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 29324,
              "nodeType": "StructuredDocumentation",
              "src": "923:548:104",
              "text": " @notice Whether the price for `identifier` and `time` is available.\n @dev Time must be in the past and the identifier must be supported.\n @param identifier uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\n @param time unix timestamp for the price request.\n @param ancillaryData arbitrary data appended to a price request to give the voters more info from the caller.\n @return bool if the DVM has resolved to a price for the given identifier and timestamp."
            },
            "functionSelector": "b551cd50",
            "id": 29335,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "hasPrice",
            "nameLocation": "1485:8:104",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 29331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29326,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "1511:10:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 29335,
                  "src": "1503:18:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 29325,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1503:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29328,
                  "mutability": "mutable",
                  "name": "time",
                  "nameLocation": "1539:4:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 29335,
                  "src": "1531:12:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1531:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29330,
                  "mutability": "mutable",
                  "name": "ancillaryData",
                  "nameLocation": "1566:13:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 29335,
                  "src": "1553:26:104",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 29329,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1553:5:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1493:92:104"
            },
            "returnParameters": {
              "id": 29334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29333,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29335,
                  "src": "1615:4:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 29332,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1615:4:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1614:6:104"
            },
            "scope": 29348,
            "src": "1476:145:104",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 29336,
              "nodeType": "StructuredDocumentation",
              "src": "1627:565:104",
              "text": " @notice Gets the price for `identifier` and `time` if it has already been requested and resolved.\n @dev If the price is not available, the method reverts.\n @param identifier uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\n @param time unix timestamp for the price request.\n @param ancillaryData arbitrary data appended to a price request to give the voters more info from the caller.\n @return int256 representing the resolved price for the given identifier and timestamp."
            },
            "functionSelector": "719c6d56",
            "id": 29347,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nameLocation": "2207:8:104",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 29343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29338,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "2233:10:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 29347,
                  "src": "2225:18:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 29337,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2225:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29340,
                  "mutability": "mutable",
                  "name": "time",
                  "nameLocation": "2261:4:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 29347,
                  "src": "2253:12:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29339,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2253:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29342,
                  "mutability": "mutable",
                  "name": "ancillaryData",
                  "nameLocation": "2288:13:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 29347,
                  "src": "2275:26:104",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 29341,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2275:5:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2215:92:104"
            },
            "returnParameters": {
              "id": 29346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29345,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29347,
                  "src": "2337:6:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 29344,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2337:6:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2336:8:104"
            },
            "scope": 29348,
            "src": "2198:147:104",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 29349,
        "src": "243:2104:104",
        "usedErrors": []
      }
    ],
    "src": "42:2306:104"
  },
  "legacyAST": {
    "absolutePath": "/home/kamto/code/protocol/packages/core/contracts/oracle/interfaces/OracleAncillaryInterface.sol",
    "exportedSymbols": {
      "OracleAncillaryInterface": [
        29348
      ]
    },
    "id": 29349,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 29312,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:104"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 29313,
          "nodeType": "StructuredDocumentation",
          "src": "67:175:104",
          "text": " @title Financial contract facing Oracle interface.\n @dev Interface used by financial contracts to interact with the Oracle. Voters will use a different interface."
        },
        "fullyImplemented": false,
        "id": 29348,
        "linearizedBaseContracts": [
          29348
        ],
        "name": "OracleAncillaryInterface",
        "nameLocation": "261:24:104",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 29314,
              "nodeType": "StructuredDocumentation",
              "src": "292:490:104",
              "text": " @notice Enqueues a request (if a request isn't already present) for the given `identifier`, `time` pair.\n @dev Time must be in the past and the identifier must be supported.\n @param identifier uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\n @param ancillaryData arbitrary data appended to a price request to give the voters more info from the caller.\n @param time unix timestamp for the price request."
            },
            "functionSelector": "216666a4",
            "id": 29323,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "requestPrice",
            "nameLocation": "797:12:104",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 29321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29316,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "827:10:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 29323,
                  "src": "819:18:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 29315,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "819:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29318,
                  "mutability": "mutable",
                  "name": "time",
                  "nameLocation": "855:4:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 29323,
                  "src": "847:12:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29317,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "847:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29320,
                  "mutability": "mutable",
                  "name": "ancillaryData",
                  "nameLocation": "882:13:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 29323,
                  "src": "869:26:104",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 29319,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "869:5:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "809:92:104"
            },
            "returnParameters": {
              "id": 29322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "916:0:104"
            },
            "scope": 29348,
            "src": "788:129:104",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 29324,
              "nodeType": "StructuredDocumentation",
              "src": "923:548:104",
              "text": " @notice Whether the price for `identifier` and `time` is available.\n @dev Time must be in the past and the identifier must be supported.\n @param identifier uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\n @param time unix timestamp for the price request.\n @param ancillaryData arbitrary data appended to a price request to give the voters more info from the caller.\n @return bool if the DVM has resolved to a price for the given identifier and timestamp."
            },
            "functionSelector": "b551cd50",
            "id": 29335,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "hasPrice",
            "nameLocation": "1485:8:104",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 29331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29326,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "1511:10:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 29335,
                  "src": "1503:18:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 29325,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1503:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29328,
                  "mutability": "mutable",
                  "name": "time",
                  "nameLocation": "1539:4:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 29335,
                  "src": "1531:12:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1531:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29330,
                  "mutability": "mutable",
                  "name": "ancillaryData",
                  "nameLocation": "1566:13:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 29335,
                  "src": "1553:26:104",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 29329,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1553:5:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1493:92:104"
            },
            "returnParameters": {
              "id": 29334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29333,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29335,
                  "src": "1615:4:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 29332,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1615:4:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1614:6:104"
            },
            "scope": 29348,
            "src": "1476:145:104",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 29336,
              "nodeType": "StructuredDocumentation",
              "src": "1627:565:104",
              "text": " @notice Gets the price for `identifier` and `time` if it has already been requested and resolved.\n @dev If the price is not available, the method reverts.\n @param identifier uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\n @param time unix timestamp for the price request.\n @param ancillaryData arbitrary data appended to a price request to give the voters more info from the caller.\n @return int256 representing the resolved price for the given identifier and timestamp."
            },
            "functionSelector": "719c6d56",
            "id": 29347,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nameLocation": "2207:8:104",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 29343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29338,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "2233:10:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 29347,
                  "src": "2225:18:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 29337,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2225:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29340,
                  "mutability": "mutable",
                  "name": "time",
                  "nameLocation": "2261:4:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 29347,
                  "src": "2253:12:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29339,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2253:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29342,
                  "mutability": "mutable",
                  "name": "ancillaryData",
                  "nameLocation": "2288:13:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 29347,
                  "src": "2275:26:104",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 29341,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2275:5:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2215:92:104"
            },
            "returnParameters": {
              "id": 29346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29345,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29347,
                  "src": "2337:6:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 29344,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2337:6:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2336:8:104"
            },
            "scope": 29348,
            "src": "2198:147:104",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 29349,
        "src": "243:2104:104",
        "usedErrors": []
      }
    ],
    "src": "42:2306:104"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-07T15:46:50.498Z",
  "devdoc": {
    "details": "Interface used by financial contracts to interact with the Oracle. Voters will use a different interface.",
    "kind": "dev",
    "methods": {
      "getPrice(bytes32,uint256,bytes)": {
        "details": "If the price is not available, the method reverts.",
        "params": {
          "ancillaryData": "arbitrary data appended to a price request to give the voters more info from the caller.",
          "identifier": "uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.",
          "time": "unix timestamp for the price request."
        },
        "returns": {
          "_0": "int256 representing the resolved price for the given identifier and timestamp."
        }
      },
      "hasPrice(bytes32,uint256,bytes)": {
        "details": "Time must be in the past and the identifier must be supported.",
        "params": {
          "ancillaryData": "arbitrary data appended to a price request to give the voters more info from the caller.",
          "identifier": "uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.",
          "time": "unix timestamp for the price request."
        },
        "returns": {
          "_0": "bool if the DVM has resolved to a price for the given identifier and timestamp."
        }
      },
      "requestPrice(bytes32,uint256,bytes)": {
        "details": "Time must be in the past and the identifier must be supported.",
        "params": {
          "ancillaryData": "arbitrary data appended to a price request to give the voters more info from the caller.",
          "identifier": "uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.",
          "time": "unix timestamp for the price request."
        }
      }
    },
    "title": "Financial contract facing Oracle interface.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getPrice(bytes32,uint256,bytes)": {
        "notice": "Gets the price for `identifier` and `time` if it has already been requested and resolved."
      },
      "hasPrice(bytes32,uint256,bytes)": {
        "notice": "Whether the price for `identifier` and `time` is available."
      },
      "requestPrice(bytes32,uint256,bytes)": {
        "notice": "Enqueues a request (if a request isn't already present) for the given `identifier`, `time` pair."
      }
    },
    "version": 1
  }
}