{
  "contractName": "FeePool",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "invest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "retract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"invest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"retract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getPool()\":{\"details\":\"get the amount in feePool\"},\"invest(uint256)\":{\"details\":\"invest into the pool, updating each owners stake and the pool\",\"params\":{\"_amount\":\"owner invests into the pool\"}},\"retract(uint256)\":{\"details\":\"transfers coins to owner\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/kamto/code/contracts/contracts/FeePool.sol\":\"FeePool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/kamto/code/contracts/contracts/FeePool.sol\":{\"keccak256\":\"0x99bd4d1c787e5546988791b45ec5ea54dbb61f5d3dd36c901265034dd523626a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d925c974e37265b18dda7ac37d7ab0c6a59b678e2fd28c9b3c5bfc265a6e50d0\",\"dweb:/ipfs/Qma1qTmcr4GxnUC9vUQtgupUwW1t7oGyPVkpa4rSg7F85b\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506101ba806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063026b1d5f146100465780632afcf480146100645780639fab665614610092575b600080fd5b61004e6100c0565b6040518082815260200191505060405180910390f35b6100906004803603602081101561007a57600080fd5b81019080803590602001909291905050506100c9565b005b6100be600480360360208110156100a857600080fd5b81019080803590602001909291905050506100cc565b005b60008054905090565b50565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610181576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f576974686472617720697320746f6f206869676800000000000000000000000081525060200191505060405180910390fd5b5056fea26469706673582212207e0cb0df688cdc5f08596dde46f7143a479d3d8133a8d4f8b31317ada5c30df964736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063026b1d5f146100465780632afcf480146100645780639fab665614610092575b600080fd5b61004e6100c0565b6040518082815260200191505060405180910390f35b6100906004803603602081101561007a57600080fd5b81019080803590602001909291905050506100c9565b005b6100be600480360360208110156100a857600080fd5b81019080803590602001909291905050506100cc565b005b60008054905090565b50565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610181576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f576974686472617720697320746f6f206869676800000000000000000000000081525060200191505060405180910390fd5b5056fea26469706673582212207e0cb0df688cdc5f08596dde46f7143a479d3d8133a8d4f8b31317ada5c30df964736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "65:2151:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "65:2151:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1217:116;;;:::i;:::-;;;;;;;;;;;;;;;;;;;395:318;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;760:409;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1217:116;1254:7;1317:8;;1310:15;;1217:116;:::o;395:318::-;;:::o;760:409::-;849:7;822:11;:23;834:10;822:23;;;;;;;;;;;;;;;;:34;;814:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;760:409;:::o",
  "source": "pragma solidity >=0.6.0;\r\n\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\ncontract FeePool {\r\n    // The Pool - The number of coins in it (not dollar value)\r\n    uint256 private _feePool;\r\n\r\n    // Owners Stake in the Pool\r\n    mapping(address => uint256) ownersStake;\r\n\r\n    /// @dev invest into the pool, updating each owners stake and the pool\r\n    /// @param _amount owner invests into the pool\r\n    function invest(uint256 _amount) external {\r\n        //get coins from owner (call AEStaking.enter())?\r\n        // Update the owners stake with the new amount\r\n        // ownersStake[msg.sender] = ownersStake[msg.sender].add(_amount);\r\n        // Update the fee pool\r\n        // _feePool = _feePool.add(_amount);\r\n    }\r\n\r\n    /// @dev transfers coins to owner\r\n    function retract(uint256 _amount) external {\r\n        require(ownersStake[msg.sender] >= _amount, \"Withdraw is too high\");\r\n\r\n        //// ? update owners account (call AEStaking.leave()) ?\r\n\r\n        // Update the owners stake with the new amount\r\n        // ownersStake[msg.sender] = ownersStake[msg.sender].add(_amount);\r\n\r\n        //Update the fee pool\r\n        // _feePool = _feePool.sub(_amount);\r\n    }\r\n\r\n    /// @dev get the amount in feePool\r\n    function getPool() external returns (uint256) {\r\n        //is this a VIEW function?\r\n        return _feePool;\r\n    }\r\n\r\n    //// My own notes :)\r\n\r\n    // Create our own coin\r\n    // People invest into it\r\n    // Tie fees into a pool\r\n\r\n    // People buy coins and that goes into a pool\r\n    // We set the initial value\r\n    // Where is it set and where can the growth be seen\r\n\r\n    // FeePool is the area where we have all the pooled in values\r\n\r\n    /*\r\n        FeePool acesses ERC20 totalSupply and figure out how much to leave with\r\n\r\n        More people, worth more\r\n\r\n        Tie together coin and athletes:\r\n            Athlete's value is based off in game preformance\r\n\r\n        Flywheel Pattern,\r\n            2 types of coin: ERC20 business value (AE coin), \r\n\r\n\r\n        FeePool is not dealing with changing price, rather just acessing current price and totalBalance \r\n\r\n        Make feePool for AE coin\r\n    */\r\n\r\n    // Access to the totalSupply\r\n    // Enter FeePool / Leave FeePool\r\n}\r\n",
  "sourcePath": "C:/Users/kamto/code/contracts/contracts/FeePool.sol",
  "ast": {
    "absolutePath": "/C/Users/kamto/code/contracts/contracts/FeePool.sol",
    "exportedSymbols": {
      "FeePool": [
        41
      ]
    },
    "id": 42,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 41,
        "linearizedBaseContracts": [
          41
        ],
        "name": "FeePool",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3,
            "mutability": "mutable",
            "name": "_feePool",
            "nodeType": "VariableDeclaration",
            "scope": 41,
            "src": "153:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "153:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7,
            "mutability": "mutable",
            "name": "ownersStake",
            "nodeType": "VariableDeclaration",
            "scope": 41,
            "src": "219:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 6,
              "keyType": {
                "id": 4,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "227:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "219:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 5,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "238:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 13,
              "nodeType": "Block",
              "src": "437:276:0",
              "statements": []
            },
            "documentation": {
              "id": 8,
              "nodeType": "StructuredDocumentation",
              "src": "267:122:0",
              "text": "@dev invest into the pool, updating each owners stake and the pool\n @param _amount owner invests into the pool"
            },
            "functionSelector": "2afcf480",
            "id": 14,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "invest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 14,
                  "src": "411:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "410:17:0"
            },
            "returnParameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "437:0:0"
            },
            "scope": 41,
            "src": "395:318:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 30,
              "nodeType": "Block",
              "src": "803:366:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 26,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 21,
                            "name": "ownersStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "822:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 24,
                          "indexExpression": {
                            "expression": {
                              "id": 22,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "834:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 23,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "834:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "822:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 25,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "849:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "822:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "576974686472617720697320746f6f2068696768",
                        "id": 27,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "858:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_18edb8b3868d4834eed3a4947592c1c20731aef116423189d41ffaba2915e094",
                          "typeString": "literal_string \"Withdraw is too high\""
                        },
                        "value": "Withdraw is too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_18edb8b3868d4834eed3a4947592c1c20731aef116423189d41ffaba2915e094",
                          "typeString": "literal_string \"Withdraw is too high\""
                        }
                      ],
                      "id": 20,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "814:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "814:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29,
                  "nodeType": "ExpressionStatement",
                  "src": "814:67:0"
                }
              ]
            },
            "documentation": {
              "id": 15,
              "nodeType": "StructuredDocumentation",
              "src": "721:33:0",
              "text": "@dev transfers coins to owner"
            },
            "functionSelector": "9fab6656",
            "id": 31,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "777:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "777:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "776:17:0"
            },
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "803:0:0"
            },
            "scope": 41,
            "src": "760:409:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 39,
              "nodeType": "Block",
              "src": "1263:70:0",
              "statements": [
                {
                  "expression": {
                    "id": 37,
                    "name": "_feePool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3,
                    "src": "1317:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 36,
                  "id": 38,
                  "nodeType": "Return",
                  "src": "1310:15:0"
                }
              ]
            },
            "documentation": {
              "id": 32,
              "nodeType": "StructuredDocumentation",
              "src": "1177:34:0",
              "text": "@dev get the amount in feePool"
            },
            "functionSelector": "026b1d5f",
            "id": 40,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1233:2:0"
            },
            "returnParameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "1254:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1254:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1253:9:0"
            },
            "scope": 41,
            "src": "1217:116:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 42,
        "src": "65:2151:0"
      }
    ],
    "src": "0:2218:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/kamto/code/contracts/contracts/FeePool.sol",
      "exportedSymbols": {
        "FeePool": [
          41
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.6",
            ".0"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            41
          ],
          "name": "FeePool",
          "scope": 42
        },
        "children": [
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_feePool",
              "scope": 41,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 2,
                "name": "ElementaryTypeName",
                "src": "153:7:0"
              }
            ],
            "id": 3,
            "name": "VariableDeclaration",
            "src": "153:24:0"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "ownersStake",
              "scope": 41,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => uint256)",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => uint256)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 4,
                    "name": "ElementaryTypeName",
                    "src": "227:7:0"
                  },
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 5,
                    "name": "ElementaryTypeName",
                    "src": "238:7:0"
                  }
                ],
                "id": 6,
                "name": "Mapping",
                "src": "219:27:0"
              }
            ],
            "id": 7,
            "name": "VariableDeclaration",
            "src": "219:39:0"
          },
          {
            "attributes": {
              "functionSelector": "2afcf480",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "invest",
              "scope": 41,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev invest into the pool, updating each owners stake and the pool\n @param _amount owner invests into the pool"
                },
                "id": 8,
                "name": "StructuredDocumentation",
                "src": "267:122:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_amount",
                      "scope": 14,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 9,
                        "name": "ElementaryTypeName",
                        "src": "411:7:0"
                      }
                    ],
                    "id": 10,
                    "name": "VariableDeclaration",
                    "src": "411:15:0"
                  }
                ],
                "id": 11,
                "name": "ParameterList",
                "src": "410:17:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 12,
                "name": "ParameterList",
                "src": "437:0:0"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 13,
                "name": "Block",
                "src": "437:276:0"
              }
            ],
            "id": 14,
            "name": "FunctionDefinition",
            "src": "395:318:0"
          },
          {
            "attributes": {
              "functionSelector": "9fab6656",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "retract",
              "scope": 41,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev transfers coins to owner"
                },
                "id": 15,
                "name": "StructuredDocumentation",
                "src": "721:33:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_amount",
                      "scope": 31,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 16,
                        "name": "ElementaryTypeName",
                        "src": "777:7:0"
                      }
                    ],
                    "id": 17,
                    "name": "VariableDeclaration",
                    "src": "777:15:0"
                  }
                ],
                "id": 18,
                "name": "ParameterList",
                "src": "776:17:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 19,
                "name": "ParameterList",
                "src": "803:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_18edb8b3868d4834eed3a4947592c1c20731aef116423189d41ffaba2915e094",
                                  "typeString": "literal_string \"Withdraw is too high\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 20,
                            "name": "Identifier",
                            "src": "814:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7,
                                      "type": "mapping(address => uint256)",
                                      "value": "ownersStake"
                                    },
                                    "id": 21,
                                    "name": "Identifier",
                                    "src": "822:11:0"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4294967281,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 22,
                                        "name": "Identifier",
                                        "src": "834:3:0"
                                      }
                                    ],
                                    "id": 23,
                                    "name": "MemberAccess",
                                    "src": "834:10:0"
                                  }
                                ],
                                "id": 24,
                                "name": "IndexAccess",
                                "src": "822:23:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 17,
                                  "type": "uint256",
                                  "value": "_amount"
                                },
                                "id": 25,
                                "name": "Identifier",
                                "src": "849:7:0"
                              }
                            ],
                            "id": 26,
                            "name": "BinaryOperation",
                            "src": "822:34:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "576974686472617720697320746f6f2068696768",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Withdraw is too high\"",
                              "value": "Withdraw is too high"
                            },
                            "id": 27,
                            "name": "Literal",
                            "src": "858:22:0"
                          }
                        ],
                        "id": 28,
                        "name": "FunctionCall",
                        "src": "814:67:0"
                      }
                    ],
                    "id": 29,
                    "name": "ExpressionStatement",
                    "src": "814:67:0"
                  }
                ],
                "id": 30,
                "name": "Block",
                "src": "803:366:0"
              }
            ],
            "id": 31,
            "name": "FunctionDefinition",
            "src": "760:409:0"
          },
          {
            "attributes": {
              "functionSelector": "026b1d5f",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getPool",
              "scope": 41,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev get the amount in feePool"
                },
                "id": 32,
                "name": "StructuredDocumentation",
                "src": "1177:34:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 33,
                "name": "ParameterList",
                "src": "1233:2:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 40,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 34,
                        "name": "ElementaryTypeName",
                        "src": "1254:7:0"
                      }
                    ],
                    "id": 35,
                    "name": "VariableDeclaration",
                    "src": "1254:7:0"
                  }
                ],
                "id": 36,
                "name": "ParameterList",
                "src": "1253:9:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 36
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 3,
                          "type": "uint256",
                          "value": "_feePool"
                        },
                        "id": 37,
                        "name": "Identifier",
                        "src": "1317:8:0"
                      }
                    ],
                    "id": 38,
                    "name": "Return",
                    "src": "1310:15:0"
                  }
                ],
                "id": 39,
                "name": "Block",
                "src": "1263:70:0"
              }
            ],
            "id": 40,
            "name": "FunctionDefinition",
            "src": "1217:116:0"
          }
        ],
        "id": 41,
        "name": "ContractDefinition",
        "src": "65:2151:0"
      }
    ],
    "id": 42,
    "name": "SourceUnit",
    "src": "0:2218:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-21T19:33:13.378Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getPool()": {
        "details": "get the amount in feePool"
      },
      "invest(uint256)": {
        "details": "invest into the pool, updating each owners stake and the pool",
        "params": {
          "_amount": "owner invests into the pool"
        }
      },
      "retract(uint256)": {
        "details": "transfers coins to owner"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}