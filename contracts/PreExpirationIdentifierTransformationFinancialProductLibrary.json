{
  "contractName": "PreExpirationIdentifierTransformationFinancialProductLibrary",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "oraclePrice",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "collateralRequirement",
          "type": "tuple"
        }
      ],
      "name": "transformCollateralRequirement",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "oraclePrice",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "requestTime",
          "type": "uint256"
        }
      ],
      "name": "transformPrice",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "financialProduct",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "transformedIdentifier",
          "type": "bytes32"
        }
      ],
      "name": "setFinancialProductTransformedIdentifier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "financialProduct",
          "type": "address"
        }
      ],
      "name": "getTransformedIdentifierForFinancialProduct",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "requestTime",
          "type": "uint256"
        }
      ],
      "name": "transformPriceIdentifier",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"financialProduct\",\"type\":\"address\"}],\"name\":\"getTransformedIdentifierForFinancialProduct\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"financialProduct\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"transformedIdentifier\",\"type\":\"bytes32\"}],\"name\":\"setFinancialProductTransformedIdentifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"oraclePrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"collateralRequirement\",\"type\":\"tuple\"}],\"name\":\"transformCollateralRequirement\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"oraclePrice\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"requestTime\",\"type\":\"uint256\"}],\"name\":\"transformPrice\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"requestTime\",\"type\":\"uint256\"}],\"name\":\"transformPriceIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getTransformedIdentifierForFinancialProduct(address)\":{\"params\":{\"financialProduct\":\"address of the financial product.\"},\"returns\":{\"_0\":\"transformed identifier for the associated financial product.\"}},\"setFinancialProductTransformedIdentifier(address,bytes32)\":{\"details\":\"Note: a) Any address can set identifier transformations b) The identifier can't be set to blank. c) A transformed price can only be set once to prevent the deployer from changing it after the fact. d) financialProduct must expose an expirationTimestamp method.\",\"params\":{\"financialProduct\":\"address of the financial product.\",\"transformedIdentifier\":\"the identifier for the financial product to be used if the contract is pre expiration.\"}},\"transformCollateralRequirement((uint256),(uint256))\":{\"params\":{\"collateralRequirement\":\"input collateral requirement to be transformed.\",\"oraclePrice\":\"input price returned by DVM used to transform the collateral requirement.\"},\"returns\":{\"_0\":\"transformedCollateralRequirement input collateral requirement with the transformation function applied.\"}},\"transformPrice((uint256),uint256)\":{\"params\":{\"oraclePrice\":\"input price returned by the DVM to be transformed.\",\"requestTime\":\"timestamp the oraclePrice was requested at.\"},\"returns\":{\"_0\":\"transformedOraclePrice input oraclePrice with the transformation function applied.\"}},\"transformPriceIdentifier(bytes32,uint256)\":{\"params\":{\"identifier\":\"input price identifier to be transformed.\",\"requestTime\":\"timestamp the identifier is to be used at.\"},\"returns\":{\"_0\":\"transformedPriceIdentifier the input price identifier with the transformation logic applied to it.\"}}},\"title\":\"Pre-Expiration Identifier Transformation Financial Product Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getTransformedIdentifierForFinancialProduct(address)\":{\"notice\":\"Returns the transformed identifier associated with a given financial product address.\"},\"setFinancialProductTransformedIdentifier(address,bytes32)\":{\"notice\":\"Enables the deployer of the library to set the transformed identifier for an associated financial product.\"},\"transformCollateralRequirement((uint256),(uint256))\":{\"notice\":\"Transforms a given collateral requirement using the financial product libraries transformation logic.\"},\"transformPrice((uint256),uint256)\":{\"notice\":\"Transforms a given oracle price using the financial product libraries transformation logic.\"},\"transformPriceIdentifier(bytes32,uint256)\":{\"notice\":\"Returns a transformed price identifier if the contract is pre-expiration and no transformation if post.\"}},\"notice\":\"Adds custom identifier transformation to enable a financial contract to use two different identifiers, depending on when a price request is made. If the request is made before expiration then a transformation is made to the identifier & if it is at or after expiration then the original identifier is returned. This library enables self referential TWAP identifier to be used on synthetics pre-expiration, in conjunction with a separate identifier at expiration.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/kamto/code/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/PreExpirationIdentifierTransformationFinancialProductLibrary.sol\":\"PreExpirationIdentifierTransformationFinancialProductLibrary\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":199},\"remappings\":[]},\"sources\":{\"/home/kamto/code/protocol/packages/core/contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0x8ea44f1bf5e1efcfc5943ea67c3dc5bf7ce1ba84bf2d6b868baafac7e422cc01\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://94e828e682e9e44991807f5f39c2ed499b451d65155d8a6c6d0fd62b13dbd222\",\"dweb:/ipfs/QmPfPWyR9deca2dHmwVnm3E9Kt2fLXXABQE4WT8iSdKSXm\"]},\"/home/kamto/code/protocol/packages/core/contracts/common/implementation/Lockable.sol\":{\"keccak256\":\"0xaaa9ef13b45e085d0fe036215a2decd9cf491de25c16f28256b9d3e3377aa160\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f8386af0716b455f9542a0e4121237c4b61d8d2132553da09d2c2f8908eacbcf\",\"dweb:/ipfs/QmdZV7Rm1o89a8VXNG2qjrzLgpRFSL3RnsGBccpqcLhTC2\"]},\"/home/kamto/code/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/FinancialProductLibrary.sol\":{\"keccak256\":\"0x34db2c5573361ac9582922adc6af513cfcd503136e22f8a1b84d3ecbfcef5dcc\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://dc0650a2522b6360ef61d165dbacfd596539968c0b35295ad475e40d8be69fe2\",\"dweb:/ipfs/QmcynVRreqHKcAdZtetELnWS2EpPw2KLFby1VQ6XeMR59y\"]},\"/home/kamto/code/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/PreExpirationIdentifierTransformationFinancialProductLibrary.sol\":{\"keccak256\":\"0x23f3f3a805a61ce858654d1b96ccb028856f9e73e52a23a776fc70efe7477cdc\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://77132fd2c1bbba4b6826283930a1ff4d32409a52b6c9b7f31579c04a3098bd03\",\"dweb:/ipfs/QmP3tewS1VnmeUUZSdm1SCMeDiGk7aLqXBrEBPADeXTsQp\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]},\"@openzeppelin/contracts/utils/math/SignedSafeMath.sol\":{\"keccak256\":\"0xd1ddc24b24f12a347093844dd645c3a96bcdce05d1f51b8650946ad404cb3c40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://873363c817ef68913ced271e77fc4af21d4a94ffba23de2b205c6e9de8ff6b72\",\"dweb:/ipfs/QmNmN46R3rrvTxMUjDTbZiCiqqTX9TRvWbiaN9qLrWQXPS\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506000805460ff1916600117905561059f8061002d6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630ff49b901461005c57806316bed30e146100835780632a31263714610098578063bc2ac858146100ba578063f19371b7146100db575b600080fd5b61006f61006a366004610535565b6100ee565b604051905181526020015b60405180910390f35b6100966100913660046104b7565b610105565b005b61006f6100a6366004610501565b604080516020810190915260009052919050565b6100cd6100c8366004610496565b6102b9565b60405190815260200161007a565b6100cd6100e93660046104e0565b6102e3565b604080516020810190915260009052815b92915050565b61010d6103de565b61011c6000805460ff19169055565b8061016e5760405162461bcd60e51b815260206004820181905260248201527f43616e742073657420746f20656d707479207472616e73666f726d6174696f6e60448201526064015b60405180910390fd5b6001600160a01b038216600090815260016020526040902054156101d45760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666f726d6174696f6e20616c7265616479207365740000000000006044820152606401610165565b816001600160a01b0316639f43ddd26040518163ffffffff1660e01b815260040160206040518083038186803b15801561020d57600080fd5b505afa158015610221573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102459190610551565b6102885760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081153540818dbdb9d1c9858dd60621b6044820152606401610165565b6001600160a01b03821660009081526001602052604090208190556102b56000805460ff19166001179055565b5050565b60006102c36103de565b506001600160a01b0381166000908152600160205260409020545b919050565b60006102ed6103de565b336000908152600160205260409020546103495760405162461bcd60e51b815260206004820152601c60248201527f43616c6c657220686173206e6f207472616e73666f726d6174696f6e000000006044820152606401610165565b336001600160a01b0316639f43ddd26040518163ffffffff1660e01b815260040160206040518083038186803b15801561038257600080fd5b505afa158015610396573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ba9190610551565b8210156103d75750336000908152600160205260409020546100ff565b50816100ff565b60005460ff166104305760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610165565b565b80356001600160a01b03811681146102de57600080fd5b60006020828403121561045a578081fd5b6040516020810181811067ffffffffffffffff8211171561048957634e487b7160e01b83526041600452602483fd5b6040529135825250919050565b6000602082840312156104a7578081fd5b6104b082610432565b9392505050565b600080604083850312156104c9578081fd5b6104d283610432565b946020939093013593505050565b600080604083850312156104f2578182fd5b50508035926020909101359150565b60008060408385031215610513578182fd5b61051d8484610449565b915061052c8460208501610449565b90509250929050565b60008060408385031215610547578182fd5b6104d28484610449565b600060208284031215610562578081fd5b505191905056fea2646970667358221220c46b2ebdfeb7f676e57669b087f0d15f092b96ae7dc84e82b73bd056b4912f7a64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80630ff49b901461005c57806316bed30e146100835780632a31263714610098578063bc2ac858146100ba578063f19371b7146100db575b600080fd5b61006f61006a366004610535565b6100ee565b604051905181526020015b60405180910390f35b6100966100913660046104b7565b610105565b005b61006f6100a6366004610501565b604080516020810190915260009052919050565b6100cd6100c8366004610496565b6102b9565b60405190815260200161007a565b6100cd6100e93660046104e0565b6102e3565b604080516020810190915260009052815b92915050565b61010d6103de565b61011c6000805460ff19169055565b8061016e5760405162461bcd60e51b815260206004820181905260248201527f43616e742073657420746f20656d707479207472616e73666f726d6174696f6e60448201526064015b60405180910390fd5b6001600160a01b038216600090815260016020526040902054156101d45760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666f726d6174696f6e20616c7265616479207365740000000000006044820152606401610165565b816001600160a01b0316639f43ddd26040518163ffffffff1660e01b815260040160206040518083038186803b15801561020d57600080fd5b505afa158015610221573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102459190610551565b6102885760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081153540818dbdb9d1c9858dd60621b6044820152606401610165565b6001600160a01b03821660009081526001602052604090208190556102b56000805460ff19166001179055565b5050565b60006102c36103de565b506001600160a01b0381166000908152600160205260409020545b919050565b60006102ed6103de565b336000908152600160205260409020546103495760405162461bcd60e51b815260206004820152601c60248201527f43616c6c657220686173206e6f207472616e73666f726d6174696f6e000000006044820152606401610165565b336001600160a01b0316639f43ddd26040518163ffffffff1660e01b815260040160206040518083038186803b15801561038257600080fd5b505afa158015610396573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ba9190610551565b8210156103d75750336000908152600160205260409020546100ff565b50816100ff565b60005460ff166104305760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610165565b565b80356001600160a01b03811681146102de57600080fd5b60006020828403121561045a578081fd5b6040516020810181811067ffffffffffffffff8211171561048957634e487b7160e01b83526041600452602483fd5b6040529135825250919050565b6000602082840312156104a7578081fd5b6104b082610432565b9392505050565b600080604083850312156104c9578081fd5b6104d283610432565b946020939093013593505050565b600080604083850312156104f2578182fd5b50508035926020909101359150565b60008060408385031215610513578182fd5b61051d8484610449565b915061052c8460208501610449565b90509250929050565b60008060408385031215610547578182fd5b6104d28484610449565b600060208284031215610562578081fd5b505191905056fea2646970667358221220c46b2ebdfeb7f676e57669b087f0d15f092b96ae7dc84e82b73bd056b4912f7a64736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4524:141",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:141",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:141",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:141"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:141"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:141"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:141",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:141",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:141",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:141"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:141"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:141"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:141"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:141"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:141",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:141",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:141"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:141"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:141",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:141"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:141"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:141"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:141"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:141"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:141"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:141"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:141",
                "type": ""
              }
            ],
            "src": "14:173:141"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "257:455:141",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "301:24:141",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "310:5:141"
                            },
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "317:5:141"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "303:6:141"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "303:20:141"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "303:20:141"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "278:3:141"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "283:9:141"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "274:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "274:19:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "295:4:141",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "270:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "270:30:141"
                  },
                  "nodeType": "YulIf",
                  "src": "267:2:141"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "334:23:141",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "354:2:141",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "348:5:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "348:9:141"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "338:6:141",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "366:35:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "388:6:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "396:4:141",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "384:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "384:17:141"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "370:10:141",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "484:119:141",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "505:5:141"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "516:3:141",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "521:10:141",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "512:3:141"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "512:20:141"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "498:6:141"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "498:35:141"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "498:35:141"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "553:1:141",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "556:4:141",
                              "type": "",
                              "value": "0x41"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "546:6:141"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "546:15:141"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "546:15:141"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "581:5:141"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "588:4:141",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "574:6:141"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "574:19:141"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "574:19:141"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "419:10:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "431:18:141",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "416:2:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "416:34:141"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "455:10:141"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "467:6:141"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "452:2:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "452:22:141"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "413:2:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "413:62:141"
                  },
                  "nodeType": "YulIf",
                  "src": "410:2:141"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "619:2:141",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "623:10:141"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "612:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "612:22:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "612:22:141"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "643:15:141",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "652:6:141"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "643:5:141"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "674:6:141"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "695:9:141"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "682:12:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "682:23:141"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "667:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "667:39:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "667:39:141"
                }
              ]
            },
            "name": "abi_decode_struct_Unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "228:9:141",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "239:3:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "247:5:141",
                "type": ""
              }
            ],
            "src": "192:520:141"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "787:126:141",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "833:26:141",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "842:6:141"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "850:6:141"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "835:6:141"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "835:22:141"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "835:22:141"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "808:7:141"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "817:9:141"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "804:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "804:23:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "829:2:141",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "800:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "800:32:141"
                  },
                  "nodeType": "YulIf",
                  "src": "797:2:141"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "868:39:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "897:9:141"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "878:18:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "878:29:141"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "868:6:141"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "753:9:141",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "764:7:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "776:6:141",
                "type": ""
              }
            ],
            "src": "717:196:141"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1005:177:141",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1051:26:141",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1060:6:141"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1068:6:141"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1053:6:141"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1053:22:141"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1053:22:141"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1026:7:141"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1035:9:141"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1022:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1022:23:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1047:2:141",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1018:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1018:32:141"
                  },
                  "nodeType": "YulIf",
                  "src": "1015:2:141"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1086:39:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1115:9:141"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1096:18:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1096:29:141"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1086:6:141"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1134:42:141",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1161:9:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1172:2:141",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1157:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1157:18:141"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1144:12:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1144:32:141"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1134:6:141"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "963:9:141",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "974:7:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "986:6:141",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "994:6:141",
                "type": ""
              }
            ],
            "src": "918:264:141"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1274:171:141",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1320:26:141",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1329:6:141"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1337:6:141"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1322:6:141"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1322:22:141"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1322:22:141"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1295:7:141"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1304:9:141"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1291:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1291:23:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1316:2:141",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1287:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1287:32:141"
                  },
                  "nodeType": "YulIf",
                  "src": "1284:2:141"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1355:33:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1378:9:141"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1365:12:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1365:23:141"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1355:6:141"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1397:42:141",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1424:9:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1435:2:141",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1420:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1420:18:141"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1407:12:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1407:32:141"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1397:6:141"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1232:9:141",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1243:7:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1255:6:141",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1263:6:141",
                "type": ""
              }
            ],
            "src": "1187:258:141"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1589:217:141",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1635:26:141",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1644:6:141"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1652:6:141"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1637:6:141"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1637:22:141"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1637:22:141"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1610:7:141"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1619:9:141"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1606:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1606:23:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1631:2:141",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1602:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1602:32:141"
                  },
                  "nodeType": "YulIf",
                  "src": "1599:2:141"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1670:56:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1707:9:141"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1718:7:141"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_struct_Unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "1680:26:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1680:46:141"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1670:6:141"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1735:65:141",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1776:9:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1787:2:141",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1772:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1772:18:141"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1792:7:141"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_struct_Unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "1745:26:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1745:55:141"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1735:6:141"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_Unsigned_$4536_memory_ptrt_struct$_Unsigned_$4536_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1547:9:141",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1558:7:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1570:6:141",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1578:6:141",
                "type": ""
              }
            ],
            "src": "1450:356:141"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1924:194:141",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1970:26:141",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1979:6:141"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1987:6:141"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1972:6:141"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1972:22:141"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1972:22:141"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1945:7:141"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1954:9:141"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1941:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1941:23:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1966:2:141",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1937:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1937:32:141"
                  },
                  "nodeType": "YulIf",
                  "src": "1934:2:141"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2005:56:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2042:9:141"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2053:7:141"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_struct_Unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "2015:26:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2015:46:141"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2005:6:141"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2070:42:141",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2097:9:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2108:2:141",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2093:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2093:18:141"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2080:12:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2080:32:141"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2070:6:141"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_Unsigned_$4536_memory_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1882:9:141",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1893:7:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1905:6:141",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1913:6:141",
                "type": ""
              }
            ],
            "src": "1811:307:141"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2204:113:141",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2250:26:141",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2259:6:141"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2267:6:141"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2252:6:141"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2252:22:141"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2252:22:141"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2225:7:141"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2234:9:141"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2221:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2221:23:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2246:2:141",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2217:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2217:32:141"
                  },
                  "nodeType": "YulIf",
                  "src": "2214:2:141"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2285:26:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2301:9:141"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2295:5:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2295:16:141"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2285:6:141"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2170:9:141",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2181:7:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2193:6:141",
                "type": ""
              }
            ],
            "src": "2123:194:141"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2423:76:141",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2433:26:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2445:9:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2456:2:141",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2441:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2441:18:141"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2433:4:141"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2475:9:141"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2486:6:141"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2468:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2468:25:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2468:25:141"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2392:9:141",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2403:6:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2414:4:141",
                "type": ""
              }
            ],
            "src": "2322:177:141"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2678:170:141",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2695:9:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2706:2:141",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2688:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2688:21:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2688:21:141"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2729:9:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2740:2:141",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2725:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2725:18:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2745:2:141",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2718:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2718:30:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2718:30:141"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2768:9:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2779:2:141",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2764:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2764:18:141"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2784:22:141",
                        "type": "",
                        "value": "Invalid EMP contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2757:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2757:50:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2757:50:141"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2816:26:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2828:9:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2839:2:141",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2824:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2824:18:141"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2816:4:141"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_414057ca04fb0eac83f93a4edb2bbafd68669ee9198c65b64b7b3051f2873eed__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2655:9:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2669:4:141",
                "type": ""
              }
            ],
            "src": "2504:344:141"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3027:176:141",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3044:9:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3055:2:141",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3037:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3037:21:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3037:21:141"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3078:9:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3089:2:141",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3074:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3074:18:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3094:2:141",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3067:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3067:30:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3067:30:141"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3117:9:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3128:2:141",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3113:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3113:18:141"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3133:28:141",
                        "type": "",
                        "value": "Transformation already set"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3106:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3106:56:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3106:56:141"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3171:26:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3183:9:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3194:2:141",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3179:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3179:18:141"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3171:4:141"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_56e4fc2ed1ba559245e42b2b5a203df681a8cd6d03c25502ed78ff6452ca8e47__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3004:9:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3018:4:141",
                "type": ""
              }
            ],
            "src": "2853:350:141"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3382:182:141",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3399:9:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3410:2:141",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3392:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3392:21:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3392:21:141"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3433:9:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3444:2:141",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3429:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3429:18:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3449:2:141",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3422:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3422:30:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3422:30:141"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3472:9:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3483:2:141",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3468:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3468:18:141"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3488:34:141",
                        "type": "",
                        "value": "Cant set to empty transformation"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3461:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3461:62:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3461:62:141"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3532:26:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3544:9:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3555:2:141",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3540:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3540:18:141"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3532:4:141"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5e8cb7451b17e33d06f17284b8f305e2c47c7f858abb8be4e15d86ea42cec4ff__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3359:9:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3373:4:141",
                "type": ""
              }
            ],
            "src": "3208:356:141"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3743:178:141",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3760:9:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3771:2:141",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3753:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3753:21:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3753:21:141"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3794:9:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3805:2:141",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3790:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3790:18:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3810:2:141",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3783:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3783:30:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3783:30:141"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3833:9:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3844:2:141",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3829:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3829:18:141"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3849:30:141",
                        "type": "",
                        "value": "Caller has no transformation"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3822:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3822:58:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3822:58:141"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3889:26:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3901:9:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3912:2:141",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3897:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3897:18:141"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3889:4:141"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9d97f4c58f4755cb397a46d3af93b164e3f42de2f963c53e0ed406637291b1f8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3720:9:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3734:4:141",
                "type": ""
              }
            ],
            "src": "3569:352:141"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4100:181:141",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4117:9:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4128:2:141",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4110:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4110:21:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4110:21:141"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4151:9:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4162:2:141",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4147:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4147:18:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4167:2:141",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4140:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4140:30:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4140:30:141"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4190:9:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4201:2:141",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4186:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4186:18:141"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4206:33:141",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4179:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4179:61:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4179:61:141"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4249:26:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4261:9:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4272:2:141",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4257:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4257:18:141"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4249:4:141"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4077:9:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4091:4:141",
                "type": ""
              }
            ],
            "src": "3926:355:141"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4439:83:141",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4449:26:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4461:9:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4472:2:141",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4457:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4457:18:141"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4449:4:141"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4491:9:141"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4508:6:141"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4502:5:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4502:13:141"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4484:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4484:32:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4484:32:141"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Unsigned_$4536_memory_ptr__to_t_struct$_Unsigned_$4536_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4408:9:141",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4419:6:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4430:4:141",
                "type": ""
              }
            ],
            "src": "4286:236:141"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_struct_Unsigned(headStart, end) -> value\n    {\n        if slt(sub(end, headStart), 0x20) { revert(value, value) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x20)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(value, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(value, 0x24)\n        }\n        mstore(64, newFreePtr)\n        value := memPtr\n        mstore(memPtr, calldataload(headStart))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_struct$_Unsigned_$4536_memory_ptrt_struct$_Unsigned_$4536_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_struct_Unsigned(headStart, dataEnd)\n        value1 := abi_decode_struct_Unsigned(add(headStart, 32), dataEnd)\n    }\n    function abi_decode_tuple_t_struct$_Unsigned_$4536_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_struct_Unsigned(headStart, dataEnd)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_414057ca04fb0eac83f93a4edb2bbafd68669ee9198c65b64b7b3051f2873eed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Invalid EMP contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_56e4fc2ed1ba559245e42b2b5a203df681a8cd6d03c25502ed78ff6452ca8e47__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Transformation already set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5e8cb7451b17e33d06f17284b8f305e2c47c7f858abb8be4e15d86ea42cec4ff__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Cant set to empty transformation\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9d97f4c58f4755cb397a46d3af93b164e3f42de2f963c53e0ed406637291b1f8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Caller has no transformation\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_Unsigned_$4536_memory_ptr__to_t_struct$_Unsigned_$4536_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, mload(value0))\n    }\n}",
      "id": 141,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "749:2917:59:-:0;;;;;;;;;;;;-1:-1:-1;896:11:20;:18;;-1:-1:-1;;896:18:20;910:4;896:18;;;749:2917:59;;;;;;",
  "deployedSourceMap": "749:2917:59:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;926:213:56;;;;;;:::i;:::-;;:::i;:::-;;;4502:13:141;;4484:32;;4472:2;4457:18;926:213:56;;;;;;;;1548:552:59;;;;;;:::i;:::-;;:::i;:::-;;1581:254:56;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;1807:21:56;;-1:-1:-1;1581:254:56;2364:244:59;;;;;;:::i;:::-;;:::i;:::-;;;2468:25:141;;;2456:2;2441:18;2364:244:59;2423:76:141;2999:665:59;;;;;;:::i;:::-;;:::i;926:213:56:-;-1:-1:-1;;;;;;;;;;;;1121:11:56;926:213;;;;;:::o;1548:552:59:-;1330:19:20;:17;:19::i;:::-;1359:17;2465:5;2451:19;;-1:-1:-1;;2451:19:20;;;2341:136;1359:17;1715:27:59;1707:72:::1;;;::::0;-1:-1:-1;;;1707:72:59;;3410:2:141;1707:72:59::1;::::0;::::1;3392:21:141::0;;;3429:18;;;3422:30;3488:34;3468:18;;;3461:62;3540:18;;1707:72:59::1;;;;;;;;;-1:-1:-1::0;;;;;1797:56:59;::::1;;::::0;;;:38:::1;:56;::::0;;;;;:62;1789:101:::1;;;::::0;-1:-1:-1;;;1789:101:59;;3055:2:141;1789:101:59::1;::::0;::::1;3037:21:141::0;3094:2;3074:18;;;3067:30;3133:28;3113:18;;;3106:56;3179:18;;1789:101:59::1;3027:176:141::0;1789:101:59::1;1934:16;-1:-1:-1::0;;;;;1908:63:59::1;;:65;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1900:103;;;::::0;-1:-1:-1;;;1900:103:59;;2706:2:141;1900:103:59::1;::::0;::::1;2688:21:141::0;2745:2;2725:18;;;2718:30;-1:-1:-1;;;2764:18:141;;;2757:50;2824:18;;1900:103:59::1;2678:170:141::0;1900:103:59::1;-1:-1:-1::0;;;;;2013:56:59;::::1;;::::0;;;:38:::1;:56;::::0;;;;:80;;;1397:20:20;2664:11;:18;;-1:-1:-1;;2664:18:20;2678:4;2664:18;;;2483:206;1397:20;1548:552:59;;:::o;2364:244::-;2515:7;1616:19:20;:17;:19::i;:::-;-1:-1:-1;;;;;;2545:56:59;::::1;;::::0;;;:38:::1;:56;::::0;;;;;1645:1:20::1;2364:244:59::0;;;:::o;2999:665::-;3163:7;1616:19:20;:17;:19::i;:::-;3233:10:59::1;3194:50;::::0;;;:38:::1;:50;::::0;;;;;3186:97:::1;;;::::0;-1:-1:-1;;;3186:97:59;;3771:2:141;3186:97:59::1;::::0;::::1;3753:21:141::0;3810:2;3790:18;;;3783:30;3849;3829:18;;;3822:58;3897:18;;3186:97:59::1;3743:178:141::0;3186:97:59::1;3493:10;-1:-1:-1::0;;;;;3467:57:59::1;;:59;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3453:11;:73;3449:209;;;-1:-1:-1::0;3588:10:59::1;3549:50;::::0;;;:38:::1;:50;::::0;;;;;3542:57:::1;;3449:209;-1:-1:-1::0;3637:10:59;3630:17:::1;;2149:186:20::0;2281:11;;;;2273:55;;;;-1:-1:-1;;;2273:55:20;;4128:2:141;2273:55:20;;;4110:21:141;4167:2;4147:18;;;4140:30;4206:33;4186:18;;;4179:61;4257:18;;2273:55:20;4100:181:141;2273:55:20;2149:186::o;14:173:141:-;82:20;;-1:-1:-1;;;;;131:31:141;;121:42;;111:2;;177:1;174;167:12;192:520;247:5;295:4;283:9;278:3;274:19;270:30;267:2;;;317:5;310;303:20;267:2;354;348:9;396:4;388:6;384:17;467:6;455:10;452:22;431:18;419:10;416:34;413:62;410:2;;;-1:-1:-1;;;498:35:141;;556:4;553:1;546:15;588:4;505:5;574:19;410:2;619;612:22;682:23;;667:39;;-1:-1:-1;652:6:141;257:455;-1:-1:-1;257:455:141:o;717:196::-;776:6;829:2;817:9;808:7;804:23;800:32;797:2;;;850:6;842;835:22;797:2;878:29;897:9;878:29;:::i;:::-;868:39;787:126;-1:-1:-1;;;787:126:141:o;918:264::-;986:6;994;1047:2;1035:9;1026:7;1022:23;1018:32;1015:2;;;1068:6;1060;1053:22;1015:2;1096:29;1115:9;1096:29;:::i;:::-;1086:39;1172:2;1157:18;;;;1144:32;;-1:-1:-1;;;1005:177:141:o;1187:258::-;1255:6;1263;1316:2;1304:9;1295:7;1291:23;1287:32;1284:2;;;1337:6;1329;1322:22;1284:2;-1:-1:-1;;1365:23:141;;;1435:2;1420:18;;;1407:32;;-1:-1:-1;1274:171:141:o;1450:356::-;1570:6;1578;1631:2;1619:9;1610:7;1606:23;1602:32;1599:2;;;1652:6;1644;1637:22;1599:2;1680:46;1718:7;1707:9;1680:46;:::i;:::-;1670:56;;1745:55;1792:7;1787:2;1776:9;1772:18;1745:55;:::i;:::-;1735:65;;1589:217;;;;;:::o;1811:307::-;1905:6;1913;1966:2;1954:9;1945:7;1941:23;1937:32;1934:2;;;1987:6;1979;1972:22;1934:2;2015:46;2053:7;2042:9;2015:46;:::i;2123:194::-;2193:6;2246:2;2234:9;2225:7;2221:23;2217:32;2214:2;;;2267:6;2259;2252:22;2214:2;-1:-1:-1;2295:16:141;;2204:113;-1:-1:-1;2204:113:141:o",
  "source": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\npragma abicoder v2;\nimport \"./FinancialProductLibrary.sol\";\nimport \"../../../common/implementation/Lockable.sol\";\n\n/**\n * @title Pre-Expiration Identifier Transformation Financial Product Library\n * @notice Adds custom identifier transformation to enable a financial contract to use two different identifiers, depending\n * on when a price request is made. If the request is made before expiration then a transformation is made to the identifier\n * & if it is at or after expiration then the original identifier is returned. This library enables self referential\n * TWAP identifier to be used on synthetics pre-expiration, in conjunction with a separate identifier at expiration.\n */\ncontract PreExpirationIdentifierTransformationFinancialProductLibrary is FinancialProductLibrary, Lockable {\n    mapping(address => bytes32) financialProductTransformedIdentifiers;\n\n    /**\n     * @notice Enables the deployer of the library to set the transformed identifier for an associated financial product.\n     * @param financialProduct address of the financial product.\n     * @param transformedIdentifier the identifier for the financial product to be used if the contract is pre expiration.\n     * @dev Note: a) Any address can set identifier transformations b) The identifier can't be set to blank. c) A\n     * transformed price can only be set once to prevent the deployer from changing it after the fact. d) financialProduct\n     * must expose an expirationTimestamp method.\n     */\n    function setFinancialProductTransformedIdentifier(address financialProduct, bytes32 transformedIdentifier)\n        public\n        nonReentrant()\n    {\n        require(transformedIdentifier != \"\", \"Cant set to empty transformation\");\n        require(financialProductTransformedIdentifiers[financialProduct] == \"\", \"Transformation already set\");\n        require(ExpiringContractInterface(financialProduct).expirationTimestamp() != 0, \"Invalid EMP contract\");\n        financialProductTransformedIdentifiers[financialProduct] = transformedIdentifier;\n    }\n\n    /**\n     * @notice Returns the transformed identifier associated with a given financial product address.\n     * @param financialProduct address of the financial product.\n     * @return transformed identifier for the associated financial product.\n     */\n    function getTransformedIdentifierForFinancialProduct(address financialProduct)\n        public\n        view\n        nonReentrantView()\n        returns (bytes32)\n    {\n        return financialProductTransformedIdentifiers[financialProduct];\n    }\n\n    /**\n     * @notice Returns a transformed price identifier if the contract is pre-expiration and no transformation if post.\n     * @param identifier input price identifier to be transformed.\n     * @param requestTime timestamp the identifier is to be used at.\n     * @return transformedPriceIdentifier the input price identifier with the transformation logic applied to it.\n     */\n    function transformPriceIdentifier(bytes32 identifier, uint256 requestTime)\n        public\n        view\n        override\n        nonReentrantView()\n        returns (bytes32)\n    {\n        require(financialProductTransformedIdentifiers[msg.sender] != \"\", \"Caller has no transformation\");\n        // If the request time is before contract expiration then return the transformed identifier. Else, return the\n        // original price identifier.\n        if (requestTime < ExpiringContractInterface(msg.sender).expirationTimestamp()) {\n            return financialProductTransformedIdentifiers[msg.sender];\n        } else {\n            return identifier;\n        }\n    }\n}\n",
  "sourcePath": "/home/kamto/code/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/PreExpirationIdentifierTransformationFinancialProductLibrary.sol",
  "ast": {
    "absolutePath": "/home/kamto/code/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/PreExpirationIdentifierTransformationFinancialProductLibrary.sol",
    "exportedSymbols": {
      "ExpiringContractInterface": [
        11746
      ],
      "FinancialProductLibrary": [
        11796
      ],
      "FixedPoint": [
        6150
      ],
      "Lockable": [
        6211
      ],
      "PreExpirationIdentifierTransformationFinancialProductLibrary": [
        12095
      ],
      "SafeMath": [
        34361
      ],
      "SignedSafeMath": [
        34425
      ]
    },
    "id": 12096,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11981,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:59"
      },
      {
        "id": 11982,
        "literals": [
          "abicoder",
          "v2"
        ],
        "nodeType": "PragmaDirective",
        "src": "66:19:59"
      },
      {
        "absolutePath": "/home/kamto/code/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/FinancialProductLibrary.sol",
        "file": "./FinancialProductLibrary.sol",
        "id": 11983,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12096,
        "sourceUnit": 11797,
        "src": "86:39:59",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kamto/code/protocol/packages/core/contracts/common/implementation/Lockable.sol",
        "file": "../../../common/implementation/Lockable.sol",
        "id": 11984,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12096,
        "sourceUnit": 6212,
        "src": "126:53:59",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11986,
              "name": "FinancialProductLibrary",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11796,
              "src": "822:23:59"
            },
            "id": 11987,
            "nodeType": "InheritanceSpecifier",
            "src": "822:23:59"
          },
          {
            "baseName": {
              "id": 11988,
              "name": "Lockable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6211,
              "src": "847:8:59"
            },
            "id": 11989,
            "nodeType": "InheritanceSpecifier",
            "src": "847:8:59"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11985,
          "nodeType": "StructuredDocumentation",
          "src": "181:567:59",
          "text": " @title Pre-Expiration Identifier Transformation Financial Product Library\n @notice Adds custom identifier transformation to enable a financial contract to use two different identifiers, depending\n on when a price request is made. If the request is made before expiration then a transformation is made to the identifier\n & if it is at or after expiration then the original identifier is returned. This library enables self referential\n TWAP identifier to be used on synthetics pre-expiration, in conjunction with a separate identifier at expiration."
        },
        "fullyImplemented": true,
        "id": 12095,
        "linearizedBaseContracts": [
          12095,
          6211,
          11796
        ],
        "name": "PreExpirationIdentifierTransformationFinancialProductLibrary",
        "nameLocation": "758:60:59",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 11993,
            "mutability": "mutable",
            "name": "financialProductTransformedIdentifiers",
            "nameLocation": "890:38:59",
            "nodeType": "VariableDeclaration",
            "scope": 12095,
            "src": "862:66:59",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
              "typeString": "mapping(address => bytes32)"
            },
            "typeName": {
              "id": 11992,
              "keyType": {
                "id": 11990,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "870:7:59",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "862:27:59",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                "typeString": "mapping(address => bytes32)"
              },
              "valueType": {
                "id": 11991,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "881:7:59",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12036,
              "nodeType": "Block",
              "src": "1697:403:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 12006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 12004,
                          "name": "transformedIdentifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11998,
                          "src": "1715:21:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "",
                          "id": 12005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1740:2:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        "src": "1715:27:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e742073657420746f20656d707479207472616e73666f726d6174696f6e",
                        "id": 12007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1744:34:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e8cb7451b17e33d06f17284b8f305e2c47c7f858abb8be4e15d86ea42cec4ff",
                          "typeString": "literal_string \"Cant set to empty transformation\""
                        },
                        "value": "Cant set to empty transformation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e8cb7451b17e33d06f17284b8f305e2c47c7f858abb8be4e15d86ea42cec4ff",
                          "typeString": "literal_string \"Cant set to empty transformation\""
                        }
                      ],
                      "id": 12003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1707:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1707:72:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12009,
                  "nodeType": "ExpressionStatement",
                  "src": "1707:72:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 12015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 12011,
                            "name": "financialProductTransformedIdentifiers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11993,
                            "src": "1797:38:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 12013,
                          "indexExpression": {
                            "id": 12012,
                            "name": "financialProduct",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11996,
                            "src": "1836:16:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1797:56:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "",
                          "id": 12014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1857:2:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        "src": "1797:62:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73666f726d6174696f6e20616c726561647920736574",
                        "id": 12016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1861:28:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56e4fc2ed1ba559245e42b2b5a203df681a8cd6d03c25502ed78ff6452ca8e47",
                          "typeString": "literal_string \"Transformation already set\""
                        },
                        "value": "Transformation already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56e4fc2ed1ba559245e42b2b5a203df681a8cd6d03c25502ed78ff6452ca8e47",
                          "typeString": "literal_string \"Transformation already set\""
                        }
                      ],
                      "id": 12010,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1789:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1789:101:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12018,
                  "nodeType": "ExpressionStatement",
                  "src": "1789:101:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 12021,
                                  "name": "financialProduct",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11996,
                                  "src": "1934:16:59",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 12020,
                                "name": "ExpiringContractInterface",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11746,
                                "src": "1908:25:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ExpiringContractInterface_$11746_$",
                                  "typeString": "type(contract ExpiringContractInterface)"
                                }
                              },
                              "id": 12022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1908:43:59",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ExpiringContractInterface_$11746",
                                "typeString": "contract ExpiringContractInterface"
                              }
                            },
                            "id": 12023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expirationTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11745,
                            "src": "1908:63:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 12024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1908:65:59",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 12025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1977:1:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1908:70:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420454d5020636f6e7472616374",
                        "id": 12027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1980:22:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_414057ca04fb0eac83f93a4edb2bbafd68669ee9198c65b64b7b3051f2873eed",
                          "typeString": "literal_string \"Invalid EMP contract\""
                        },
                        "value": "Invalid EMP contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_414057ca04fb0eac83f93a4edb2bbafd68669ee9198c65b64b7b3051f2873eed",
                          "typeString": "literal_string \"Invalid EMP contract\""
                        }
                      ],
                      "id": 12019,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1900:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1900:103:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12029,
                  "nodeType": "ExpressionStatement",
                  "src": "1900:103:59"
                },
                {
                  "expression": {
                    "id": 12034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 12030,
                        "name": "financialProductTransformedIdentifiers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11993,
                        "src": "2013:38:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        }
                      },
                      "id": 12032,
                      "indexExpression": {
                        "id": 12031,
                        "name": "financialProduct",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11996,
                        "src": "2052:16:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2013:56:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12033,
                      "name": "transformedIdentifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11998,
                      "src": "2072:21:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2013:80:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 12035,
                  "nodeType": "ExpressionStatement",
                  "src": "2013:80:59"
                }
              ]
            },
            "documentation": {
              "id": 11994,
              "nodeType": "StructuredDocumentation",
              "src": "935:608:59",
              "text": " @notice Enables the deployer of the library to set the transformed identifier for an associated financial product.\n @param financialProduct address of the financial product.\n @param transformedIdentifier the identifier for the financial product to be used if the contract is pre expiration.\n @dev Note: a) Any address can set identifier transformations b) The identifier can't be set to blank. c) A\n transformed price can only be set once to prevent the deployer from changing it after the fact. d) financialProduct\n must expose an expirationTimestamp method."
            },
            "functionSelector": "16bed30e",
            "id": 12037,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 12001,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12000,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6177,
                  "src": "1678:12:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "1678:14:59"
              }
            ],
            "name": "setFinancialProductTransformedIdentifier",
            "nameLocation": "1557:40:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11996,
                  "mutability": "mutable",
                  "name": "financialProduct",
                  "nameLocation": "1606:16:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 12037,
                  "src": "1598:24:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11995,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1598:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11998,
                  "mutability": "mutable",
                  "name": "transformedIdentifier",
                  "nameLocation": "1632:21:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 12037,
                  "src": "1624:29:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 11997,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1624:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1597:57:59"
            },
            "returnParameters": {
              "id": 12002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1697:0:59"
            },
            "scope": 12095,
            "src": "1548:552:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12051,
              "nodeType": "Block",
              "src": "2528:80:59",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 12047,
                      "name": "financialProductTransformedIdentifiers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11993,
                      "src": "2545:38:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                        "typeString": "mapping(address => bytes32)"
                      }
                    },
                    "id": 12049,
                    "indexExpression": {
                      "id": 12048,
                      "name": "financialProduct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12040,
                      "src": "2584:16:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2545:56:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 12046,
                  "id": 12050,
                  "nodeType": "Return",
                  "src": "2538:63:59"
                }
              ]
            },
            "documentation": {
              "id": 12038,
              "nodeType": "StructuredDocumentation",
              "src": "2106:253:59",
              "text": " @notice Returns the transformed identifier associated with a given financial product address.\n @param financialProduct address of the financial product.\n @return transformed identifier for the associated financial product."
            },
            "functionSelector": "bc2ac858",
            "id": 12052,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 12043,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12042,
                  "name": "nonReentrantView",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6185,
                  "src": "2479:16:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "2479:18:59"
              }
            ],
            "name": "getTransformedIdentifierForFinancialProduct",
            "nameLocation": "2373:43:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12040,
                  "mutability": "mutable",
                  "name": "financialProduct",
                  "nameLocation": "2425:16:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 12052,
                  "src": "2417:24:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12039,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2417:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2416:26:59"
            },
            "returnParameters": {
              "id": 12046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12045,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12052,
                  "src": "2515:7:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 12044,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2515:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2514:9:59"
            },
            "scope": 12095,
            "src": "2364:244:59",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              11795
            ],
            "body": {
              "id": 12093,
              "nodeType": "Block",
              "src": "3176:488:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 12071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 12066,
                            "name": "financialProductTransformedIdentifiers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11993,
                            "src": "3194:38:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 12069,
                          "indexExpression": {
                            "expression": {
                              "id": 12067,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3233:3:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 12068,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3233:10:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3194:50:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "",
                          "id": 12070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3248:2:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        "src": "3194:56:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c657220686173206e6f207472616e73666f726d6174696f6e",
                        "id": 12072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3252:30:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9d97f4c58f4755cb397a46d3af93b164e3f42de2f963c53e0ed406637291b1f8",
                          "typeString": "literal_string \"Caller has no transformation\""
                        },
                        "value": "Caller has no transformation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9d97f4c58f4755cb397a46d3af93b164e3f42de2f963c53e0ed406637291b1f8",
                          "typeString": "literal_string \"Caller has no transformation\""
                        }
                      ],
                      "id": 12065,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3186:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3186:97:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12074,
                  "nodeType": "ExpressionStatement",
                  "src": "3186:97:59"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12075,
                      "name": "requestTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12057,
                      "src": "3453:11:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 12077,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3493:3:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 12078,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3493:10:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 12076,
                            "name": "ExpiringContractInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11746,
                            "src": "3467:25:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ExpiringContractInterface_$11746_$",
                              "typeString": "type(contract ExpiringContractInterface)"
                            }
                          },
                          "id": 12079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3467:37:59",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ExpiringContractInterface_$11746",
                            "typeString": "contract ExpiringContractInterface"
                          }
                        },
                        "id": 12080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expirationTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11745,
                        "src": "3467:57:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 12081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3467:59:59",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3453:73:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 12091,
                    "nodeType": "Block",
                    "src": "3616:42:59",
                    "statements": [
                      {
                        "expression": {
                          "id": 12089,
                          "name": "identifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12055,
                          "src": "3637:10:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 12064,
                        "id": 12090,
                        "nodeType": "Return",
                        "src": "3630:17:59"
                      }
                    ]
                  },
                  "id": 12092,
                  "nodeType": "IfStatement",
                  "src": "3449:209:59",
                  "trueBody": {
                    "id": 12088,
                    "nodeType": "Block",
                    "src": "3528:82:59",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 12083,
                            "name": "financialProductTransformedIdentifiers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11993,
                            "src": "3549:38:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 12086,
                          "indexExpression": {
                            "expression": {
                              "id": 12084,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3588:3:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 12085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3588:10:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3549:50:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 12064,
                        "id": 12087,
                        "nodeType": "Return",
                        "src": "3542:57:59"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 12053,
              "nodeType": "StructuredDocumentation",
              "src": "2614:380:59",
              "text": " @notice Returns a transformed price identifier if the contract is pre-expiration and no transformation if post.\n @param identifier input price identifier to be transformed.\n @param requestTime timestamp the identifier is to be used at.\n @return transformedPriceIdentifier the input price identifier with the transformation logic applied to it."
            },
            "functionSelector": "f19371b7",
            "id": 12094,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 12061,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12060,
                  "name": "nonReentrantView",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6185,
                  "src": "3127:16:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "3127:18:59"
              }
            ],
            "name": "transformPriceIdentifier",
            "nameLocation": "3008:24:59",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 12059,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3110:8:59"
            },
            "parameters": {
              "id": 12058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12055,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "3041:10:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 12094,
                  "src": "3033:18:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 12054,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3033:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12057,
                  "mutability": "mutable",
                  "name": "requestTime",
                  "nameLocation": "3061:11:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 12094,
                  "src": "3053:19:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12056,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3053:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3032:41:59"
            },
            "returnParameters": {
              "id": 12064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12063,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12094,
                  "src": "3163:7:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 12062,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3163:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3162:9:59"
            },
            "scope": 12095,
            "src": "2999:665:59",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 12096,
        "src": "749:2917:59",
        "usedErrors": []
      }
    ],
    "src": "42:3625:59"
  },
  "legacyAST": {
    "absolutePath": "/home/kamto/code/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/PreExpirationIdentifierTransformationFinancialProductLibrary.sol",
    "exportedSymbols": {
      "ExpiringContractInterface": [
        11746
      ],
      "FinancialProductLibrary": [
        11796
      ],
      "FixedPoint": [
        6150
      ],
      "Lockable": [
        6211
      ],
      "PreExpirationIdentifierTransformationFinancialProductLibrary": [
        12095
      ],
      "SafeMath": [
        34361
      ],
      "SignedSafeMath": [
        34425
      ]
    },
    "id": 12096,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11981,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:59"
      },
      {
        "id": 11982,
        "literals": [
          "abicoder",
          "v2"
        ],
        "nodeType": "PragmaDirective",
        "src": "66:19:59"
      },
      {
        "absolutePath": "/home/kamto/code/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/FinancialProductLibrary.sol",
        "file": "./FinancialProductLibrary.sol",
        "id": 11983,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12096,
        "sourceUnit": 11797,
        "src": "86:39:59",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kamto/code/protocol/packages/core/contracts/common/implementation/Lockable.sol",
        "file": "../../../common/implementation/Lockable.sol",
        "id": 11984,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12096,
        "sourceUnit": 6212,
        "src": "126:53:59",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11986,
              "name": "FinancialProductLibrary",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11796,
              "src": "822:23:59"
            },
            "id": 11987,
            "nodeType": "InheritanceSpecifier",
            "src": "822:23:59"
          },
          {
            "baseName": {
              "id": 11988,
              "name": "Lockable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6211,
              "src": "847:8:59"
            },
            "id": 11989,
            "nodeType": "InheritanceSpecifier",
            "src": "847:8:59"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11985,
          "nodeType": "StructuredDocumentation",
          "src": "181:567:59",
          "text": " @title Pre-Expiration Identifier Transformation Financial Product Library\n @notice Adds custom identifier transformation to enable a financial contract to use two different identifiers, depending\n on when a price request is made. If the request is made before expiration then a transformation is made to the identifier\n & if it is at or after expiration then the original identifier is returned. This library enables self referential\n TWAP identifier to be used on synthetics pre-expiration, in conjunction with a separate identifier at expiration."
        },
        "fullyImplemented": true,
        "id": 12095,
        "linearizedBaseContracts": [
          12095,
          6211,
          11796
        ],
        "name": "PreExpirationIdentifierTransformationFinancialProductLibrary",
        "nameLocation": "758:60:59",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 11993,
            "mutability": "mutable",
            "name": "financialProductTransformedIdentifiers",
            "nameLocation": "890:38:59",
            "nodeType": "VariableDeclaration",
            "scope": 12095,
            "src": "862:66:59",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
              "typeString": "mapping(address => bytes32)"
            },
            "typeName": {
              "id": 11992,
              "keyType": {
                "id": 11990,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "870:7:59",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "862:27:59",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                "typeString": "mapping(address => bytes32)"
              },
              "valueType": {
                "id": 11991,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "881:7:59",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12036,
              "nodeType": "Block",
              "src": "1697:403:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 12006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 12004,
                          "name": "transformedIdentifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11998,
                          "src": "1715:21:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "",
                          "id": 12005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1740:2:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        "src": "1715:27:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e742073657420746f20656d707479207472616e73666f726d6174696f6e",
                        "id": 12007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1744:34:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e8cb7451b17e33d06f17284b8f305e2c47c7f858abb8be4e15d86ea42cec4ff",
                          "typeString": "literal_string \"Cant set to empty transformation\""
                        },
                        "value": "Cant set to empty transformation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e8cb7451b17e33d06f17284b8f305e2c47c7f858abb8be4e15d86ea42cec4ff",
                          "typeString": "literal_string \"Cant set to empty transformation\""
                        }
                      ],
                      "id": 12003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1707:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1707:72:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12009,
                  "nodeType": "ExpressionStatement",
                  "src": "1707:72:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 12015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 12011,
                            "name": "financialProductTransformedIdentifiers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11993,
                            "src": "1797:38:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 12013,
                          "indexExpression": {
                            "id": 12012,
                            "name": "financialProduct",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11996,
                            "src": "1836:16:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1797:56:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "",
                          "id": 12014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1857:2:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        "src": "1797:62:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73666f726d6174696f6e20616c726561647920736574",
                        "id": 12016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1861:28:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56e4fc2ed1ba559245e42b2b5a203df681a8cd6d03c25502ed78ff6452ca8e47",
                          "typeString": "literal_string \"Transformation already set\""
                        },
                        "value": "Transformation already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56e4fc2ed1ba559245e42b2b5a203df681a8cd6d03c25502ed78ff6452ca8e47",
                          "typeString": "literal_string \"Transformation already set\""
                        }
                      ],
                      "id": 12010,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1789:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1789:101:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12018,
                  "nodeType": "ExpressionStatement",
                  "src": "1789:101:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 12021,
                                  "name": "financialProduct",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11996,
                                  "src": "1934:16:59",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 12020,
                                "name": "ExpiringContractInterface",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11746,
                                "src": "1908:25:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ExpiringContractInterface_$11746_$",
                                  "typeString": "type(contract ExpiringContractInterface)"
                                }
                              },
                              "id": 12022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1908:43:59",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ExpiringContractInterface_$11746",
                                "typeString": "contract ExpiringContractInterface"
                              }
                            },
                            "id": 12023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expirationTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11745,
                            "src": "1908:63:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 12024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1908:65:59",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 12025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1977:1:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1908:70:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420454d5020636f6e7472616374",
                        "id": 12027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1980:22:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_414057ca04fb0eac83f93a4edb2bbafd68669ee9198c65b64b7b3051f2873eed",
                          "typeString": "literal_string \"Invalid EMP contract\""
                        },
                        "value": "Invalid EMP contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_414057ca04fb0eac83f93a4edb2bbafd68669ee9198c65b64b7b3051f2873eed",
                          "typeString": "literal_string \"Invalid EMP contract\""
                        }
                      ],
                      "id": 12019,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1900:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1900:103:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12029,
                  "nodeType": "ExpressionStatement",
                  "src": "1900:103:59"
                },
                {
                  "expression": {
                    "id": 12034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 12030,
                        "name": "financialProductTransformedIdentifiers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11993,
                        "src": "2013:38:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        }
                      },
                      "id": 12032,
                      "indexExpression": {
                        "id": 12031,
                        "name": "financialProduct",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11996,
                        "src": "2052:16:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2013:56:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12033,
                      "name": "transformedIdentifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11998,
                      "src": "2072:21:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2013:80:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 12035,
                  "nodeType": "ExpressionStatement",
                  "src": "2013:80:59"
                }
              ]
            },
            "documentation": {
              "id": 11994,
              "nodeType": "StructuredDocumentation",
              "src": "935:608:59",
              "text": " @notice Enables the deployer of the library to set the transformed identifier for an associated financial product.\n @param financialProduct address of the financial product.\n @param transformedIdentifier the identifier for the financial product to be used if the contract is pre expiration.\n @dev Note: a) Any address can set identifier transformations b) The identifier can't be set to blank. c) A\n transformed price can only be set once to prevent the deployer from changing it after the fact. d) financialProduct\n must expose an expirationTimestamp method."
            },
            "functionSelector": "16bed30e",
            "id": 12037,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 12001,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12000,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6177,
                  "src": "1678:12:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "1678:14:59"
              }
            ],
            "name": "setFinancialProductTransformedIdentifier",
            "nameLocation": "1557:40:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11996,
                  "mutability": "mutable",
                  "name": "financialProduct",
                  "nameLocation": "1606:16:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 12037,
                  "src": "1598:24:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11995,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1598:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11998,
                  "mutability": "mutable",
                  "name": "transformedIdentifier",
                  "nameLocation": "1632:21:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 12037,
                  "src": "1624:29:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 11997,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1624:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1597:57:59"
            },
            "returnParameters": {
              "id": 12002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1697:0:59"
            },
            "scope": 12095,
            "src": "1548:552:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12051,
              "nodeType": "Block",
              "src": "2528:80:59",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 12047,
                      "name": "financialProductTransformedIdentifiers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11993,
                      "src": "2545:38:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                        "typeString": "mapping(address => bytes32)"
                      }
                    },
                    "id": 12049,
                    "indexExpression": {
                      "id": 12048,
                      "name": "financialProduct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12040,
                      "src": "2584:16:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2545:56:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 12046,
                  "id": 12050,
                  "nodeType": "Return",
                  "src": "2538:63:59"
                }
              ]
            },
            "documentation": {
              "id": 12038,
              "nodeType": "StructuredDocumentation",
              "src": "2106:253:59",
              "text": " @notice Returns the transformed identifier associated with a given financial product address.\n @param financialProduct address of the financial product.\n @return transformed identifier for the associated financial product."
            },
            "functionSelector": "bc2ac858",
            "id": 12052,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 12043,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12042,
                  "name": "nonReentrantView",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6185,
                  "src": "2479:16:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "2479:18:59"
              }
            ],
            "name": "getTransformedIdentifierForFinancialProduct",
            "nameLocation": "2373:43:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12040,
                  "mutability": "mutable",
                  "name": "financialProduct",
                  "nameLocation": "2425:16:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 12052,
                  "src": "2417:24:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12039,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2417:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2416:26:59"
            },
            "returnParameters": {
              "id": 12046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12045,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12052,
                  "src": "2515:7:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 12044,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2515:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2514:9:59"
            },
            "scope": 12095,
            "src": "2364:244:59",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              11795
            ],
            "body": {
              "id": 12093,
              "nodeType": "Block",
              "src": "3176:488:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 12071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 12066,
                            "name": "financialProductTransformedIdentifiers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11993,
                            "src": "3194:38:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 12069,
                          "indexExpression": {
                            "expression": {
                              "id": 12067,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3233:3:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 12068,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3233:10:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3194:50:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "",
                          "id": 12070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3248:2:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        "src": "3194:56:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c657220686173206e6f207472616e73666f726d6174696f6e",
                        "id": 12072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3252:30:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9d97f4c58f4755cb397a46d3af93b164e3f42de2f963c53e0ed406637291b1f8",
                          "typeString": "literal_string \"Caller has no transformation\""
                        },
                        "value": "Caller has no transformation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9d97f4c58f4755cb397a46d3af93b164e3f42de2f963c53e0ed406637291b1f8",
                          "typeString": "literal_string \"Caller has no transformation\""
                        }
                      ],
                      "id": 12065,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3186:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3186:97:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12074,
                  "nodeType": "ExpressionStatement",
                  "src": "3186:97:59"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12075,
                      "name": "requestTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12057,
                      "src": "3453:11:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 12077,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3493:3:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 12078,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3493:10:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 12076,
                            "name": "ExpiringContractInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11746,
                            "src": "3467:25:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ExpiringContractInterface_$11746_$",
                              "typeString": "type(contract ExpiringContractInterface)"
                            }
                          },
                          "id": 12079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3467:37:59",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ExpiringContractInterface_$11746",
                            "typeString": "contract ExpiringContractInterface"
                          }
                        },
                        "id": 12080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expirationTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11745,
                        "src": "3467:57:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 12081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3467:59:59",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3453:73:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 12091,
                    "nodeType": "Block",
                    "src": "3616:42:59",
                    "statements": [
                      {
                        "expression": {
                          "id": 12089,
                          "name": "identifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12055,
                          "src": "3637:10:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 12064,
                        "id": 12090,
                        "nodeType": "Return",
                        "src": "3630:17:59"
                      }
                    ]
                  },
                  "id": 12092,
                  "nodeType": "IfStatement",
                  "src": "3449:209:59",
                  "trueBody": {
                    "id": 12088,
                    "nodeType": "Block",
                    "src": "3528:82:59",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 12083,
                            "name": "financialProductTransformedIdentifiers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11993,
                            "src": "3549:38:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 12086,
                          "indexExpression": {
                            "expression": {
                              "id": 12084,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3588:3:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 12085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3588:10:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3549:50:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 12064,
                        "id": 12087,
                        "nodeType": "Return",
                        "src": "3542:57:59"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 12053,
              "nodeType": "StructuredDocumentation",
              "src": "2614:380:59",
              "text": " @notice Returns a transformed price identifier if the contract is pre-expiration and no transformation if post.\n @param identifier input price identifier to be transformed.\n @param requestTime timestamp the identifier is to be used at.\n @return transformedPriceIdentifier the input price identifier with the transformation logic applied to it."
            },
            "functionSelector": "f19371b7",
            "id": 12094,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 12061,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12060,
                  "name": "nonReentrantView",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6185,
                  "src": "3127:16:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "3127:18:59"
              }
            ],
            "name": "transformPriceIdentifier",
            "nameLocation": "3008:24:59",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 12059,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3110:8:59"
            },
            "parameters": {
              "id": 12058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12055,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "3041:10:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 12094,
                  "src": "3033:18:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 12054,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3033:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12057,
                  "mutability": "mutable",
                  "name": "requestTime",
                  "nameLocation": "3061:11:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 12094,
                  "src": "3053:19:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12056,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3053:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3032:41:59"
            },
            "returnParameters": {
              "id": 12064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12063,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12094,
                  "src": "3163:7:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 12062,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3163:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3162:9:59"
            },
            "scope": 12095,
            "src": "2999:665:59",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 12096,
        "src": "749:2917:59",
        "usedErrors": []
      }
    ],
    "src": "42:3625:59"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-07T15:46:50.207Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getTransformedIdentifierForFinancialProduct(address)": {
        "params": {
          "financialProduct": "address of the financial product."
        },
        "returns": {
          "_0": "transformed identifier for the associated financial product."
        }
      },
      "setFinancialProductTransformedIdentifier(address,bytes32)": {
        "details": "Note: a) Any address can set identifier transformations b) The identifier can't be set to blank. c) A transformed price can only be set once to prevent the deployer from changing it after the fact. d) financialProduct must expose an expirationTimestamp method.",
        "params": {
          "financialProduct": "address of the financial product.",
          "transformedIdentifier": "the identifier for the financial product to be used if the contract is pre expiration."
        }
      },
      "transformCollateralRequirement((uint256),(uint256))": {
        "params": {
          "collateralRequirement": "input collateral requirement to be transformed.",
          "oraclePrice": "input price returned by DVM used to transform the collateral requirement."
        },
        "returns": {
          "_0": "transformedCollateralRequirement input collateral requirement with the transformation function applied."
        }
      },
      "transformPrice((uint256),uint256)": {
        "params": {
          "oraclePrice": "input price returned by the DVM to be transformed.",
          "requestTime": "timestamp the oraclePrice was requested at."
        },
        "returns": {
          "_0": "transformedOraclePrice input oraclePrice with the transformation function applied."
        }
      },
      "transformPriceIdentifier(bytes32,uint256)": {
        "params": {
          "identifier": "input price identifier to be transformed.",
          "requestTime": "timestamp the identifier is to be used at."
        },
        "returns": {
          "_0": "transformedPriceIdentifier the input price identifier with the transformation logic applied to it."
        }
      }
    },
    "title": "Pre-Expiration Identifier Transformation Financial Product Library",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getTransformedIdentifierForFinancialProduct(address)": {
        "notice": "Returns the transformed identifier associated with a given financial product address."
      },
      "setFinancialProductTransformedIdentifier(address,bytes32)": {
        "notice": "Enables the deployer of the library to set the transformed identifier for an associated financial product."
      },
      "transformCollateralRequirement((uint256),(uint256))": {
        "notice": "Transforms a given collateral requirement using the financial product libraries transformation logic."
      },
      "transformPrice((uint256),uint256)": {
        "notice": "Transforms a given oracle price using the financial product libraries transformation logic."
      },
      "transformPriceIdentifier(bytes32,uint256)": {
        "notice": "Returns a transformed price identifier if the contract is pre-expiration and no transformation if post."
      }
    },
    "notice": "Adds custom identifier transformation to enable a financial contract to use two different identifiers, depending on when a price request is made. If the request is made before expiration then a transformation is made to the identifier & if it is at or after expiration then the original identifier is returned. This library enables self referential TWAP identifier to be used on synthetics pre-expiration, in conjunction with a separate identifier at expiration.",
    "version": 1
  }
}