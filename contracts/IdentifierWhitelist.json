{
  "contractName": "IdentifierWhitelist",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        }
      ],
      "name": "SupportedIdentifierAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        }
      ],
      "name": "SupportedIdentifierRemoved",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        }
      ],
      "name": "addSupportedIdentifier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        }
      ],
      "name": "removeSupportedIdentifier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        }
      ],
      "name": "isIdentifierSupported",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"}],\"name\":\"SupportedIdentifierAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"}],\"name\":\"SupportedIdentifierRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"}],\"name\":\"addSupportedIdentifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"}],\"name\":\"isIdentifierSupported\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"}],\"name\":\"removeSupportedIdentifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addSupportedIdentifier(bytes32)\":{\"details\":\"Price requests using this identifier will succeed after this call.\",\"params\":{\"identifier\":\"unique UTF-8 representation for the feed being added. Eg: BTC/USD.\"}},\"isIdentifierSupported(bytes32)\":{\"params\":{\"identifier\":\"unique UTF-8 representation for the feed being queried. Eg: BTC/USD.\"},\"returns\":{\"_0\":\"bool if the identifier is supported (or not).\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeSupportedIdentifier(bytes32)\":{\"details\":\"Price requests using this identifier will no longer succeed after this call.\",\"params\":{\"identifier\":\"unique UTF-8 representation for the feed being removed. Eg: BTC/USD.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Stores a whitelist of supported identifiers that the oracle can provide prices for.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addSupportedIdentifier(bytes32)\":{\"notice\":\"Adds the provided identifier as a supported identifier.\"},\"isIdentifierSupported(bytes32)\":{\"notice\":\"Checks whether an identifier is on the whitelist.\"},\"removeSupportedIdentifier(bytes32)\":{\"notice\":\"Removes the identifier from the whitelist.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/kamto/code/protocol/packages/core/contracts/oracle/implementation/IdentifierWhitelist.sol\":\"IdentifierWhitelist\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":199},\"remappings\":[]},\"sources\":{\"/home/kamto/code/protocol/packages/core/contracts/oracle/implementation/IdentifierWhitelist.sol\":{\"keccak256\":\"0x77ad704fca2d76e187bbc72ed48323cf5b483dbee6c86afe023103d6fc7129eb\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://6c8a7765d146c7133c5028b40b4a7a060a030425299d8d6622a06af5c44d4aa8\",\"dweb:/ipfs/QmU5TDtc3XHDgp25WxFmKbYGycY7NsT5EtHJ6DH5Q2YWgt\"]},\"/home/kamto/code/protocol/packages/core/contracts/oracle/interfaces/IdentifierWhitelistInterface.sol\":{\"keccak256\":\"0xa862c6807cb63a88b2f30f6238a69122d9b143747322647dec2a730f14b8283b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://db747e7f9b3f917b770e2a493194855ec5abb1ffb2043bfeaabf10af8fce5132\",\"dweb:/ipfs/Qmd8dMUXeuWcH5gfDD7yoDjEt8GcAJuY32vkDwTxGcM2ko\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061041d806100616000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806310a7e20114610067578063715018a61461007c5780638da5cb5b146100845780638e0d3ca7146100a457806390978d1b146100b7578063f2fde38b146100ea575b600080fd5b61007a61007536600461039a565b6100fd565b005b61007a61018d565b6000546040516001600160a01b0390911681526020015b60405180910390f35b61007a6100b236600461039a565b610201565b6100da6100c536600461039a565b60009081526001602052604090205460ff1690565b604051901515815260200161009b565b61007a6100f836600461036c565b610282565b6000546001600160a01b031633146101305760405162461bcd60e51b8152600401610127906103b2565b60405180910390fd5b60008181526001602052604090205460ff1661018a576000818152600160208190526040808320805460ff19169092179091555182917fa0ca1076d765c13772089a90b5121cf6ddf63c9f7891c4e5031adbc85936b27691a25b50565b6000546001600160a01b031633146101b75760405162461bcd60e51b8152600401610127906103b2565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461022b5760405162461bcd60e51b8152600401610127906103b2565b60008181526001602052604090205460ff161561018a57600081815260016020526040808220805460ff191690555182917fefdf15ca0f9402bd4e933b0edb0db65b23cc50d27cb010d8abcadaae4fa944e591a250565b6000546001600160a01b031633146102ac5760405162461bcd60e51b8152600401610127906103b2565b6001600160a01b0381166103115760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610127565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561037d578081fd5b81356001600160a01b0381168114610393578182fd5b9392505050565b6000602082840312156103ab578081fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220dc8e0c8fd61a091a2b54bae691ae083f3761a10cd68b75ff87e464544fd594ba64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c806310a7e20114610067578063715018a61461007c5780638da5cb5b146100845780638e0d3ca7146100a457806390978d1b146100b7578063f2fde38b146100ea575b600080fd5b61007a61007536600461039a565b6100fd565b005b61007a61018d565b6000546040516001600160a01b0390911681526020015b60405180910390f35b61007a6100b236600461039a565b610201565b6100da6100c536600461039a565b60009081526001602052604090205460ff1690565b604051901515815260200161009b565b61007a6100f836600461036c565b610282565b6000546001600160a01b031633146101305760405162461bcd60e51b8152600401610127906103b2565b60405180910390fd5b60008181526001602052604090205460ff1661018a576000818152600160208190526040808320805460ff19169092179091555182917fa0ca1076d765c13772089a90b5121cf6ddf63c9f7891c4e5031adbc85936b27691a25b50565b6000546001600160a01b031633146101b75760405162461bcd60e51b8152600401610127906103b2565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461022b5760405162461bcd60e51b8152600401610127906103b2565b60008181526001602052604090205460ff161561018a57600081815260016020526040808220805460ff191690555182917fefdf15ca0f9402bd4e933b0edb0db65b23cc50d27cb010d8abcadaae4fa944e591a250565b6000546001600160a01b031633146102ac5760405162461bcd60e51b8152600401610127906103b2565b6001600160a01b0381166103115760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610127565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561037d578081fd5b81356001600160a01b0381168114610393578182fd5b9392505050565b6000602082840312156103ab578081fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220dc8e0c8fd61a091a2b54bae691ae083f3761a10cd68b75ff87e464544fd594ba64736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1685:141",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:141",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:236:141",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:141",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:141"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:141"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:141"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:141"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:141"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:141"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:141"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:141",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:141"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:141"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:141"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:141"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:141",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:26:141",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "273:6:141"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "281:6:141"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:141"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:22:141"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:22:141"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "223:5:141"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "234:5:141"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "249:3:141",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "254:1:141",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "245:3:141"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "245:11:141"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "258:1:141",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "241:3:141"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "241:19:141"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "230:3:141"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "230:31:141"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "220:2:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "220:42:141"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "213:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "213:50:141"
                  },
                  "nodeType": "YulIf",
                  "src": "210:2:141"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "299:15:141",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "309:5:141"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "299:6:141"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:141",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:141",
                "type": ""
              }
            ],
            "src": "14:306:141"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "395:120:141",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "441:26:141",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "450:6:141"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "458:6:141"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "443:6:141"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "443:22:141"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "443:22:141"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "416:7:141"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "425:9:141"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "412:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "412:23:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "437:2:141",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "408:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "408:32:141"
                  },
                  "nodeType": "YulIf",
                  "src": "405:2:141"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "476:33:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "499:9:141"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "486:12:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "486:23:141"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "476:6:141"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "361:9:141",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "372:7:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "384:6:141",
                "type": ""
              }
            ],
            "src": "325:190:141"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "621:102:141",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "631:26:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "643:9:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "654:2:141",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "639:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "639:18:141"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "631:4:141"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "673:9:141"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "688:6:141"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "704:3:141",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "709:1:141",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "700:3:141"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "700:11:141"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "713:1:141",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "696:3:141"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "696:19:141"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "684:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "684:32:141"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "666:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "666:51:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "666:51:141"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "590:9:141",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "601:6:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "612:4:141",
                "type": ""
              }
            ],
            "src": "520:203:141"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "823:92:141",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "833:26:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "845:9:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "856:2:141",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "841:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "841:18:141"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "833:4:141"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "875:9:141"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "900:6:141"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "893:6:141"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "893:14:141"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "886:6:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "886:22:141"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "868:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "868:41:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "868:41:141"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "792:9:141",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "803:6:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "814:4:141",
                "type": ""
              }
            ],
            "src": "728:187:141"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1094:228:141",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1111:9:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1122:2:141",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1104:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1104:21:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1104:21:141"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1145:9:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1156:2:141",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1141:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1141:18:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1161:2:141",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1134:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1134:30:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1134:30:141"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1184:9:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1195:2:141",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1180:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1180:18:141"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1200:34:141",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1173:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1173:62:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1173:62:141"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1255:9:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1266:2:141",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1251:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1251:18:141"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1271:8:141",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1244:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1244:36:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1244:36:141"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1289:27:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1301:9:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1312:3:141",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1297:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1297:19:141"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1289:4:141"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1071:9:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1085:4:141",
                "type": ""
              }
            ],
            "src": "920:402:141"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1501:182:141",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1518:9:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1529:2:141",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1511:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1511:21:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1511:21:141"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1552:9:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1563:2:141",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1548:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1548:18:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1568:2:141",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1541:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1541:30:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1541:30:141"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1591:9:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1602:2:141",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1587:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1587:18:141"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1607:34:141",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1580:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1580:62:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1580:62:141"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1651:26:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1663:9:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1674:2:141",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1659:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1659:18:141"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1651:4:141"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1478:9:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1492:4:141",
                "type": ""
              }
            ],
            "src": "1327:356:141"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 141,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "280:2250:85:-:0;;;;;;;;;;;;-1:-1:-1;867:17:117;909:18;;-1:-1:-1;;;;;;909:18:117;665:10:126;909:18:117;;;;;942:43;;665:10:126;;;;942:43:117;;867:17;;942:43;842:150;280:2250:85;;;;;;",
  "deployedSourceMap": "280:2250:85:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1225:254;;;;;;:::i;:::-;;:::i;:::-;;1700:145:117;;;:::i;1068:85::-;1114:7;1140:6;1068:85;;-1:-1:-1;;;;;1140:6:117;;;666:51:141;;654:2;639:18;1068:85:117;;;;;;;;1742:259:85;;;;;;:::i;:::-;;:::i;2383:145::-;;;;;;:::i;:::-;2466:4;2489:32;;;:20;:32;;;;;;;;;2383:145;;;;893:14:141;;886:22;868:41;;856:2;841:18;2383:145:85;823:92:141;1994:240:117;;;;;;:::i;:::-;;:::i;1225:254:85:-;1114:7:117;1140:6;-1:-1:-1;;;;;1140:6:117;665:10:126;1280:23:117;1272:68;;;;-1:-1:-1;;;1272:68:117;;;;;;;:::i;:::-;;;;;;;;;1320:32:85::1;::::0;;;:20:::1;:32;::::0;;;;;::::1;;1315:158;;1368:32;::::0;;;1403:4:::1;1368:32;::::0;;;;;;;:39;;-1:-1:-1;;1368:39:85::1;::::0;;::::1;::::0;;;1426:36;1389:10;;1426:36:::1;::::0;::::1;1315:158;1225:254:::0;:::o;1700:145:117:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:117;665:10:126;1280:23:117;1272:68;;;;-1:-1:-1;;;1272:68:117;;;;;;;:::i;:::-;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;-1:-1:-1;;;;;1790:6:117;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;-1:-1:-1;;;;;;1819:19:117::1;::::0;;1700:145::o;1742:259:85:-;1114:7:117;1140:6;-1:-1:-1;;;;;1140:6:117;665:10:126;1280:23:117;1272:68;;;;-1:-1:-1;;;1272:68:117;;;;;;;:::i;:::-;1839:32:85::1;::::0;;;:20:::1;:32;::::0;;;;;::::1;;1835:160;;;1922:5;1887:32:::0;;;:20:::1;:32;::::0;;;;;:40;;-1:-1:-1;;1887:40:85::1;::::0;;1946:38;1908:10;;1946:38:::1;::::0;::::1;1742:259:::0;:::o;1994:240:117:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:117;665:10:126;1280:23:117;1272:68;;;;-1:-1:-1;;;1272:68:117;;;;;;;:::i;:::-;-1:-1:-1;;;;;2082:22:117;::::1;2074:73;;;::::0;-1:-1:-1;;;2074:73:117;;1122:2:141;2074:73:117::1;::::0;::::1;1104:21:141::0;1161:2;1141:18;;;1134:30;1200:34;1180:18;;;1173:62;-1:-1:-1;;;1251:18:141;;;1244:36;1297:19;;2074:73:117::1;1094:228:141::0;2074:73:117::1;2183:6;::::0;;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:117;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;-1:-1:-1;;;;;;2210:17:117::1;-1:-1:-1::0;;;;;2210:17:117;;;::::1;::::0;;;::::1;::::0;;1994:240::o;14:306:141:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:141;;220:42;;210:2;;281:6;273;266:22;210:2;309:5;84:236;-1:-1:-1;;;84:236:141:o;325:190::-;384:6;437:2;425:9;416:7;412:23;408:32;405:2;;;458:6;450;443:22;405:2;-1:-1:-1;486:23:141;;395:120;-1:-1:-1;395:120:141:o;1327:356::-;1529:2;1511:21;;;1548:18;;;1541:30;1607:34;1602:2;1587:18;;1580:62;1674:2;1659:18;;1501:182::o",
  "source": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"../interfaces/IdentifierWhitelistInterface.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title Stores a whitelist of supported identifiers that the oracle can provide prices for.\n */\ncontract IdentifierWhitelist is IdentifierWhitelistInterface, Ownable {\n    /****************************************\n     *     INTERNAL VARIABLES AND STORAGE   *\n     ****************************************/\n\n    mapping(bytes32 => bool) private supportedIdentifiers;\n\n    /****************************************\n     *                EVENTS                *\n     ****************************************/\n\n    event SupportedIdentifierAdded(bytes32 indexed identifier);\n    event SupportedIdentifierRemoved(bytes32 indexed identifier);\n\n    /****************************************\n     *    ADMIN STATE MODIFYING FUNCTIONS   *\n     ****************************************/\n\n    /**\n     * @notice Adds the provided identifier as a supported identifier.\n     * @dev Price requests using this identifier will succeed after this call.\n     * @param identifier unique UTF-8 representation for the feed being added. Eg: BTC/USD.\n     */\n    function addSupportedIdentifier(bytes32 identifier) external override onlyOwner {\n        if (!supportedIdentifiers[identifier]) {\n            supportedIdentifiers[identifier] = true;\n            emit SupportedIdentifierAdded(identifier);\n        }\n    }\n\n    /**\n     * @notice Removes the identifier from the whitelist.\n     * @dev Price requests using this identifier will no longer succeed after this call.\n     * @param identifier unique UTF-8 representation for the feed being removed. Eg: BTC/USD.\n     */\n    function removeSupportedIdentifier(bytes32 identifier) external override onlyOwner {\n        if (supportedIdentifiers[identifier]) {\n            supportedIdentifiers[identifier] = false;\n            emit SupportedIdentifierRemoved(identifier);\n        }\n    }\n\n    /****************************************\n     *     WHITELIST GETTERS FUNCTIONS      *\n     ****************************************/\n\n    /**\n     * @notice Checks whether an identifier is on the whitelist.\n     * @param identifier unique UTF-8 representation for the feed being queried. Eg: BTC/USD.\n     * @return bool if the identifier is supported (or not).\n     */\n    function isIdentifierSupported(bytes32 identifier) external view override returns (bool) {\n        return supportedIdentifiers[identifier];\n    }\n}\n",
  "sourcePath": "/home/kamto/code/protocol/packages/core/contracts/oracle/implementation/IdentifierWhitelist.sol",
  "ast": {
    "absolutePath": "/home/kamto/code/protocol/packages/core/contracts/oracle/implementation/IdentifierWhitelist.sol",
    "exportedSymbols": {
      "Context": [
        33148
      ],
      "IdentifierWhitelist": [
        23100
      ],
      "IdentifierWhitelistInterface": [
        29081
      ],
      "Ownable": [
        31498
      ]
    },
    "id": 23101,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 23015,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:85"
      },
      {
        "absolutePath": "/home/kamto/code/protocol/packages/core/contracts/oracle/interfaces/IdentifierWhitelistInterface.sol",
        "file": "../interfaces/IdentifierWhitelistInterface.sol",
        "id": 23016,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 23101,
        "sourceUnit": 29082,
        "src": "67:56:85",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 23017,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 23101,
        "sourceUnit": 31499,
        "src": "124:52:85",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 23019,
              "name": "IdentifierWhitelistInterface",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29081,
              "src": "312:28:85"
            },
            "id": 23020,
            "nodeType": "InheritanceSpecifier",
            "src": "312:28:85"
          },
          {
            "baseName": {
              "id": 23021,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31498,
              "src": "342:7:85"
            },
            "id": 23022,
            "nodeType": "InheritanceSpecifier",
            "src": "342:7:85"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 23018,
          "nodeType": "StructuredDocumentation",
          "src": "178:101:85",
          "text": " @title Stores a whitelist of supported identifiers that the oracle can provide prices for."
        },
        "fullyImplemented": true,
        "id": 23100,
        "linearizedBaseContracts": [
          23100,
          31498,
          33148,
          29081
        ],
        "name": "IdentifierWhitelist",
        "nameLocation": "289:19:85",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 23026,
            "mutability": "mutable",
            "name": "supportedIdentifiers",
            "nameLocation": "529:20:85",
            "nodeType": "VariableDeclaration",
            "scope": 23100,
            "src": "496:53:85",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 23025,
              "keyType": {
                "id": 23023,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "504:7:85",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "496:24:85",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 23024,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "515:4:85",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 23030,
            "name": "SupportedIdentifierAdded",
            "nameLocation": "702:24:85",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 23029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23028,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "743:10:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 23030,
                  "src": "727:26:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 23027,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "727:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "726:28:85"
            },
            "src": "696:59:85"
          },
          {
            "anonymous": false,
            "id": 23034,
            "name": "SupportedIdentifierRemoved",
            "nameLocation": "766:26:85",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 23033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23032,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "809:10:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 23034,
                  "src": "793:26:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 23031,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "793:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "792:28:85"
            },
            "src": "760:61:85"
          },
          {
            "baseFunctions": [
              29066
            ],
            "body": {
              "id": 23059,
              "nodeType": "Block",
              "src": "1305:174:85",
              "statements": [
                {
                  "condition": {
                    "id": 23046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1319:33:85",
                    "subExpression": {
                      "baseExpression": {
                        "id": 23043,
                        "name": "supportedIdentifiers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23026,
                        "src": "1320:20:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 23045,
                      "indexExpression": {
                        "id": 23044,
                        "name": "identifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23037,
                        "src": "1341:10:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1320:32:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23058,
                  "nodeType": "IfStatement",
                  "src": "1315:158:85",
                  "trueBody": {
                    "id": 23057,
                    "nodeType": "Block",
                    "src": "1354:119:85",
                    "statements": [
                      {
                        "expression": {
                          "id": 23051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 23047,
                              "name": "supportedIdentifiers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23026,
                              "src": "1368:20:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 23049,
                            "indexExpression": {
                              "id": 23048,
                              "name": "identifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23037,
                              "src": "1389:10:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1368:32:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 23050,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1403:4:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1368:39:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 23052,
                        "nodeType": "ExpressionStatement",
                        "src": "1368:39:85"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 23054,
                              "name": "identifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23037,
                              "src": "1451:10:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 23053,
                            "name": "SupportedIdentifierAdded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23030,
                            "src": "1426:24:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 23055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1426:36:85",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 23056,
                        "nodeType": "EmitStatement",
                        "src": "1421:41:85"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 23035,
              "nodeType": "StructuredDocumentation",
              "src": "967:253:85",
              "text": " @notice Adds the provided identifier as a supported identifier.\n @dev Price requests using this identifier will succeed after this call.\n @param identifier unique UTF-8 representation for the feed being added. Eg: BTC/USD."
            },
            "functionSelector": "10a7e201",
            "id": 23060,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 23041,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 23040,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31447,
                  "src": "1295:9:85"
                },
                "nodeType": "ModifierInvocation",
                "src": "1295:9:85"
              }
            ],
            "name": "addSupportedIdentifier",
            "nameLocation": "1234:22:85",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 23039,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1286:8:85"
            },
            "parameters": {
              "id": 23038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23037,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "1265:10:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 23060,
                  "src": "1257:18:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 23036,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1257:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1256:20:85"
            },
            "returnParameters": {
              "id": 23042,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1305:0:85"
            },
            "scope": 23100,
            "src": "1225:254:85",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              29072
            ],
            "body": {
              "id": 23084,
              "nodeType": "Block",
              "src": "1825:176:85",
              "statements": [
                {
                  "condition": {
                    "baseExpression": {
                      "id": 23069,
                      "name": "supportedIdentifiers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23026,
                      "src": "1839:20:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                        "typeString": "mapping(bytes32 => bool)"
                      }
                    },
                    "id": 23071,
                    "indexExpression": {
                      "id": 23070,
                      "name": "identifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23063,
                      "src": "1860:10:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1839:32:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23083,
                  "nodeType": "IfStatement",
                  "src": "1835:160:85",
                  "trueBody": {
                    "id": 23082,
                    "nodeType": "Block",
                    "src": "1873:122:85",
                    "statements": [
                      {
                        "expression": {
                          "id": 23076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 23072,
                              "name": "supportedIdentifiers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23026,
                              "src": "1887:20:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 23074,
                            "indexExpression": {
                              "id": 23073,
                              "name": "identifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23063,
                              "src": "1908:10:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1887:32:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 23075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1922:5:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "1887:40:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 23077,
                        "nodeType": "ExpressionStatement",
                        "src": "1887:40:85"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 23079,
                              "name": "identifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23063,
                              "src": "1973:10:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 23078,
                            "name": "SupportedIdentifierRemoved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23034,
                            "src": "1946:26:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 23080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1946:38:85",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 23081,
                        "nodeType": "EmitStatement",
                        "src": "1941:43:85"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 23061,
              "nodeType": "StructuredDocumentation",
              "src": "1485:252:85",
              "text": " @notice Removes the identifier from the whitelist.\n @dev Price requests using this identifier will no longer succeed after this call.\n @param identifier unique UTF-8 representation for the feed being removed. Eg: BTC/USD."
            },
            "functionSelector": "8e0d3ca7",
            "id": 23085,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 23067,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 23066,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31447,
                  "src": "1815:9:85"
                },
                "nodeType": "ModifierInvocation",
                "src": "1815:9:85"
              }
            ],
            "name": "removeSupportedIdentifier",
            "nameLocation": "1751:25:85",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 23065,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1806:8:85"
            },
            "parameters": {
              "id": 23064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23063,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "1785:10:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 23085,
                  "src": "1777:18:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 23062,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1777:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1776:20:85"
            },
            "returnParameters": {
              "id": 23068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1825:0:85"
            },
            "scope": 23100,
            "src": "1742:259:85",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              29080
            ],
            "body": {
              "id": 23098,
              "nodeType": "Block",
              "src": "2472:56:85",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 23094,
                      "name": "supportedIdentifiers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23026,
                      "src": "2489:20:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                        "typeString": "mapping(bytes32 => bool)"
                      }
                    },
                    "id": 23096,
                    "indexExpression": {
                      "id": 23095,
                      "name": "identifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23088,
                      "src": "2510:10:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2489:32:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 23093,
                  "id": 23097,
                  "nodeType": "Return",
                  "src": "2482:39:85"
                }
              ]
            },
            "documentation": {
              "id": 23086,
              "nodeType": "StructuredDocumentation",
              "src": "2147:231:85",
              "text": " @notice Checks whether an identifier is on the whitelist.\n @param identifier unique UTF-8 representation for the feed being queried. Eg: BTC/USD.\n @return bool if the identifier is supported (or not)."
            },
            "functionSelector": "90978d1b",
            "id": 23099,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isIdentifierSupported",
            "nameLocation": "2392:21:85",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 23090,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2448:8:85"
            },
            "parameters": {
              "id": 23089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23088,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "2422:10:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 23099,
                  "src": "2414:18:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 23087,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2414:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2413:20:85"
            },
            "returnParameters": {
              "id": 23093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23092,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23099,
                  "src": "2466:4:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23091,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2466:4:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2465:6:85"
            },
            "scope": 23100,
            "src": "2383:145:85",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 23101,
        "src": "280:2250:85",
        "usedErrors": []
      }
    ],
    "src": "42:2489:85"
  },
  "legacyAST": {
    "absolutePath": "/home/kamto/code/protocol/packages/core/contracts/oracle/implementation/IdentifierWhitelist.sol",
    "exportedSymbols": {
      "Context": [
        33148
      ],
      "IdentifierWhitelist": [
        23100
      ],
      "IdentifierWhitelistInterface": [
        29081
      ],
      "Ownable": [
        31498
      ]
    },
    "id": 23101,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 23015,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:85"
      },
      {
        "absolutePath": "/home/kamto/code/protocol/packages/core/contracts/oracle/interfaces/IdentifierWhitelistInterface.sol",
        "file": "../interfaces/IdentifierWhitelistInterface.sol",
        "id": 23016,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 23101,
        "sourceUnit": 29082,
        "src": "67:56:85",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 23017,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 23101,
        "sourceUnit": 31499,
        "src": "124:52:85",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 23019,
              "name": "IdentifierWhitelistInterface",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29081,
              "src": "312:28:85"
            },
            "id": 23020,
            "nodeType": "InheritanceSpecifier",
            "src": "312:28:85"
          },
          {
            "baseName": {
              "id": 23021,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31498,
              "src": "342:7:85"
            },
            "id": 23022,
            "nodeType": "InheritanceSpecifier",
            "src": "342:7:85"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 23018,
          "nodeType": "StructuredDocumentation",
          "src": "178:101:85",
          "text": " @title Stores a whitelist of supported identifiers that the oracle can provide prices for."
        },
        "fullyImplemented": true,
        "id": 23100,
        "linearizedBaseContracts": [
          23100,
          31498,
          33148,
          29081
        ],
        "name": "IdentifierWhitelist",
        "nameLocation": "289:19:85",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 23026,
            "mutability": "mutable",
            "name": "supportedIdentifiers",
            "nameLocation": "529:20:85",
            "nodeType": "VariableDeclaration",
            "scope": 23100,
            "src": "496:53:85",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 23025,
              "keyType": {
                "id": 23023,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "504:7:85",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "496:24:85",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 23024,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "515:4:85",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 23030,
            "name": "SupportedIdentifierAdded",
            "nameLocation": "702:24:85",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 23029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23028,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "743:10:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 23030,
                  "src": "727:26:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 23027,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "727:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "726:28:85"
            },
            "src": "696:59:85"
          },
          {
            "anonymous": false,
            "id": 23034,
            "name": "SupportedIdentifierRemoved",
            "nameLocation": "766:26:85",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 23033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23032,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "809:10:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 23034,
                  "src": "793:26:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 23031,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "793:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "792:28:85"
            },
            "src": "760:61:85"
          },
          {
            "baseFunctions": [
              29066
            ],
            "body": {
              "id": 23059,
              "nodeType": "Block",
              "src": "1305:174:85",
              "statements": [
                {
                  "condition": {
                    "id": 23046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1319:33:85",
                    "subExpression": {
                      "baseExpression": {
                        "id": 23043,
                        "name": "supportedIdentifiers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23026,
                        "src": "1320:20:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 23045,
                      "indexExpression": {
                        "id": 23044,
                        "name": "identifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23037,
                        "src": "1341:10:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1320:32:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23058,
                  "nodeType": "IfStatement",
                  "src": "1315:158:85",
                  "trueBody": {
                    "id": 23057,
                    "nodeType": "Block",
                    "src": "1354:119:85",
                    "statements": [
                      {
                        "expression": {
                          "id": 23051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 23047,
                              "name": "supportedIdentifiers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23026,
                              "src": "1368:20:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 23049,
                            "indexExpression": {
                              "id": 23048,
                              "name": "identifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23037,
                              "src": "1389:10:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1368:32:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 23050,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1403:4:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1368:39:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 23052,
                        "nodeType": "ExpressionStatement",
                        "src": "1368:39:85"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 23054,
                              "name": "identifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23037,
                              "src": "1451:10:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 23053,
                            "name": "SupportedIdentifierAdded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23030,
                            "src": "1426:24:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 23055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1426:36:85",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 23056,
                        "nodeType": "EmitStatement",
                        "src": "1421:41:85"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 23035,
              "nodeType": "StructuredDocumentation",
              "src": "967:253:85",
              "text": " @notice Adds the provided identifier as a supported identifier.\n @dev Price requests using this identifier will succeed after this call.\n @param identifier unique UTF-8 representation for the feed being added. Eg: BTC/USD."
            },
            "functionSelector": "10a7e201",
            "id": 23060,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 23041,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 23040,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31447,
                  "src": "1295:9:85"
                },
                "nodeType": "ModifierInvocation",
                "src": "1295:9:85"
              }
            ],
            "name": "addSupportedIdentifier",
            "nameLocation": "1234:22:85",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 23039,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1286:8:85"
            },
            "parameters": {
              "id": 23038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23037,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "1265:10:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 23060,
                  "src": "1257:18:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 23036,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1257:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1256:20:85"
            },
            "returnParameters": {
              "id": 23042,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1305:0:85"
            },
            "scope": 23100,
            "src": "1225:254:85",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              29072
            ],
            "body": {
              "id": 23084,
              "nodeType": "Block",
              "src": "1825:176:85",
              "statements": [
                {
                  "condition": {
                    "baseExpression": {
                      "id": 23069,
                      "name": "supportedIdentifiers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23026,
                      "src": "1839:20:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                        "typeString": "mapping(bytes32 => bool)"
                      }
                    },
                    "id": 23071,
                    "indexExpression": {
                      "id": 23070,
                      "name": "identifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23063,
                      "src": "1860:10:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1839:32:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23083,
                  "nodeType": "IfStatement",
                  "src": "1835:160:85",
                  "trueBody": {
                    "id": 23082,
                    "nodeType": "Block",
                    "src": "1873:122:85",
                    "statements": [
                      {
                        "expression": {
                          "id": 23076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 23072,
                              "name": "supportedIdentifiers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23026,
                              "src": "1887:20:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 23074,
                            "indexExpression": {
                              "id": 23073,
                              "name": "identifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23063,
                              "src": "1908:10:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1887:32:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 23075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1922:5:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "1887:40:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 23077,
                        "nodeType": "ExpressionStatement",
                        "src": "1887:40:85"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 23079,
                              "name": "identifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23063,
                              "src": "1973:10:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 23078,
                            "name": "SupportedIdentifierRemoved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23034,
                            "src": "1946:26:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 23080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1946:38:85",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 23081,
                        "nodeType": "EmitStatement",
                        "src": "1941:43:85"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 23061,
              "nodeType": "StructuredDocumentation",
              "src": "1485:252:85",
              "text": " @notice Removes the identifier from the whitelist.\n @dev Price requests using this identifier will no longer succeed after this call.\n @param identifier unique UTF-8 representation for the feed being removed. Eg: BTC/USD."
            },
            "functionSelector": "8e0d3ca7",
            "id": 23085,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 23067,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 23066,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31447,
                  "src": "1815:9:85"
                },
                "nodeType": "ModifierInvocation",
                "src": "1815:9:85"
              }
            ],
            "name": "removeSupportedIdentifier",
            "nameLocation": "1751:25:85",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 23065,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1806:8:85"
            },
            "parameters": {
              "id": 23064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23063,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "1785:10:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 23085,
                  "src": "1777:18:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 23062,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1777:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1776:20:85"
            },
            "returnParameters": {
              "id": 23068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1825:0:85"
            },
            "scope": 23100,
            "src": "1742:259:85",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              29080
            ],
            "body": {
              "id": 23098,
              "nodeType": "Block",
              "src": "2472:56:85",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 23094,
                      "name": "supportedIdentifiers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23026,
                      "src": "2489:20:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                        "typeString": "mapping(bytes32 => bool)"
                      }
                    },
                    "id": 23096,
                    "indexExpression": {
                      "id": 23095,
                      "name": "identifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23088,
                      "src": "2510:10:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2489:32:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 23093,
                  "id": 23097,
                  "nodeType": "Return",
                  "src": "2482:39:85"
                }
              ]
            },
            "documentation": {
              "id": 23086,
              "nodeType": "StructuredDocumentation",
              "src": "2147:231:85",
              "text": " @notice Checks whether an identifier is on the whitelist.\n @param identifier unique UTF-8 representation for the feed being queried. Eg: BTC/USD.\n @return bool if the identifier is supported (or not)."
            },
            "functionSelector": "90978d1b",
            "id": 23099,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isIdentifierSupported",
            "nameLocation": "2392:21:85",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 23090,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2448:8:85"
            },
            "parameters": {
              "id": 23089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23088,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "2422:10:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 23099,
                  "src": "2414:18:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 23087,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2414:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2413:20:85"
            },
            "returnParameters": {
              "id": 23093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23092,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23099,
                  "src": "2466:4:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23091,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2466:4:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2465:6:85"
            },
            "scope": 23100,
            "src": "2383:145:85",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 23101,
        "src": "280:2250:85",
        "usedErrors": []
      }
    ],
    "src": "42:2489:85"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {},
      "links": {},
      "address": "0xcF649d9Da4D1362C4DAEa67573430Bd6f945e570",
      "transactionHash": ""
    },
    "4": {
      "events": {},
      "links": {},
      "address": "0x26f65d7Da395F01A3e9C21595D1A2C0e173d82A4",
      "transactionHash": ""
    },
    "42": {
      "events": {},
      "links": {},
      "address": "0xeF9c374b7976941fCAf5e501eaB531E430463fC6",
      "transactionHash": ""
    },
    "97": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xa0ca1076d765c13772089a90b5121cf6ddf63c9f7891c4e5031adbc85936b276": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            }
          ],
          "name": "SupportedIdentifierAdded",
          "type": "event"
        },
        "0xefdf15ca0f9402bd4e933b0edb0db65b23cc50d27cb010d8abcadaae4fa944e5": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            }
          ],
          "name": "SupportedIdentifierRemoved",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x400E0EbBcE26C5352cFc5414A377DE65A996C9C7",
      "transactionHash": "0x275cf726a210dee1758e07b3de742ad246da51bc5285b288a5feabd130241ffe"
    },
    "5777": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xa0ca1076d765c13772089a90b5121cf6ddf63c9f7891c4e5031adbc85936b276": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            }
          ],
          "name": "SupportedIdentifierAdded",
          "type": "event"
        },
        "0xefdf15ca0f9402bd4e933b0edb0db65b23cc50d27cb010d8abcadaae4fa944e5": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            }
          ],
          "name": "SupportedIdentifierRemoved",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x2ce1Ab391238078C1170161ea8B3CEaA37e3739c",
      "transactionHash": "0xbe9bf81ffc16d102ecedce36ba21610ade163c20a80cf0456522cc29dccdde5a"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-07T21:51:02.533Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addSupportedIdentifier(bytes32)": {
        "details": "Price requests using this identifier will succeed after this call.",
        "params": {
          "identifier": "unique UTF-8 representation for the feed being added. Eg: BTC/USD."
        }
      },
      "isIdentifierSupported(bytes32)": {
        "params": {
          "identifier": "unique UTF-8 representation for the feed being queried. Eg: BTC/USD."
        },
        "returns": {
          "_0": "bool if the identifier is supported (or not)."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeSupportedIdentifier(bytes32)": {
        "details": "Price requests using this identifier will no longer succeed after this call.",
        "params": {
          "identifier": "unique UTF-8 representation for the feed being removed. Eg: BTC/USD."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Stores a whitelist of supported identifiers that the oracle can provide prices for.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addSupportedIdentifier(bytes32)": {
        "notice": "Adds the provided identifier as a supported identifier."
      },
      "isIdentifierSupported(bytes32)": {
        "notice": "Checks whether an identifier is on the whitelist."
      },
      "removeSupportedIdentifier(bytes32)": {
        "notice": "Removes the identifier from the whitelist."
      }
    },
    "version": 1
  }
}