{
  "contractName": "TokenFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "tokenDecimals",
          "type": "uint8"
        }
      ],
      "name": "createToken",
      "outputs": [
        {
          "internalType": "contract ExpandedIERC20",
          "name": "newToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"tokenDecimals\",\"type\":\"uint8\"}],\"name\":\"createToken\",\"outputs\":[{\"internalType\":\"contract ExpandedIERC20\",\"name\":\"newToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createToken(string,string,uint8)\":{\"details\":\"The caller will become the only minter and burner and the new owner capable of assigning the roles.\",\"params\":{\"tokenDecimals\":\"used to define the precision used in the token's numerical representation.\",\"tokenName\":\"used to describe the new token.\",\"tokenSymbol\":\"short ticker abbreviation of the name. Ideally < 5 chars.\"},\"returns\":{\"newToken\":\"an instance of the newly created token interface.\"}}},\"title\":\"Factory for creating new mintable and burnable tokens.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createToken(string,string,uint8)\":{\"notice\":\"Create a new token and return it to the caller.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/kamto/code/protocol/packages/core/contracts/financial-templates/common/TokenFactory.sol\":\"TokenFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":199},\"remappings\":[]},\"sources\":{\"/home/kamto/code/protocol/packages/core/contracts/common/implementation/ExpandedERC20.sol\":{\"keccak256\":\"0xb3b8f4d3760a9dc0aff0a2b9f0713b034c8f870472c4114cc58a5e03cfd97783\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://cc988e39eae8c57b3ea545715caf0f949b0b311fe0df3afa068bf0ece0ff636c\",\"dweb:/ipfs/QmTGxA5G5wraj5gF5aommxspULNNjqeRZAWwPGVFdp7t4i\"]},\"/home/kamto/code/protocol/packages/core/contracts/common/implementation/Lockable.sol\":{\"keccak256\":\"0xaaa9ef13b45e085d0fe036215a2decd9cf491de25c16f28256b9d3e3377aa160\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f8386af0716b455f9542a0e4121237c4b61d8d2132553da09d2c2f8908eacbcf\",\"dweb:/ipfs/QmdZV7Rm1o89a8VXNG2qjrzLgpRFSL3RnsGBccpqcLhTC2\"]},\"/home/kamto/code/protocol/packages/core/contracts/common/implementation/MultiRole.sol\":{\"keccak256\":\"0x134c5a2f847832705be631f2b4eb2a3e23a91a2f0e63560abb481e85eeebfae6\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f1267c6ad560d1eb896575919ecca13759bf50bb82d1215e03fc1f0424ec37a6\",\"dweb:/ipfs/QmXewGxpSmSMGYmT6ZUyxCVzy2cybxicbnyCn8w87m5mo3\"]},\"/home/kamto/code/protocol/packages/core/contracts/common/interfaces/ExpandedIERC20.sol\":{\"keccak256\":\"0x2ffbb7a8b7107d55b54887f58c6bc289dde6208a0b0d10b47fc08f7881d94de0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8086d2ea42c93d7b7c0a6b4ff84f14216794cbe133059bee713ce1e5d6ba9714\",\"dweb:/ipfs/QmVD3EYJNwVMc38hrgAWAK8JsEryegcScJfcynEva5gqX4\"]},\"/home/kamto/code/protocol/packages/core/contracts/financial-templates/common/SyntheticToken.sol\":{\"keccak256\":\"0x80d95242bbeeff4a0a2e6062fa4cd72478981997cf78a5f2abfae873c32c8a5a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7d93ae00d80fea75c79376cd4950e8d41e2ae1debd25e26edc7f861ddcde796f\",\"dweb:/ipfs/QmZfe259AnrqVFQTf3EZsuKJbVaSBt9MS1xiyFcaxjAd5y\"]},\"/home/kamto/code/protocol/packages/core/contracts/financial-templates/common/TokenFactory.sol\":{\"keccak256\":\"0x325a11d8c51171f00d78c0305aa28e5169da3f2696dec70c5cdcc567ce6fcbb8\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1a8015719dc4b3fd26c456197c59aba688da75019ea0ce8895fda62e8452016c\",\"dweb:/ipfs/QmREMgj1McnuqUtS27UYSnN76JTMTTESvBFpEcNa99dmQy\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xfeccdcbf67b2006a715e5af1a4c7556004d95b2806552b5cc54e46e8eb7e887b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45b1f9043c0fb450272f20ed19ef633fcba1b129d602651a856dfae1a2243a2c\",\"dweb:/ipfs/QmUTSQiDikkcNtTtyDpkEwCM5ztVUUh9c1inBukn6HC5Vr\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506000805460ff191660011790556122998061002d6000396000f3fe60806040523480156200001157600080fd5b50600436106200002e5760003560e01c8063e8a0aed31462000033575b600080fd5b6200004a62000044366004620002aa565b62000066565b6040516001600160a01b03909116815260200160405180910390f35b600062000072620001f9565b620000826000805460ff19169055565b60008686868686604051620000979062000252565b620000a795949392919062000361565b604051809103906000f080158015620000c4573d6000803e3d6000fd5b50604051634c1d96ab60e11b81523360048201529091506001600160a01b0382169063983b2d5690602401600060405180830381600087803b1580156200010a57600080fd5b505af11580156200011f573d6000803e3d6000fd5b5050604051637a231bdd60e11b81523360048201526001600160a01b038416925063f44637ba9150602401600060405180830381600087803b1580156200016557600080fd5b505af11580156200017a573d6000803e3d6000fd5b50506040516339e6401560e11b81523360048201526001600160a01b03841692506373cc802a9150602401600060405180830381600087803b158015620001c057600080fd5b505af1158015620001d5573d6000803e3d6000fd5b5050505080915050620001f06000805460ff19166001179055565b95945050505050565b60005460ff16620002505760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640160405180910390fd5b565b611ec180620003a383390190565b60008083601f84011262000272578182fd5b50813567ffffffffffffffff8111156200028a578182fd5b602083019150836020828501011115620002a357600080fd5b9250929050565b600080600080600060608688031215620002c2578081fd5b853567ffffffffffffffff80821115620002da578283fd5b620002e889838a0162000260565b9097509550602088013591508082111562000301578283fd5b50620003108882890162000260565b909450925050604086013560ff811681146200032a578182fd5b809150509295509295909350565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6060815260006200037760608301878962000338565b82810360208401526200038c81868862000338565b91505060ff83166040830152969550505050505056fe60806040523480156200001157600080fd5b5060405162001ec138038062001ec18339810160408190526200003491620006e6565b82828282828160039080519060200190620000519291906200058d565b508051620000679060049060208401906200058d565b50506006805460ff191660ff8416179055506200008760008033620000fb565b620000a460015b6040805160008082526020820190925262000264565b620000b060026200008e565b50506006805461ff00191661010017905550620000cc620003c3565b620000dd6006805461ff0019169055565b620000f26006805461ff001916610100179055565b505050620007e2565b826000808281526005602052604090206001015460ff1660028111156200013257634e487b7160e01b600052602160045260246000fd5b14620001855760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000060448201526064015b60405180910390fd5b60008481526005602052604090206001808201805460ff191682800217905550838155620001c360028201846200041e602090811b62000c6a17901c565b60008481526005602052604081206001015460ff166002811115620001f857634e487b7160e01b600052602160045260246000fd5b14156200025d5760405162461bcd60e51b815260206004820152603c602482015260008051602062001ea183398151915260448201527f20746f206d616e61676520616e206578636c757369766520726f6c650000000060648201526084016200017c565b5050505050565b826000808281526005602052604090206001015460ff1660028111156200029b57634e487b7160e01b600052602160045260246000fd5b14620002ea5760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000060448201526064016200017c565b600084815260056020908152604090912060018101805460ff191660021790558481559062000329906003830190859062000c746200042e821b17901c565b60008481526005602052604081206001015460ff1660028111156200035e57634e487b7160e01b600052602160045260246000fd5b14156200025d5760405162461bcd60e51b8152602060048201526038602482015260008051602062001ea183398151915260448201527f20746f206d616e61676520612073686172656420726f6c65000000000000000060648201526084016200017c565b600654610100900460ff166200041c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016200017c565b565b6200042a82826200048f565b5050565b60005b81518110156200048a5762000475838383815181106200046157634e487b7160e01b600052603260045260246000fd5b60200260200101516200051060201b60201c565b806200048181620007a4565b91505062000431565b505050565b6001600160a01b038116620004f35760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b60648201526084016200017c565b81546001600160a01b0319166001600160a01b0391909116179055565b6001600160a01b038116620005685760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c650060448201526064016200017c565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b8280546200059b9062000767565b90600052602060002090601f016020900481019282620005bf57600085556200060a565b82601f10620005da57805160ff19168380011785556200060a565b828001600101855582156200060a579182015b828111156200060a578251825591602001919060010190620005ed565b50620006189291506200061c565b5090565b5b808211156200061857600081556001016200061d565b600082601f83011262000644578081fd5b81516001600160401b0380821115620006615762000661620007cc565b604051601f8301601f19908116603f011681019082821181831017156200068c576200068c620007cc565b81604052838152602092508683858801011115620006a8578485fd5b8491505b83821015620006cb5785820183015181830184015290820190620006ac565b83821115620006dc57848385830101525b9695505050505050565b600080600060608486031215620006fb578283fd5b83516001600160401b038082111562000712578485fd5b620007208783880162000633565b9450602086015191508082111562000736578384fd5b50620007458682870162000633565b925050604084015160ff811681146200075c578182fd5b809150509250925092565b600181811c908216806200077c57607f821691505b602082108114156200079e57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415620007c557634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b6116af80620007f26000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c806373cc802a116100de578063a9059cbb11610097578063ab3545e511610071578063ab3545e51461035e578063d97c05be14610389578063dd62ed3e1461039c578063f44637ba146103d557600080fd5b8063a9059cbb14610325578063aa271e1a14610338578063aaa14ca31461034b57600080fd5b806373cc802a146102be57806374d0a676146102d15780637cdc1cb9146102e457806395d89b41146102f7578063983b2d56146102ff578063a457c2d71461031257600080fd5b8063313ce5671161014b57806342966c681161012557806342966c681461025c5780634334614a1461026f5780636be7658b1461028257806370a082311461029557600080fd5b8063313ce56714610221578063395093511461023657806340c10f191461024957600080fd5b8063028468581461019357806306fdde03146101a8578063095ea7b3146101c657806318160ddd146101e957806323b872dd146101fb5780633092afd51461020e575b600080fd5b6101a66101a136600461137f565b6103e8565b005b6101b0610423565b6040516101bd9190611470565b60405180910390f35b6101d96101d436600461140d565b6104b5565b60405190151581526020016101bd565b6002545b6040519081526020016101bd565b6101d96102093660046113d2565b6104cc565b6101a661021c36600461137f565b610582565b60065460405160ff90911681526020016101bd565b6101d961024436600461140d565b6105a4565b6101d961025736600461140d565b6105db565b6101a661026a366004611436565b610619565b6101d961027d36600461137f565b61064f565b6101a661029036600461144e565b61066d565b6101ed6102a336600461137f565b6001600160a01b031660009081526020819052604090205490565b6101a66102cc36600461137f565b610751565b6101a66102df36600461144e565b610774565b6101d96102f236600461144e565b610858565b6101b061093b565b6101a661030d36600461137f565b61094a565b6101d961032036600461140d565b61096e565b6101d961033336600461140d565b6109ff565b6101d961034636600461137f565b610a0c565b6101a6610359366004611436565b610a20565b61037161036c366004611436565b610aea565b6040516001600160a01b0390911681526020016101bd565b6101a661039736600461144e565b610b64565b6101ed6103aa3660046113a0565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101a66103e336600461137f565b610c48565b6103f0610cc8565b6104006006805461ff0019169055565b61040c60025b8261066d565b6104206006805461ff001916610100179055565b50565b60606003805461043290611613565b80601f016020809104026020016040519081016040528092919081815260200182805461045e90611613565b80156104ab5780601f10610480576101008083540402835291602001916104ab565b820191906000526020600020905b81548152906001019060200180831161048e57829003601f168201915b5050505050905090565b60006104c2338484610d21565b5060015b92915050565b60006104d9848484610e46565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156105635760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610577853361057286856115fc565b610d21565b506001949350505050565b61058a610cc8565b61059a6006805461ff0019169055565b61040c6001610406565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916104c29185906105729086906115e4565b600060016105e98133610858565b6106055760405162461bcd60e51b815260040161055a9061155e565b61060f848461101e565b5060019392505050565b60026106258133610858565b6106415760405162461bcd60e51b815260040161055a9061155e565b61064b33836110fd565b5050565b6000610659610cc8565b61066560025b83610858565b90505b919050565b81600260008281526005602052604090206001015460ff1660028111156106a457634e487b7160e01b600052602160045260246000fd5b146106c15760405162461bcd60e51b815260040161055a90611512565b60008381526005602052604090205483906106dc9033610858565b6106f85760405162461bcd60e51b815260040161055a906115a0565b6000848152600560205260409020610713906003018461124c565b60405133906001600160a01b0385169086907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a450505050565b610759610cc8565b6107696006805461ff0019169055565b61040c600082610b64565b81600260008281526005602052604090206001015460ff1660028111156107ab57634e487b7160e01b600052602160045260246000fd5b146107c85760405162461bcd60e51b815260040161055a90611512565b60008381526005602052604090205483906107e39033610858565b6107ff5760405162461bcd60e51b815260040161055a906115a0565b600084815260056020526040902061081a906003018461126e565b60405133906001600160a01b0385169086907f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f90600090a450505050565b600082815260056020526040812060018082015460ff16600281111561088e57634e487b7160e01b600052602160045260246000fd5b14156108b05760028101546001600160a01b038481169116145b9150506104c6565b6002600182015460ff1660028111156108d957634e487b7160e01b600052602160045260246000fd5b1415610902576001600160a01b038316600090815260038201602052604090205460ff166108a8565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b604482015260640161055a565b60606004805461043290611613565b610952610cc8565b6109626006805461ff0019169055565b61040c60015b82610774565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156109f05760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161055a565b61060f338561057286856115fc565b60006104c2338484610e46565b6000610a16610cc8565b610665600161065f565b80600260008281526005602052604090206001015460ff166002811115610a5757634e487b7160e01b600052602160045260246000fd5b14610a745760405162461bcd60e51b815260040161055a90611512565b81610a7f8133610858565b610a9b5760405162461bcd60e51b815260040161055a9061155e565b6000838152600560205260409020610ab6906003013361124c565b6040513390819085907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a4505050565b600081600160008281526005602052604090206001015460ff166002811115610b2357634e487b7160e01b600052602160045260246000fd5b14610b405760405162461bcd60e51b815260040161055a906114c3565b6000838152600560205260409020600201546001600160a01b031691505b50919050565b81600160008281526005602052604090206001015460ff166002811115610b9b57634e487b7160e01b600052602160045260246000fd5b14610bb85760405162461bcd60e51b815260040161055a906114c3565b6000838152600560205260409020548390610bd39033610858565b610bef5760405162461bcd60e51b815260040161055a906115a0565b6000848152600560205260409020610c0a90600201846112e9565b60405133906001600160a01b0385169086907f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74690600090a450505050565b610c50610cc8565b610c606006805461ff0019169055565b61040c6002610968565b61064b82826112e9565b60005b8151811015610cc357610cb183838381518110610ca457634e487b7160e01b600052603260045260246000fd5b602002602001015161126e565b80610cbb81611648565b915050610c77565b505050565b600654610100900460ff16610d1f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161055a565b565b6001600160a01b038316610d835760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161055a565b6001600160a01b038216610de45760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161055a565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316610eaa5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161055a565b6001600160a01b038216610f0c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161055a565b6001600160a01b03831660009081526020819052604090205481811015610f845760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161055a565b610f8e82826115fc565b6001600160a01b038086166000908152602081905260408082209390935590851681529081208054849290610fc49084906115e4565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161101091815260200190565b60405180910390a350505050565b6001600160a01b0382166110745760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161055a565b806002600082825461108691906115e4565b90915550506001600160a01b038216600090815260208190526040812080548392906110b39084906115e4565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b03821661115d5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161055a565b6001600160a01b038216600090815260208190526040902054818110156111d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161055a565b6111db82826115fc565b6001600160a01b038416600090815260208190526040812091909155600280548492906112099084906115fc565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610e39565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b0381166112c45760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c6500604482015260640161055a565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b03811661134b5760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b606482015260840161055a565b81546001600160a01b0319166001600160a01b0391909116179055565b80356001600160a01b038116811461066857600080fd5b600060208284031215611390578081fd5b61139982611368565b9392505050565b600080604083850312156113b2578081fd5b6113bb83611368565b91506113c960208401611368565b90509250929050565b6000806000606084860312156113e6578081fd5b6113ef84611368565b92506113fd60208501611368565b9150604084013590509250925092565b6000806040838503121561141f578182fd5b61142883611368565b946020939093013593505050565b600060208284031215611447578081fd5b5035919050565b60008060408385031215611460578182fd5b823591506113c960208401611368565b6000602080835283518082850152825b8181101561149c57858101830151858201604001528201611480565b818111156114ad5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252602f908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526e204578636c757369766520726f6c6560881b606082015260800190565b6020808252602c908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526b2053686172656420726f6c6560a01b606082015260800190565b60208082526022908201527f53656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6040820152616c6560f01b606082015260800190565b60208082526024908201527f43616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e60408201526330b3b2b960e11b606082015260800190565b600082198211156115f7576115f7611663565b500190565b60008282101561160e5761160e611663565b500390565b600181811c9082168061162757607f821691505b60208210811415610b5e57634e487b7160e01b600052602260045260246000fd5b600060001982141561165c5761165c611663565b5060010190565b634e487b7160e01b600052601160045260246000fdfea264697066735822122051df4642e724b838b110da179be1afd717daa1a2021873a02fbeb57c99296bab64736f6c63430008040033417474656d7074656420746f2075736520616e20696e76616c696420726f6c65a26469706673582212204bee195dfb0b224d21bfed43022fdfb092282d607d9df834e3da77026a83a64f64736f6c63430008040033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200002e5760003560e01c8063e8a0aed31462000033575b600080fd5b6200004a62000044366004620002aa565b62000066565b6040516001600160a01b03909116815260200160405180910390f35b600062000072620001f9565b620000826000805460ff19169055565b60008686868686604051620000979062000252565b620000a795949392919062000361565b604051809103906000f080158015620000c4573d6000803e3d6000fd5b50604051634c1d96ab60e11b81523360048201529091506001600160a01b0382169063983b2d5690602401600060405180830381600087803b1580156200010a57600080fd5b505af11580156200011f573d6000803e3d6000fd5b5050604051637a231bdd60e11b81523360048201526001600160a01b038416925063f44637ba9150602401600060405180830381600087803b1580156200016557600080fd5b505af11580156200017a573d6000803e3d6000fd5b50506040516339e6401560e11b81523360048201526001600160a01b03841692506373cc802a9150602401600060405180830381600087803b158015620001c057600080fd5b505af1158015620001d5573d6000803e3d6000fd5b5050505080915050620001f06000805460ff19166001179055565b95945050505050565b60005460ff16620002505760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640160405180910390fd5b565b611ec180620003a383390190565b60008083601f84011262000272578182fd5b50813567ffffffffffffffff8111156200028a578182fd5b602083019150836020828501011115620002a357600080fd5b9250929050565b600080600080600060608688031215620002c2578081fd5b853567ffffffffffffffff80821115620002da578283fd5b620002e889838a0162000260565b9097509550602088013591508082111562000301578283fd5b50620003108882890162000260565b909450925050604086013560ff811681146200032a578182fd5b809150509295509295909350565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6060815260006200037760608301878962000338565b82810360208401526200038c81868862000338565b91505060ff83166040830152969550505050505056fe60806040523480156200001157600080fd5b5060405162001ec138038062001ec18339810160408190526200003491620006e6565b82828282828160039080519060200190620000519291906200058d565b508051620000679060049060208401906200058d565b50506006805460ff191660ff8416179055506200008760008033620000fb565b620000a460015b6040805160008082526020820190925262000264565b620000b060026200008e565b50506006805461ff00191661010017905550620000cc620003c3565b620000dd6006805461ff0019169055565b620000f26006805461ff001916610100179055565b505050620007e2565b826000808281526005602052604090206001015460ff1660028111156200013257634e487b7160e01b600052602160045260246000fd5b14620001855760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000060448201526064015b60405180910390fd5b60008481526005602052604090206001808201805460ff191682800217905550838155620001c360028201846200041e602090811b62000c6a17901c565b60008481526005602052604081206001015460ff166002811115620001f857634e487b7160e01b600052602160045260246000fd5b14156200025d5760405162461bcd60e51b815260206004820152603c602482015260008051602062001ea183398151915260448201527f20746f206d616e61676520616e206578636c757369766520726f6c650000000060648201526084016200017c565b5050505050565b826000808281526005602052604090206001015460ff1660028111156200029b57634e487b7160e01b600052602160045260246000fd5b14620002ea5760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000060448201526064016200017c565b600084815260056020908152604090912060018101805460ff191660021790558481559062000329906003830190859062000c746200042e821b17901c565b60008481526005602052604081206001015460ff1660028111156200035e57634e487b7160e01b600052602160045260246000fd5b14156200025d5760405162461bcd60e51b8152602060048201526038602482015260008051602062001ea183398151915260448201527f20746f206d616e61676520612073686172656420726f6c65000000000000000060648201526084016200017c565b600654610100900460ff166200041c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016200017c565b565b6200042a82826200048f565b5050565b60005b81518110156200048a5762000475838383815181106200046157634e487b7160e01b600052603260045260246000fd5b60200260200101516200051060201b60201c565b806200048181620007a4565b91505062000431565b505050565b6001600160a01b038116620004f35760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b60648201526084016200017c565b81546001600160a01b0319166001600160a01b0391909116179055565b6001600160a01b038116620005685760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c650060448201526064016200017c565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b8280546200059b9062000767565b90600052602060002090601f016020900481019282620005bf57600085556200060a565b82601f10620005da57805160ff19168380011785556200060a565b828001600101855582156200060a579182015b828111156200060a578251825591602001919060010190620005ed565b50620006189291506200061c565b5090565b5b808211156200061857600081556001016200061d565b600082601f83011262000644578081fd5b81516001600160401b0380821115620006615762000661620007cc565b604051601f8301601f19908116603f011681019082821181831017156200068c576200068c620007cc565b81604052838152602092508683858801011115620006a8578485fd5b8491505b83821015620006cb5785820183015181830184015290820190620006ac565b83821115620006dc57848385830101525b9695505050505050565b600080600060608486031215620006fb578283fd5b83516001600160401b038082111562000712578485fd5b620007208783880162000633565b9450602086015191508082111562000736578384fd5b50620007458682870162000633565b925050604084015160ff811681146200075c578182fd5b809150509250925092565b600181811c908216806200077c57607f821691505b602082108114156200079e57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415620007c557634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b6116af80620007f26000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c806373cc802a116100de578063a9059cbb11610097578063ab3545e511610071578063ab3545e51461035e578063d97c05be14610389578063dd62ed3e1461039c578063f44637ba146103d557600080fd5b8063a9059cbb14610325578063aa271e1a14610338578063aaa14ca31461034b57600080fd5b806373cc802a146102be57806374d0a676146102d15780637cdc1cb9146102e457806395d89b41146102f7578063983b2d56146102ff578063a457c2d71461031257600080fd5b8063313ce5671161014b57806342966c681161012557806342966c681461025c5780634334614a1461026f5780636be7658b1461028257806370a082311461029557600080fd5b8063313ce56714610221578063395093511461023657806340c10f191461024957600080fd5b8063028468581461019357806306fdde03146101a8578063095ea7b3146101c657806318160ddd146101e957806323b872dd146101fb5780633092afd51461020e575b600080fd5b6101a66101a136600461137f565b6103e8565b005b6101b0610423565b6040516101bd9190611470565b60405180910390f35b6101d96101d436600461140d565b6104b5565b60405190151581526020016101bd565b6002545b6040519081526020016101bd565b6101d96102093660046113d2565b6104cc565b6101a661021c36600461137f565b610582565b60065460405160ff90911681526020016101bd565b6101d961024436600461140d565b6105a4565b6101d961025736600461140d565b6105db565b6101a661026a366004611436565b610619565b6101d961027d36600461137f565b61064f565b6101a661029036600461144e565b61066d565b6101ed6102a336600461137f565b6001600160a01b031660009081526020819052604090205490565b6101a66102cc36600461137f565b610751565b6101a66102df36600461144e565b610774565b6101d96102f236600461144e565b610858565b6101b061093b565b6101a661030d36600461137f565b61094a565b6101d961032036600461140d565b61096e565b6101d961033336600461140d565b6109ff565b6101d961034636600461137f565b610a0c565b6101a6610359366004611436565b610a20565b61037161036c366004611436565b610aea565b6040516001600160a01b0390911681526020016101bd565b6101a661039736600461144e565b610b64565b6101ed6103aa3660046113a0565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101a66103e336600461137f565b610c48565b6103f0610cc8565b6104006006805461ff0019169055565b61040c60025b8261066d565b6104206006805461ff001916610100179055565b50565b60606003805461043290611613565b80601f016020809104026020016040519081016040528092919081815260200182805461045e90611613565b80156104ab5780601f10610480576101008083540402835291602001916104ab565b820191906000526020600020905b81548152906001019060200180831161048e57829003601f168201915b5050505050905090565b60006104c2338484610d21565b5060015b92915050565b60006104d9848484610e46565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156105635760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610577853361057286856115fc565b610d21565b506001949350505050565b61058a610cc8565b61059a6006805461ff0019169055565b61040c6001610406565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916104c29185906105729086906115e4565b600060016105e98133610858565b6106055760405162461bcd60e51b815260040161055a9061155e565b61060f848461101e565b5060019392505050565b60026106258133610858565b6106415760405162461bcd60e51b815260040161055a9061155e565b61064b33836110fd565b5050565b6000610659610cc8565b61066560025b83610858565b90505b919050565b81600260008281526005602052604090206001015460ff1660028111156106a457634e487b7160e01b600052602160045260246000fd5b146106c15760405162461bcd60e51b815260040161055a90611512565b60008381526005602052604090205483906106dc9033610858565b6106f85760405162461bcd60e51b815260040161055a906115a0565b6000848152600560205260409020610713906003018461124c565b60405133906001600160a01b0385169086907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a450505050565b610759610cc8565b6107696006805461ff0019169055565b61040c600082610b64565b81600260008281526005602052604090206001015460ff1660028111156107ab57634e487b7160e01b600052602160045260246000fd5b146107c85760405162461bcd60e51b815260040161055a90611512565b60008381526005602052604090205483906107e39033610858565b6107ff5760405162461bcd60e51b815260040161055a906115a0565b600084815260056020526040902061081a906003018461126e565b60405133906001600160a01b0385169086907f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f90600090a450505050565b600082815260056020526040812060018082015460ff16600281111561088e57634e487b7160e01b600052602160045260246000fd5b14156108b05760028101546001600160a01b038481169116145b9150506104c6565b6002600182015460ff1660028111156108d957634e487b7160e01b600052602160045260246000fd5b1415610902576001600160a01b038316600090815260038201602052604090205460ff166108a8565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b604482015260640161055a565b60606004805461043290611613565b610952610cc8565b6109626006805461ff0019169055565b61040c60015b82610774565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156109f05760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161055a565b61060f338561057286856115fc565b60006104c2338484610e46565b6000610a16610cc8565b610665600161065f565b80600260008281526005602052604090206001015460ff166002811115610a5757634e487b7160e01b600052602160045260246000fd5b14610a745760405162461bcd60e51b815260040161055a90611512565b81610a7f8133610858565b610a9b5760405162461bcd60e51b815260040161055a9061155e565b6000838152600560205260409020610ab6906003013361124c565b6040513390819085907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a4505050565b600081600160008281526005602052604090206001015460ff166002811115610b2357634e487b7160e01b600052602160045260246000fd5b14610b405760405162461bcd60e51b815260040161055a906114c3565b6000838152600560205260409020600201546001600160a01b031691505b50919050565b81600160008281526005602052604090206001015460ff166002811115610b9b57634e487b7160e01b600052602160045260246000fd5b14610bb85760405162461bcd60e51b815260040161055a906114c3565b6000838152600560205260409020548390610bd39033610858565b610bef5760405162461bcd60e51b815260040161055a906115a0565b6000848152600560205260409020610c0a90600201846112e9565b60405133906001600160a01b0385169086907f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74690600090a450505050565b610c50610cc8565b610c606006805461ff0019169055565b61040c6002610968565b61064b82826112e9565b60005b8151811015610cc357610cb183838381518110610ca457634e487b7160e01b600052603260045260246000fd5b602002602001015161126e565b80610cbb81611648565b915050610c77565b505050565b600654610100900460ff16610d1f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161055a565b565b6001600160a01b038316610d835760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161055a565b6001600160a01b038216610de45760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161055a565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316610eaa5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161055a565b6001600160a01b038216610f0c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161055a565b6001600160a01b03831660009081526020819052604090205481811015610f845760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161055a565b610f8e82826115fc565b6001600160a01b038086166000908152602081905260408082209390935590851681529081208054849290610fc49084906115e4565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161101091815260200190565b60405180910390a350505050565b6001600160a01b0382166110745760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161055a565b806002600082825461108691906115e4565b90915550506001600160a01b038216600090815260208190526040812080548392906110b39084906115e4565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b03821661115d5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161055a565b6001600160a01b038216600090815260208190526040902054818110156111d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161055a565b6111db82826115fc565b6001600160a01b038416600090815260208190526040812091909155600280548492906112099084906115fc565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610e39565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b0381166112c45760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c6500604482015260640161055a565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b03811661134b5760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b606482015260840161055a565b81546001600160a01b0319166001600160a01b0391909116179055565b80356001600160a01b038116811461066857600080fd5b600060208284031215611390578081fd5b61139982611368565b9392505050565b600080604083850312156113b2578081fd5b6113bb83611368565b91506113c960208401611368565b90509250929050565b6000806000606084860312156113e6578081fd5b6113ef84611368565b92506113fd60208501611368565b9150604084013590509250925092565b6000806040838503121561141f578182fd5b61142883611368565b946020939093013593505050565b600060208284031215611447578081fd5b5035919050565b60008060408385031215611460578182fd5b823591506113c960208401611368565b6000602080835283518082850152825b8181101561149c57858101830151858201604001528201611480565b818111156114ad5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252602f908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526e204578636c757369766520726f6c6560881b606082015260800190565b6020808252602c908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526b2053686172656420726f6c6560a01b606082015260800190565b60208082526022908201527f53656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6040820152616c6560f01b606082015260800190565b60208082526024908201527f43616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e60408201526330b3b2b960e11b606082015260800190565b600082198211156115f7576115f7611663565b500190565b60008282101561160e5761160e611663565b500390565b600181811c9082168061162757607f821691505b60208210811415610b5e57634e487b7160e01b600052602260045260246000fd5b600060001982141561165c5761165c611663565b5060010190565b634e487b7160e01b600052601160045260246000fdfea264697066735822122051df4642e724b838b110da179be1afd717daa1a2021873a02fbeb57c99296bab64736f6c63430008040033417474656d7074656420746f2075736520616e20696e76616c696420726f6c65a26469706673582212204bee195dfb0b224d21bfed43022fdfb092282d607d9df834e3da77026a83a64f64736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2908:141",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:141",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "87:303:141",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "136:30:141",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "145:8:141"
                            },
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "155:8:141"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "138:6:141"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "138:26:141"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "138:26:141"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "115:6:141"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "123:4:141",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "111:3:141"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "111:17:141"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "130:3:141"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "107:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "107:27:141"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "100:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "100:35:141"
                  },
                  "nodeType": "YulIf",
                  "src": "97:2:141"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "175:30:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "198:6:141"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "185:12:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "185:20:141"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "175:6:141"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "248:30:141",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "257:8:141"
                            },
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "267:8:141"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "250:6:141"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "250:26:141"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "250:26:141"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "220:6:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "228:18:141",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "217:2:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:30:141"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:141"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "287:29:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "303:6:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "311:4:141",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "299:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "299:17:141"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "287:8:141"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "368:16:141",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "377:1:141",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "380:1:141",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "370:6:141"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "370:12:141"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "370:12:141"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "339:6:141"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "347:6:141"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "335:3:141"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "335:19:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "356:4:141",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "331:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "331:30:141"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "363:3:141"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "328:2:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "328:39:141"
                  },
                  "nodeType": "YulIf",
                  "src": "325:2:141"
                }
              ]
            },
            "name": "abi_decode_string_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "50:6:141",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "58:3:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "66:8:141",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "76:6:141",
                "type": ""
              }
            ],
            "src": "14:376:141"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "537:776:141",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "583:26:141",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "592:6:141"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "600:6:141"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "585:6:141"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "585:22:141"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "585:22:141"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "558:7:141"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "567:9:141"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "554:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "554:23:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "579:2:141",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "550:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "550:32:141"
                  },
                  "nodeType": "YulIf",
                  "src": "547:2:141"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "618:37:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "645:9:141"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "632:12:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "632:23:141"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "622:6:141",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "664:28:141",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "674:18:141",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "668:2:141",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "719:26:141",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "728:6:141"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "736:6:141"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "721:6:141"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "721:22:141"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "721:22:141"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "707:6:141"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "715:2:141"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "704:2:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "704:14:141"
                  },
                  "nodeType": "YulIf",
                  "src": "701:2:141"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "754:85:141",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "811:9:141"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "822:6:141"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "807:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "807:22:141"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "831:7:141"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "780:26:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "780:59:141"
                  },
                  "variables": [
                    {
                      "name": "value0_1",
                      "nodeType": "YulTypedName",
                      "src": "758:8:141",
                      "type": ""
                    },
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "768:8:141",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "848:18:141",
                  "value": {
                    "name": "value0_1",
                    "nodeType": "YulIdentifier",
                    "src": "858:8:141"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "848:6:141"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "875:18:141",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "885:8:141"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "875:6:141"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "902:48:141",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "935:9:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "946:2:141",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "931:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "931:18:141"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "918:12:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "918:32:141"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "906:8:141",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "979:26:141",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "988:6:141"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "996:6:141"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "981:6:141"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "981:22:141"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "981:22:141"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "965:8:141"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "975:2:141"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "962:2:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "962:16:141"
                  },
                  "nodeType": "YulIf",
                  "src": "959:2:141"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1014:87:141",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1071:9:141"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "1082:8:141"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1067:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1067:24:141"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1093:7:141"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "1040:26:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1040:61:141"
                  },
                  "variables": [
                    {
                      "name": "value2_1",
                      "nodeType": "YulTypedName",
                      "src": "1018:8:141",
                      "type": ""
                    },
                    {
                      "name": "value3_1",
                      "nodeType": "YulTypedName",
                      "src": "1028:8:141",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1110:18:141",
                  "value": {
                    "name": "value2_1",
                    "nodeType": "YulIdentifier",
                    "src": "1120:8:141"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1110:6:141"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1137:18:141",
                  "value": {
                    "name": "value3_1",
                    "nodeType": "YulIdentifier",
                    "src": "1147:8:141"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1137:6:141"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1164:45:141",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1194:9:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1205:2:141",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1190:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1190:18:141"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1177:12:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1177:32:141"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1168:5:141",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1257:26:141",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1266:6:141"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1274:6:141"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1259:6:141"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1259:22:141"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1259:22:141"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1231:5:141"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1242:5:141"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1249:4:141",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1238:3:141"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1238:16:141"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1228:2:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1228:27:141"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1221:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1221:35:141"
                  },
                  "nodeType": "YulIf",
                  "src": "1218:2:141"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1292:15:141",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1302:5:141"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1292:6:141"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "471:9:141",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "482:7:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "494:6:141",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "502:6:141",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "510:6:141",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "518:6:141",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "526:6:141",
                "type": ""
              }
            ],
            "src": "395:918:141"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1385:202:141",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1402:3:141"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1407:6:141"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1395:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1395:19:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1395:19:141"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1440:3:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1445:4:141",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1436:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1436:14:141"
                      },
                      {
                        "name": "start",
                        "nodeType": "YulIdentifier",
                        "src": "1452:5:141"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1459:6:141"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1423:12:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1423:43:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1423:43:141"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "1490:3:141"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1495:6:141"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1486:3:141"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1486:16:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1504:4:141",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1482:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1482:27:141"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1511:3:141"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1475:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1475:40:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1475:40:141"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1524:57:141",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1539:3:141"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1552:6:141"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1560:2:141",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1548:3:141"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1548:15:141"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1569:2:141",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1565:3:141"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1565:7:141"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1544:3:141"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1544:29:141"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1535:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1535:39:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1576:4:141",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1531:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1531:50:141"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1524:3:141"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "start",
                "nodeType": "YulTypedName",
                "src": "1354:5:141",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1361:6:141",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1369:3:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1377:3:141",
                "type": ""
              }
            ],
            "src": "1318:269:141"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1693:102:141",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1703:26:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1715:9:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1726:2:141",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1711:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1711:18:141"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1703:4:141"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1745:9:141"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1760:6:141"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1776:3:141",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1781:1:141",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1772:3:141"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1772:11:141"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1785:1:141",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1768:3:141"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1768:19:141"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1756:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1756:32:141"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1738:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1738:51:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1738:51:141"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1662:9:141",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1673:6:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1684:4:141",
                "type": ""
              }
            ],
            "src": "1592:203:141"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1924:102:141",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1934:26:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1946:9:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1957:2:141",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1942:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1942:18:141"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1934:4:141"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1976:9:141"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1991:6:141"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2007:3:141",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2012:1:141",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2003:3:141"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2003:11:141"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2016:1:141",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1999:3:141"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1999:19:141"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1987:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1987:32:141"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1969:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1969:51:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1969:51:141"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ExpandedIERC20_$7146__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1893:9:141",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1904:6:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1915:4:141",
                "type": ""
              }
            ],
            "src": "1800:226:141"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2244:302:141",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2261:9:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2272:2:141",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2254:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2254:21:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2254:21:141"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2284:76:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2325:6:141"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2333:6:141"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2345:9:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2356:2:141",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2341:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2341:18:141"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "2298:26:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2298:62:141"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "2288:6:141",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2380:9:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2391:2:141",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2376:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2376:18:141"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "2400:6:141"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2408:9:141"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2396:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2396:22:141"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2369:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2369:50:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2369:50:141"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2428:58:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2463:6:141"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "2471:6:141"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "2479:6:141"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "2436:26:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2436:50:141"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2428:4:141"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2506:9:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2517:2:141",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2502:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2502:18:141"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "2526:6:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2534:4:141",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2522:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2522:17:141"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2495:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2495:45:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2495:45:141"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_calldata_ptr_t_string_calldata_ptr_t_uint8__to_t_string_memory_ptr_t_string_memory_ptr_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2181:9:141",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2192:6:141",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2200:6:141",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2208:6:141",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2216:6:141",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2224:6:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2235:4:141",
                "type": ""
              }
            ],
            "src": "2031:515:141"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2725:181:141",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2742:9:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2753:2:141",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2735:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2735:21:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2735:21:141"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2776:9:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2787:2:141",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2772:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2772:18:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2792:2:141",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2765:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2765:30:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2765:30:141"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2815:9:141"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2826:2:141",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2811:3:141"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2811:18:141"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2831:33:141",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2804:6:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2804:61:141"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2804:61:141"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2874:26:141",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2886:9:141"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2897:2:141",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2882:3:141"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2882:18:141"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2874:4:141"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2702:9:141",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2716:4:141",
                "type": ""
              }
            ],
            "src": "2551:355:141"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_string_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(arrayPos, arrayPos) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(arrayPos, arrayPos) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_uint8(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value4, value4) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        let value0_1, value1_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        let value2_1, value3_1 := abi_decode_string_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let value := calldataload(add(headStart, 64))\n        if iszero(eq(value, and(value, 0xff))) { revert(value4, value4) }\n        value4 := value\n    }\n    function abi_encode_string_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), end)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_ExpandedIERC20_$7146__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_calldata_ptr_t_string_calldata_ptr_t_uint8__to_t_string_memory_ptr_t_string_memory_ptr_t_uint8__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        let tail_1 := abi_encode_string_calldata(value0, value1, add(headStart, 96))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string_calldata(value2, value3, tail_1)\n        mstore(add(headStart, 64), and(value4, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 141,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "277:1036:53:-:0;;;;;;;;;;;;-1:-1:-1;896:11:20;:18;;-1:-1:-1;;896:18:20;910:4;896:18;;;277:1036:53;;;;;;",
  "deployedSourceMap": "277:1036:53:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;825:486;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1756:32:141;;;1738:51;;1726:2;1711:18;825:486:53;;;;;;;;986:23;1330:19:20;:17;:19::i;:::-;1359:17;2465:5;2451:19;;-1:-1:-1;;2451:19:20;;;2341:136;1359:17;1021:28:53::1;1071:9;;1082:11;;1095:13;1052:57;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1119:35:53::1;::::0;-1:-1:-1;;;1119:35:53;;1143:10:::1;1119:35;::::0;::::1;1738:51:141::0;1021:88:53;;-1:-1:-1;;;;;;1119:23:53;::::1;::::0;::::1;::::0;1711:18:141;;1119:35:53::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1164:35:53::1;::::0;-1:-1:-1;;;1164:35:53;;1188:10:::1;1164:35;::::0;::::1;1738:51:141::0;-1:-1:-1;;;;;1164:23:53;::::1;::::0;-1:-1:-1;1164:23:53::1;::::0;-1:-1:-1;1711:18:141;;1164:35:53::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1209:36:53::1;::::0;-1:-1:-1;;;1209:36:53;;1234:10:::1;1209:36;::::0;::::1;1738:51:141::0;-1:-1:-1;;;;;1209:24:53;::::1;::::0;-1:-1:-1;1209:24:53::1;::::0;-1:-1:-1;1711:18:141;;1209:36:53::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1289:13;1255:49;;1386:1:20;1397:20:::0;2664:11;:18;;-1:-1:-1;;2664:18:20;2678:4;2664:18;;;2483:206;1397:20;825:486:53;;;;;;;:::o;2149:186:20:-;2281:11;;;;2273:55;;;;-1:-1:-1;;;2273:55:20;;2753:2:141;2273:55:20;;;2735:21:141;2792:2;2772:18;;;2765:30;2831:33;2811:18;;;2804:61;2882:18;;2273:55:20;;;;;;;;2149:186::o;-1:-1:-1:-;;;;;;;;:::o;14:376:141:-;66:8;76:6;130:3;123:4;115:6;111:17;107:27;97:2;;155:8;145;138:26;97:2;-1:-1:-1;185:20:141;;228:18;217:30;;214:2;;;267:8;257;250:26;214:2;311:4;303:6;299:17;287:29;;363:3;356:4;347:6;339;335:19;331:30;328:39;325:2;;;380:1;377;370:12;325:2;87:303;;;;;:::o;395:918::-;494:6;502;510;518;526;579:2;567:9;558:7;554:23;550:32;547:2;;;600:6;592;585:22;547:2;645:9;632:23;674:18;715:2;707:6;704:14;701:2;;;736:6;728;721:22;701:2;780:59;831:7;822:6;811:9;807:22;780:59;:::i;:::-;858:8;;-1:-1:-1;754:85:141;-1:-1:-1;946:2:141;931:18;;918:32;;-1:-1:-1;962:16:141;;;959:2;;;996:6;988;981:22;959:2;;1040:61;1093:7;1082:8;1071:9;1067:24;1040:61;:::i;:::-;1120:8;;-1:-1:-1;1014:87:141;-1:-1:-1;;1205:2:141;1190:18;;1177:32;1249:4;1238:16;;1228:27;;1218:2;;1274:6;1266;1259:22;1218:2;1302:5;1292:15;;;537:776;;;;;;;;:::o;1318:269::-;1407:6;1402:3;1395:19;1459:6;1452:5;1445:4;1440:3;1436:14;1423:43;-1:-1:-1;1377:3:141;1486:16;;;1504:4;1482:27;;;1475:40;;;;1569:2;1548:15;;;-1:-1:-1;;1544:29:141;1535:39;;;1531:50;;1385:202::o;2031:515::-;2272:2;2261:9;2254:21;2235:4;2298:62;2356:2;2345:9;2341:18;2333:6;2325;2298:62;:::i;:::-;2408:9;2400:6;2396:22;2391:2;2380:9;2376:18;2369:50;2436;2479:6;2471;2463;2436:50;:::i;:::-;2428:58;;;2534:4;2526:6;2522:17;2517:2;2506:9;2502:18;2495:45;2244:302;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"./SyntheticToken.sol\";\nimport \"../../common/interfaces/ExpandedIERC20.sol\";\nimport \"../../common/implementation/Lockable.sol\";\n\n/**\n * @title Factory for creating new mintable and burnable tokens.\n */\n\ncontract TokenFactory is Lockable {\n    /**\n     * @notice Create a new token and return it to the caller.\n     * @dev The caller will become the only minter and burner and the new owner capable of assigning the roles.\n     * @param tokenName used to describe the new token.\n     * @param tokenSymbol short ticker abbreviation of the name. Ideally < 5 chars.\n     * @param tokenDecimals used to define the precision used in the token's numerical representation.\n     * @return newToken an instance of the newly created token interface.\n     */\n    function createToken(\n        string calldata tokenName,\n        string calldata tokenSymbol,\n        uint8 tokenDecimals\n    ) external nonReentrant() returns (ExpandedIERC20 newToken) {\n        SyntheticToken mintableToken = new SyntheticToken(tokenName, tokenSymbol, tokenDecimals);\n        mintableToken.addMinter(msg.sender);\n        mintableToken.addBurner(msg.sender);\n        mintableToken.resetOwner(msg.sender);\n        newToken = ExpandedIERC20(address(mintableToken));\n    }\n}\n",
  "sourcePath": "/home/kamto/code/protocol/packages/core/contracts/financial-templates/common/TokenFactory.sol",
  "ast": {
    "absolutePath": "/home/kamto/code/protocol/packages/core/contracts/financial-templates/common/TokenFactory.sol",
    "exportedSymbols": {
      "Context": [
        33148
      ],
      "ERC20": [
        32097
      ],
      "Exclusive": [
        6284
      ],
      "ExpandedERC20": [
        4517
      ],
      "ExpandedIERC20": [
        7146
      ],
      "IERC20": [
        32175
      ],
      "IERC20Metadata": [
        32520
      ],
      "Lockable": [
        6211
      ],
      "MultiRole": [
        6836
      ],
      "Shared": [
        6380
      ],
      "SyntheticToken": [
        11221
      ],
      "TokenFactory": [
        11287
      ]
    },
    "id": 11288,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11223,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:53"
      },
      {
        "absolutePath": "/home/kamto/code/protocol/packages/core/contracts/financial-templates/common/SyntheticToken.sol",
        "file": "./SyntheticToken.sol",
        "id": 11224,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11288,
        "sourceUnit": 11222,
        "src": "67:30:53",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kamto/code/protocol/packages/core/contracts/common/interfaces/ExpandedIERC20.sol",
        "file": "../../common/interfaces/ExpandedIERC20.sol",
        "id": 11225,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11288,
        "sourceUnit": 7147,
        "src": "98:52:53",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kamto/code/protocol/packages/core/contracts/common/implementation/Lockable.sol",
        "file": "../../common/implementation/Lockable.sol",
        "id": 11226,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11288,
        "sourceUnit": 6212,
        "src": "151:50:53",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11228,
              "name": "Lockable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6211,
              "src": "302:8:53"
            },
            "id": 11229,
            "nodeType": "InheritanceSpecifier",
            "src": "302:8:53"
          }
        ],
        "contractDependencies": [
          11221
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 11227,
          "nodeType": "StructuredDocumentation",
          "src": "203:72:53",
          "text": " @title Factory for creating new mintable and burnable tokens."
        },
        "fullyImplemented": true,
        "id": 11287,
        "linearizedBaseContracts": [
          11287,
          6211
        ],
        "name": "TokenFactory",
        "nameLocation": "286:12:53",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 11285,
              "nodeType": "Block",
              "src": "1011:300:53",
              "statements": [
                {
                  "assignments": [
                    11246
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11246,
                      "mutability": "mutable",
                      "name": "mintableToken",
                      "nameLocation": "1036:13:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 11285,
                      "src": "1021:28:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SyntheticToken_$11221",
                        "typeString": "contract SyntheticToken"
                      },
                      "typeName": {
                        "id": 11245,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11244,
                          "name": "SyntheticToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11221,
                          "src": "1021:14:53"
                        },
                        "referencedDeclaration": 11221,
                        "src": "1021:14:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SyntheticToken_$11221",
                          "typeString": "contract SyntheticToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11254,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 11250,
                        "name": "tokenName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11232,
                        "src": "1071:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 11251,
                        "name": "tokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11234,
                        "src": "1082:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 11252,
                        "name": "tokenDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11236,
                        "src": "1095:13:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 11249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1052:18:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_SyntheticToken_$11221_$",
                        "typeString": "function (string memory,string memory,uint8) returns (contract SyntheticToken)"
                      },
                      "typeName": {
                        "id": 11248,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11247,
                          "name": "SyntheticToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11221,
                          "src": "1056:14:53"
                        },
                        "referencedDeclaration": 11221,
                        "src": "1056:14:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SyntheticToken_$11221",
                          "typeString": "contract SyntheticToken"
                        }
                      }
                    },
                    "id": 11253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1052:57:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SyntheticToken_$11221",
                      "typeString": "contract SyntheticToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1021:88:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11258,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1143:3:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1143:10:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 11255,
                        "name": "mintableToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11246,
                        "src": "1119:13:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SyntheticToken_$11221",
                          "typeString": "contract SyntheticToken"
                        }
                      },
                      "id": 11257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addMinter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11106,
                      "src": "1119:23:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 11260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1119:35:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11261,
                  "nodeType": "ExpressionStatement",
                  "src": "1119:35:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11265,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1188:3:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1188:10:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 11262,
                        "name": "mintableToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11246,
                        "src": "1164:13:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SyntheticToken_$11221",
                          "typeString": "contract SyntheticToken"
                        }
                      },
                      "id": 11264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addBurner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11143,
                      "src": "1164:23:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 11267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1164:35:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11268,
                  "nodeType": "ExpressionStatement",
                  "src": "1164:35:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11272,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1234:3:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1234:10:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 11269,
                        "name": "mintableToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11246,
                        "src": "1209:13:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SyntheticToken_$11221",
                          "typeString": "contract SyntheticToken"
                        }
                      },
                      "id": 11271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "resetOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11180,
                      "src": "1209:24:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 11274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1209:36:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11275,
                  "nodeType": "ExpressionStatement",
                  "src": "1209:36:53"
                },
                {
                  "expression": {
                    "id": 11283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11276,
                      "name": "newToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11242,
                      "src": "1255:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ExpandedIERC20_$7146",
                        "typeString": "contract ExpandedIERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 11280,
                              "name": "mintableToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11246,
                              "src": "1289:13:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SyntheticToken_$11221",
                                "typeString": "contract SyntheticToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SyntheticToken_$11221",
                                "typeString": "contract SyntheticToken"
                              }
                            ],
                            "id": 11279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1281:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11278,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1281:7:53",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1281:22:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 11277,
                        "name": "ExpandedIERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7146,
                        "src": "1266:14:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ExpandedIERC20_$7146_$",
                          "typeString": "type(contract ExpandedIERC20)"
                        }
                      },
                      "id": 11282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1266:38:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ExpandedIERC20_$7146",
                        "typeString": "contract ExpandedIERC20"
                      }
                    },
                    "src": "1255:49:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ExpandedIERC20_$7146",
                      "typeString": "contract ExpandedIERC20"
                    }
                  },
                  "id": 11284,
                  "nodeType": "ExpressionStatement",
                  "src": "1255:49:53"
                }
              ]
            },
            "documentation": {
              "id": 11230,
              "nodeType": "StructuredDocumentation",
              "src": "317:503:53",
              "text": " @notice Create a new token and return it to the caller.\n @dev The caller will become the only minter and burner and the new owner capable of assigning the roles.\n @param tokenName used to describe the new token.\n @param tokenSymbol short ticker abbreviation of the name. Ideally < 5 chars.\n @param tokenDecimals used to define the precision used in the token's numerical representation.\n @return newToken an instance of the newly created token interface."
            },
            "functionSelector": "e8a0aed3",
            "id": 11286,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 11239,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11238,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6177,
                  "src": "962:12:53"
                },
                "nodeType": "ModifierInvocation",
                "src": "962:14:53"
              }
            ],
            "name": "createToken",
            "nameLocation": "834:11:53",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11232,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nameLocation": "871:9:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 11286,
                  "src": "855:25:53",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11231,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "855:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11234,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nameLocation": "906:11:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 11286,
                  "src": "890:27:53",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11233,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "890:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11236,
                  "mutability": "mutable",
                  "name": "tokenDecimals",
                  "nameLocation": "933:13:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 11286,
                  "src": "927:19:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 11235,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "927:5:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "845:107:53"
            },
            "returnParameters": {
              "id": 11243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11242,
                  "mutability": "mutable",
                  "name": "newToken",
                  "nameLocation": "1001:8:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 11286,
                  "src": "986:23:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ExpandedIERC20_$7146",
                    "typeString": "contract ExpandedIERC20"
                  },
                  "typeName": {
                    "id": 11241,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11240,
                      "name": "ExpandedIERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7146,
                      "src": "986:14:53"
                    },
                    "referencedDeclaration": 7146,
                    "src": "986:14:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ExpandedIERC20_$7146",
                      "typeString": "contract ExpandedIERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "985:25:53"
            },
            "scope": 11287,
            "src": "825:486:53",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 11288,
        "src": "277:1036:53",
        "usedErrors": []
      }
    ],
    "src": "42:1272:53"
  },
  "legacyAST": {
    "absolutePath": "/home/kamto/code/protocol/packages/core/contracts/financial-templates/common/TokenFactory.sol",
    "exportedSymbols": {
      "Context": [
        33148
      ],
      "ERC20": [
        32097
      ],
      "Exclusive": [
        6284
      ],
      "ExpandedERC20": [
        4517
      ],
      "ExpandedIERC20": [
        7146
      ],
      "IERC20": [
        32175
      ],
      "IERC20Metadata": [
        32520
      ],
      "Lockable": [
        6211
      ],
      "MultiRole": [
        6836
      ],
      "Shared": [
        6380
      ],
      "SyntheticToken": [
        11221
      ],
      "TokenFactory": [
        11287
      ]
    },
    "id": 11288,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11223,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:53"
      },
      {
        "absolutePath": "/home/kamto/code/protocol/packages/core/contracts/financial-templates/common/SyntheticToken.sol",
        "file": "./SyntheticToken.sol",
        "id": 11224,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11288,
        "sourceUnit": 11222,
        "src": "67:30:53",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kamto/code/protocol/packages/core/contracts/common/interfaces/ExpandedIERC20.sol",
        "file": "../../common/interfaces/ExpandedIERC20.sol",
        "id": 11225,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11288,
        "sourceUnit": 7147,
        "src": "98:52:53",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kamto/code/protocol/packages/core/contracts/common/implementation/Lockable.sol",
        "file": "../../common/implementation/Lockable.sol",
        "id": 11226,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11288,
        "sourceUnit": 6212,
        "src": "151:50:53",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11228,
              "name": "Lockable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6211,
              "src": "302:8:53"
            },
            "id": 11229,
            "nodeType": "InheritanceSpecifier",
            "src": "302:8:53"
          }
        ],
        "contractDependencies": [
          11221
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 11227,
          "nodeType": "StructuredDocumentation",
          "src": "203:72:53",
          "text": " @title Factory for creating new mintable and burnable tokens."
        },
        "fullyImplemented": true,
        "id": 11287,
        "linearizedBaseContracts": [
          11287,
          6211
        ],
        "name": "TokenFactory",
        "nameLocation": "286:12:53",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 11285,
              "nodeType": "Block",
              "src": "1011:300:53",
              "statements": [
                {
                  "assignments": [
                    11246
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11246,
                      "mutability": "mutable",
                      "name": "mintableToken",
                      "nameLocation": "1036:13:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 11285,
                      "src": "1021:28:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SyntheticToken_$11221",
                        "typeString": "contract SyntheticToken"
                      },
                      "typeName": {
                        "id": 11245,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11244,
                          "name": "SyntheticToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11221,
                          "src": "1021:14:53"
                        },
                        "referencedDeclaration": 11221,
                        "src": "1021:14:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SyntheticToken_$11221",
                          "typeString": "contract SyntheticToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11254,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 11250,
                        "name": "tokenName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11232,
                        "src": "1071:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 11251,
                        "name": "tokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11234,
                        "src": "1082:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 11252,
                        "name": "tokenDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11236,
                        "src": "1095:13:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 11249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1052:18:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_SyntheticToken_$11221_$",
                        "typeString": "function (string memory,string memory,uint8) returns (contract SyntheticToken)"
                      },
                      "typeName": {
                        "id": 11248,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11247,
                          "name": "SyntheticToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11221,
                          "src": "1056:14:53"
                        },
                        "referencedDeclaration": 11221,
                        "src": "1056:14:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SyntheticToken_$11221",
                          "typeString": "contract SyntheticToken"
                        }
                      }
                    },
                    "id": 11253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1052:57:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SyntheticToken_$11221",
                      "typeString": "contract SyntheticToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1021:88:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11258,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1143:3:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1143:10:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 11255,
                        "name": "mintableToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11246,
                        "src": "1119:13:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SyntheticToken_$11221",
                          "typeString": "contract SyntheticToken"
                        }
                      },
                      "id": 11257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addMinter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11106,
                      "src": "1119:23:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 11260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1119:35:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11261,
                  "nodeType": "ExpressionStatement",
                  "src": "1119:35:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11265,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1188:3:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1188:10:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 11262,
                        "name": "mintableToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11246,
                        "src": "1164:13:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SyntheticToken_$11221",
                          "typeString": "contract SyntheticToken"
                        }
                      },
                      "id": 11264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addBurner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11143,
                      "src": "1164:23:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 11267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1164:35:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11268,
                  "nodeType": "ExpressionStatement",
                  "src": "1164:35:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11272,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1234:3:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1234:10:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 11269,
                        "name": "mintableToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11246,
                        "src": "1209:13:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SyntheticToken_$11221",
                          "typeString": "contract SyntheticToken"
                        }
                      },
                      "id": 11271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "resetOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11180,
                      "src": "1209:24:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 11274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1209:36:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11275,
                  "nodeType": "ExpressionStatement",
                  "src": "1209:36:53"
                },
                {
                  "expression": {
                    "id": 11283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11276,
                      "name": "newToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11242,
                      "src": "1255:8:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ExpandedIERC20_$7146",
                        "typeString": "contract ExpandedIERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 11280,
                              "name": "mintableToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11246,
                              "src": "1289:13:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SyntheticToken_$11221",
                                "typeString": "contract SyntheticToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SyntheticToken_$11221",
                                "typeString": "contract SyntheticToken"
                              }
                            ],
                            "id": 11279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1281:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11278,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1281:7:53",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1281:22:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 11277,
                        "name": "ExpandedIERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7146,
                        "src": "1266:14:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ExpandedIERC20_$7146_$",
                          "typeString": "type(contract ExpandedIERC20)"
                        }
                      },
                      "id": 11282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1266:38:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ExpandedIERC20_$7146",
                        "typeString": "contract ExpandedIERC20"
                      }
                    },
                    "src": "1255:49:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ExpandedIERC20_$7146",
                      "typeString": "contract ExpandedIERC20"
                    }
                  },
                  "id": 11284,
                  "nodeType": "ExpressionStatement",
                  "src": "1255:49:53"
                }
              ]
            },
            "documentation": {
              "id": 11230,
              "nodeType": "StructuredDocumentation",
              "src": "317:503:53",
              "text": " @notice Create a new token and return it to the caller.\n @dev The caller will become the only minter and burner and the new owner capable of assigning the roles.\n @param tokenName used to describe the new token.\n @param tokenSymbol short ticker abbreviation of the name. Ideally < 5 chars.\n @param tokenDecimals used to define the precision used in the token's numerical representation.\n @return newToken an instance of the newly created token interface."
            },
            "functionSelector": "e8a0aed3",
            "id": 11286,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 11239,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11238,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6177,
                  "src": "962:12:53"
                },
                "nodeType": "ModifierInvocation",
                "src": "962:14:53"
              }
            ],
            "name": "createToken",
            "nameLocation": "834:11:53",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11232,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nameLocation": "871:9:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 11286,
                  "src": "855:25:53",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11231,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "855:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11234,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nameLocation": "906:11:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 11286,
                  "src": "890:27:53",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11233,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "890:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11236,
                  "mutability": "mutable",
                  "name": "tokenDecimals",
                  "nameLocation": "933:13:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 11286,
                  "src": "927:19:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 11235,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "927:5:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "845:107:53"
            },
            "returnParameters": {
              "id": 11243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11242,
                  "mutability": "mutable",
                  "name": "newToken",
                  "nameLocation": "1001:8:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 11286,
                  "src": "986:23:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ExpandedIERC20_$7146",
                    "typeString": "contract ExpandedIERC20"
                  },
                  "typeName": {
                    "id": 11241,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11240,
                      "name": "ExpandedIERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7146,
                      "src": "986:14:53"
                    },
                    "referencedDeclaration": 7146,
                    "src": "986:14:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ExpandedIERC20_$7146",
                      "typeString": "contract ExpandedIERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "985:25:53"
            },
            "scope": 11287,
            "src": "825:486:53",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 11288,
        "src": "277:1036:53",
        "usedErrors": []
      }
    ],
    "src": "42:1272:53"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {},
      "links": {},
      "address": "0x7c96d6235CfaaCcAc5d80fCe74E6032B25dd1F03",
      "transactionHash": ""
    },
    "42": {
      "events": {},
      "links": {},
      "address": "0xe7e87f89e3D15617261Fd52188Ca64803165f8Af",
      "transactionHash": ""
    },
    "97": {
      "events": {},
      "links": {},
      "address": "0x02eE9A7cfbAdcE71fDcb8ca95C2649d92c20CC53",
      "transactionHash": "0x818858b89805ad0290b74a19540966bfde1d54afd3ddb661e7a4b45c1766af9e"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0xeEa28d4309F0340eB21586e7378ec0381f841fce",
      "transactionHash": "0x99d2f27e31fca81837207d6a341ffa7c5ba7d7c4ee4d97239c30a6427670787b"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-07T22:22:59.007Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "createToken(string,string,uint8)": {
        "details": "The caller will become the only minter and burner and the new owner capable of assigning the roles.",
        "params": {
          "tokenDecimals": "used to define the precision used in the token's numerical representation.",
          "tokenName": "used to describe the new token.",
          "tokenSymbol": "short ticker abbreviation of the name. Ideally < 5 chars."
        },
        "returns": {
          "newToken": "an instance of the newly created token interface."
        }
      }
    },
    "title": "Factory for creating new mintable and burnable tokens.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "createToken(string,string,uint8)": {
        "notice": "Create a new token and return it to the caller."
      }
    },
    "version": 1
  }
}